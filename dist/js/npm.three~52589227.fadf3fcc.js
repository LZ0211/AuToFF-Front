(window.webpackJsonp=window.webpackJsonp||[]).push([["npm.three~52589227"],{"5a89":function(t,e,i){"use strict";i.d(e,"a",(function(){return s})),i.d(e,"b",(function(){return zo})),i.d(e,"c",(function(){return Mt})),i.d(e,"d",(function(){return Ue})),i.d(e,"e",(function(){return Ye})),i.d(e,"f",(function(){return Fo})),i.d(e,"g",(function(){return st})),i.d(e,"h",(function(){return bs})),i.d(e,"i",(function(){return No})),i.d(e,"j",(function(){return n})),i.d(e,"k",(function(){return N})),i.d(e,"l",(function(){return Ve})),i.d(e,"m",(function(){return ta})),i.d(e,"n",(function(){return ua})),i.d(e,"o",(function(){return da})),i.d(e,"p",(function(){return Xa})),i.d(e,"q",(function(){return Va})),i.d(e,"r",(function(){return r})),i.d(e,"s",(function(){return j})),i.d(e,"t",(function(){return Jt})),i.d(e,"u",(function(){return di})),i.d(e,"v",(function(){return qn})),i.d(e,"w",(function(){return $s})),i.d(e,"x",(function(){return a})),i.d(e,"y",(function(){return ye})),i.d(e,"z",(function(){return Wi})),i.d(e,"A",(function(){return vt})),i.d(e,"B",(function(){return L})),i.d(e,"C",(function(){return Xo})),i.d(e,"D",(function(){return ha})),i.d(e,"E",(function(){return xi})),i.d(e,"F",(function(){return Vt})),i.d(e,"G",(function(){return Ys})),i.d(e,"H",(function(){return A})),i.d(e,"I",(function(){return T})),i.d(e,"J",(function(){return b})),i.d(e,"K",(function(){return vi})),i.d(e,"L",(function(){return X})),i.d(e,"M",(function(){return xt})),i.d(e,"N",(function(){return ft})),i.d(e,"O",(function(){return sa}));
/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const r={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},n=2,a=0,s=2,o=301,l=302,h=303,u=304,c=306,d=1001,p=1003,f=1006,m=1008,g=1009,v=1012,x=1015,_=1016,y=1020,M=1023,S=1026,w=1027,b=0,T=1,A=2,C=3e3,E=3001,L=3201,P="srgb",D="srgb-linear",I=35044,R=35048;class N{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){var i;return void 0!==this._listeners&&void 0!==(i=this._listeners)[t]&&-1!==i[t].indexOf(e)}removeEventListener(t,e){var i;void 0!==this._listeners&&void 0!==(t=this._listeners[t])&&-1!==(i=t.indexOf(e))&&t.splice(i,1)}dispatchEvent(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;var i=e.slice(0);for(let e=0,r=i.length;e<r;e++)i[e].call(this,t);t.target=null}}}}const z=[];for(let t=0;t<256;t++)z[t]=(t<16?"0":"")+t.toString(16);let O=1234567;const U=Math.PI/180,F=180/Math.PI;function B(){var t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(z[255&t]+z[t>>8&255]+z[t>>16&255]+z[t>>24&255]+"-"+z[255&e]+z[e>>8&255]+"-"+z[e>>16&15|64]+z[e>>24&255]+"-"+z[63&i|128]+z[i>>8&255]+"-"+z[i>>16&255]+z[i>>24&255]+z[255&r]+z[r>>8&255]+z[r>>16&255]+z[r>>24&255]).toLowerCase()}function V(t,e,i){return Math.max(e,Math.min(i,t))}function k(t,e){return(t%e+e)%e}function G(t,e,i){return(1-i)*t+i*e}function W(t){return 0==(t&t-1)&&0!==t}function H(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}var j=Object.freeze({__proto__:null,DEG2RAD:U,RAD2DEG:F,generateUUID:B,clamp:V,euclideanModulo:k,mapLinear:function(t,e,i,r,n){return r+(t-e)*(n-r)/(i-e)},inverseLerp:function(t,e,i){return t!==e?(i-t)/(e-t):0},lerp:G,damp:function(t,e,i,r){return G(t,e,1-Math.exp(-i*r))},pingpong:function(t,e=1){return e-Math.abs(k(t,2*e)-e)},smoothstep:function(t,e,i){return t<=e?0:i<=t?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:i<=t?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(O=t),t=O+=1831565813,t=Math.imul(t^t>>>15,1|t),(((t^=t+Math.imul(t^t>>>7,61|t))^t>>>14)>>>0)/4294967296},degToRad:function(t){return t*U},radToDeg:function(t){return t*F},isPowerOfTwo:W,ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:H,setQuaternionFromProperEuler:function(t,e,i,r,n){var a=Math.cos,s=Math.sin,o=a(i/2),l=s(i/2),h=a((e+r)/2),u=s((e+r)/2),c=a((e-r)/2),d=s((e-r)/2),p=a((r-e)/2),f=s((r-e)/2);switch(n){case"XYX":t.set(o*u,l*c,l*d,o*h);break;case"YZY":t.set(l*d,o*u,l*c,o*h);break;case"ZXZ":t.set(l*c,l*d,o*u,o*h);break;case"XZX":t.set(o*u,l*f,l*p,o*h);break;case"YXY":t.set(l*p,o*u,l*f,o*h);break;case"ZYZ":t.set(l*f,l*p,o*u,o*h)}},normalize:function(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}},denormalize:function(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}});class X{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?this.addVectors(t,e):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?this.subVectors(t,e):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){var e=this.x,i=this.y;t=t.elements;return this.x=t[0]*e+t[3]*i+t[6],this.y=t[1]*e+t[4]*i+t[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){var e=this.x-t.x;return e*e+(t=this.y-t.y)*t}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,i){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){var i=Math.cos(e),r=(e=Math.sin(e),this.x-t.x),n=this.y-t.y;return this.x=r*i-n*e+t.x,this.y=r*e+n*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}X.prototype.isVector2=!0;class q{constructor(){this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,i,r,n,a,s,o,l){var h=this.elements;return h[0]=t,h[1]=r,h[2]=s,h[3]=e,h[4]=n,h[5]=o,h[6]=i,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){var e=this.elements;t=t.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){return t=t.elements,this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){t=t.elements,e=e.elements;var i=this.elements,r=t[0],n=t[3],a=t[6],s=t[1],o=t[4],l=t[7],h=t[2],u=t[5],c=(t=t[8],e[0]),d=e[3],p=e[6],f=e[1],m=e[4],g=e[7],v=e[2],x=e[5];e=e[8];return i[0]=r*c+n*f+a*v,i[3]=r*d+n*m+a*x,i[6]=r*p+n*g+a*e,i[1]=s*c+o*f+l*v,i[4]=s*d+o*m+l*x,i[7]=s*p+o*g+l*e,i[2]=h*c+u*f+t*v,i[5]=h*d+u*m+t*x,i[8]=h*p+u*g+t*e,this}multiplyScalar(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){var t,e=(t=this.elements)[0],i=t[1],r=t[2],n=t[3],a=t[4],s=t[5],o=t[6],l=t[7];return e*a*(t=t[8])-e*s*l-i*n*t+i*s*o+r*n*l-r*a*o}invert(){var t=this.elements,e=t[0],i=t[1],r=t[2],n=t[3],a=t[4],s=t[5],o=t[6],l=t[7],h=t[8],u=h*a-s*l,c=s*o-h*n,d=l*n-a*o,p=e*u+i*c+r*d;return 0==p?this.set(0,0,0,0,0,0,0,0,0):(t[0]=u*(u=1/p),t[1]=(r*l-h*i)*u,t[2]=(s*i-r*a)*u,t[3]=c*u,t[4]=(h*e-r*o)*u,t[5]=(r*n-s*e)*u,t[6]=d*u,t[7]=(i*o-l*e)*u,t[8]=(a*e-i*n)*u,this)}transpose(){var t=this.elements,e=t[1];return t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,r,n,a,s){var o=Math.cos(n);n=Math.sin(n);return this.set(i*o,i*n,-i*(o*a+n*s)+a+t,-r*n,r*o,-r*(-n*a+o*s)+s+e,0,0,1),this}scale(t,e){var i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this}rotate(t){var e=Math.cos(t),i=(t=Math.sin(t),this.elements),r=i[0],n=i[3],a=i[6],s=i[1],o=i[4],l=i[7];return i[0]=e*r+t*s,i[3]=e*n+t*o,i[6]=e*a+t*l,i[1]=-t*r+e*s,i[4]=-t*n+e*o,i[7]=-t*a+e*l,this}translate(t,e){var i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this}equals(t){var e=this.elements,i=t.elements;for(let t=0;t<9;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function Y(t){for(let e=t.length-1;0<=e;--e)if(65535<t[e])return 1}function J(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function Z(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function K(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}q.prototype.isMatrix3=!0,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const Q={srgb:{"srgb-linear":Z},"srgb-linear":{srgb:K}},$={legacyMode:!0,get workingColorSpace(){return D},set workingColorSpace(t){},convert:function(t,e,i){if(this.legacyMode||e===i||!e||!i)return t;if(Q[e]&&void 0!==Q[e][i])return e=Q[e][i],t.r=e(t.r),t.g=e(t.g),t.b=e(t.b),t;throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},tt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},et={r:0,g:0,b:0},it={h:0,s:0,l:0},rt={h:0,s:0,l:0};function nt(t,e,i){return i<0&&(i+=1),1<i&&--i,i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}function at(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class st{constructor(t,e,i){return void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=P){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,$.toWorkingColorSpace(this,e),this}setRGB(t,e,i,r=D){return this.r=t,this.g=e,this.b=i,$.toWorkingColorSpace(this,r),this}setHSL(t,e,i,r=D){return t=k(t,1),e=V(e,0,1),i=V(i,0,1),0===e?this.r=this.g=this.b=i:(this.r=nt(e=2*i-(i=i<=.5?i*(1+e):i+e-i*e),i,t+1/3),this.g=nt(e,i,t),this.b=nt(e,i,t-1/3)),$.toWorkingColorSpace(this,r),this}setStyle(t,e=P){function i(t){void 0!==t&&parseFloat(t)}if(l=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;var r,n,a,s=l[1],o=l[2];switch(s){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,$.toWorkingColorSpace(this,e),i(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,$.toWorkingColorSpace(this,e),i(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return r=parseFloat(t[1])/360,n=parseInt(t[2],10)/100,a=parseInt(t[3],10)/100,i(t[4]),this.setHSL(r,n,a,e)}}else if(l=/^\#([A-Fa-f\d]+)$/.exec(t)){var l=(s=l[1]).length;if(3===l)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,$.toWorkingColorSpace(this,e),this;if(6===l)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,$.toWorkingColorSpace(this,e),this}return t&&0<t.length?this.setColorName(t,e):this}setColorName(t,e=P){return void 0!==(t=tt[t.toLowerCase()])&&this.setHex(t,e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Z(t.r),this.g=Z(t.g),this.b=Z(t.b),this}copyLinearToSRGB(t){return this.r=K(t.r),this.g=K(t.g),this.b=K(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=P){return $.fromWorkingColorSpace(at(this,et),t),V(255*et.r,0,255)<<16^V(255*et.g,0,255)<<8^V(255*et.b,0,255)<<0}getHexString(t=P){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=D){$.fromWorkingColorSpace(at(this,et),e);var i=et.r,r=et.g,n=et.b,a=(e=Math.max(i,r,n),Math.min(i,r,n));let s,o;var l=(a+e)/2;if(a===e)s=0,o=0;else{var h=e-a;switch(o=l<=.5?h/(e+a):h/(2-e-a),e){case i:s=(r-n)/h+(r<n?6:0);break;case r:s=(n-i)/h+2;break;case n:s=(i-r)/h+4}s/=6}return t.h=s,t.s=o,t.l=l,t}getRGB(t,e=D){return $.fromWorkingColorSpace(at(this,et),e),t.r=et.r,t.g=et.g,t.b=et.b,t}getStyle(t=P){return $.fromWorkingColorSpace(at(this,et),t),t!==P?`color(${t} ${et.r} ${et.g} ${et.b})`:`rgb(${255*et.r|0},${255*et.g|0},${255*et.b|0})`}offsetHSL(t,e,i){return this.getHSL(it),it.h+=t,it.s+=e,it.l+=i,this.setHSL(it.h,it.s,it.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(it),t.getHSL(rt);t=G(it.h,rt.h,e);var i=G(it.s,rt.s,e);e=G(it.l,rt.l,e);return this.setHSL(t,i,e),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let ot;st.NAMES=tt,st.prototype.isColor=!0,st.prototype.r=1,st.prototype.g=1,st.prototype.b=1;class lt{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;var i;return 2048<(e=t instanceof HTMLCanvasElement?t:((ot=void 0===ot?J("canvas"):ot).width=t.width,ot.height=t.height,i=ot.getContext("2d"),t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),ot)).width||2048<e.height?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){var e=J("canvas"),i=(e.width=t.width,e.height=t.height,e.getContext("2d")),r=(i.drawImage(t,0,0,t.width,t.height),i.getImageData(0,0,t.width,t.height)),n=r.data;for(let t=0;t<n.length;t++)n[t]=255*Z(n[t]/255);return i.putImageData(r,0,0),e}if(t.data){var a=t.data.slice(0);for(let t=0;t<a.length;t++)a instanceof Uint8Array||a instanceof Uint8ClampedArray?a[t]=Math.floor(255*Z(a[t]/255)):a[t]=Z(a[t]);return{data:a,width:t.width,height:t.height}}return t}}class ht{constructor(t=null){this.uuid=B(),this.data=t,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){var e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];var i={uuid:this.uuid,url:""},r=this.data;if(null!==r){let t;if(Array.isArray(r)){t=[];for(let e=0,i=r.length;e<i;e++)r[e].isDataTexture?t.push(ut(r[e].image)):t.push(ut(r[e]))}else t=ut(r);i.url=t}return e||(t.images[this.uuid]=i),i}}function ut(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?lt.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:{}}ht.prototype.isSource=!0;let ct=0;class dt extends N{constructor(t=dt.DEFAULT_IMAGE,e=dt.DEFAULT_MAPPING,i=d,r=d,n=f,a=m,s=M,o=g,l=1,h=C){super(),Object.defineProperty(this,"id",{value:ct++}),this.uuid=B(),this.name="",this.source=new ht(t),this.mipmaps=[],this.mapping=e,this.wrapS=i,this.wrapT=r,this.magFilter=n,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new X(0,0),this.repeat=new X(1,1),this.center=new X(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new q,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){var e,i=void 0===t||"string"==typeof t;return i||void 0===t.textures[this.uuid]?(e={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment},"{}"!==JSON.stringify(this.userData)&&(e.userData=this.userData),i||(t.textures[this.uuid]=e),e):t.textures[this.uuid]}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300===this.mapping){if(t.applyMatrix3(this.matrix),t.x<0||1<t.x)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case d:t.x=t.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||1<t.y)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case d:t.y=t.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}this.flipY&&(t.y=1-t.y)}return t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}dt.DEFAULT_IMAGE=null,dt.DEFAULT_MAPPING=300,dt.prototype.isTexture=!0;class pt{constructor(t=0,e=0,i=0,r=1){this.x=t,this.y=e,this.z=i,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,r){return this.x=t,this.y=e,this.z=i,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?this.addVectors(t,e):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?this.subVectors(t,e):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){var e=this.x,i=this.y,r=this.z,n=this.w;t=t.elements;return this.x=t[0]*e+t[4]*i+t[8]*r+t[12]*n,this.y=t[1]*e+t[5]*i+t[9]*r+t[13]*n,this.z=t[2]*e+t[6]*i+t[10]*r+t[14]*n,this.w=t[3]*e+t[7]*i+t[11]*r+t[15]*n,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,r,n;var a,s,o,l,h,u,c=(t=t.elements)[0],d=t[4],p=t[8],f=t[1],m=t[5],g=t[9],v=t[2],x=t[6];t=t[10];if(Math.abs(d-f)<.01&&Math.abs(p-v)<.01&&Math.abs(g-x)<.01)Math.abs(d+f)<.1&&Math.abs(p+v)<.1&&Math.abs(g+x)<.1&&Math.abs(c+m+t-3)<.1?this.set(1,0,0,0):(e=Math.PI,o=(t+1)/2,l=(d+f)/4,h=(p+v)/4,u=(g+x)/4,(s=(m+1)/2)<(a=(c+1)/2)&&o<a?n=a<.01?(i=0,r=.707106781):(i=Math.sqrt(a),r=l/i,h/i):o<s?n=s<.01?(i=.707106781,r=0,.707106781):(r=Math.sqrt(s),i=l/r,u/r):o<.01?(i=.707106781,r=.707106781,n=0):(n=Math.sqrt(o),i=h/n,r=u/n),this.set(i,r,n,e));else{let e=Math.sqrt((x-g)*(x-g)+(p-v)*(p-v)+(f-d)*(f-d));Math.abs(e)<.001&&(e=1),this.x=(x-g)/e,this.y=(p-v)/e,this.z=(f-d)/e,this.w=Math.acos((c+m+t-1)/2)}return this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,i){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}pt.prototype.isVector4=!0;class ft extends N{constructor(t,e,i={}){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new pt(0,0,t,e),this.scissorTest=!1,this.viewport=new pt(0,0,t,e),t={width:t,height:e,depth:1},this.texture=new dt(t,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.internalFormat=void 0!==i.internalFormat?i.internalFormat:null,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:f,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null,this.samples=void 0!==i.samples?i.samples:0}setSize(t,e,i=1){this.width===t&&this.height===e&&this.depth===i||(this.width=t,this.height=e,this.depth=i,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;var e=Object.assign({},t.texture.image);return this.texture.source=new ht(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}ft.prototype.isWebGLRenderTarget=!0;class mt extends dt{constructor(t=null,e=1,i=1,r=1){super(null),this.image={data:t,width:e,height:i,depth:r},this.magFilter=p,this.minFilter=p,this.wrapR=d,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}mt.prototype.isDataArrayTexture=!0;class gt extends dt{constructor(t=null,e=1,i=1,r=1){super(null),this.image={data:t,width:e,height:i,depth:r},this.magFilter=p,this.minFilter=p,this.wrapR=d,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}gt.prototype.isData3DTexture=!0;class vt{constructor(t=0,e=0,i=0,r=1){this._x=t,this._y=e,this._z=i,this._w=r}static slerp(t,e,i,r){return i.slerpQuaternions(t,e,r)}static slerpFlat(t,e,i,r,n,a,s){let o=i[r+0],l=i[r+1],h=i[r+2],u=i[r+3];i=n[a+0],r=n[a+1];var c=n[a+2];n=n[a+3];if(0===s)t[e+0]=o,t[e+1]=l,t[e+2]=h,t[e+3]=u;else if(1===s)t[e+0]=i,t[e+1]=r,t[e+2]=c,t[e+3]=n;else{if(u!==n||o!==i||l!==r||h!==c){let t=1-s;var d=0<=(a=o*i+l*r+h*c+u*n)?1:-1,p=1-a*a;a=(p>Number.EPSILON&&(p=Math.sqrt(p),a=Math.atan2(p,a*d),t=Math.sin(t*a)/p,s=Math.sin(s*a)/p),s*d);o=o*t+i*a,l=l*t+r*a,h=h*t+c*a,u=u*t+n*a,t===1-s&&(o*=p=1/Math.sqrt(o*o+l*l+h*h+u*u),l*=p,h*=p,u*=p)}t[e]=o,t[e+1]=l,t[e+2]=h,t[e+3]=u}}static multiplyQuaternionsFlat(t,e,i,r,n,a){var s=i[r],o=i[r+1],l=i[r+2],h=(i=i[r+3],r=n[a],n[a+1]),u=n[a+2];n=n[a+3];return t[e]=s*n+i*r+o*u-l*h,t[e+1]=o*n+i*h+l*r-s*u,t[e+2]=l*n+i*u+s*h-o*r,t[e+3]=i*n-s*r-o*h-l*u,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,r){return this._x=t,this._y=e,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var i=t._x,r=t._y,n=t._z,a=(t=t._order,Math.cos),s=Math.sin,o=a(i/2),l=a(r/2),h=a(n/2),u=s(i/2),c=s(r/2),d=s(n/2);switch(t){case"XYZ":this._x=u*l*h+o*c*d,this._y=o*c*h-u*l*d,this._z=o*l*d+u*c*h,this._w=o*l*h-u*c*d;break;case"YXZ":this._x=u*l*h+o*c*d,this._y=o*c*h-u*l*d,this._z=o*l*d-u*c*h,this._w=o*l*h+u*c*d;break;case"ZXY":this._x=u*l*h-o*c*d,this._y=o*c*h+u*l*d,this._z=o*l*d+u*c*h,this._w=o*l*h-u*c*d;break;case"ZYX":this._x=u*l*h-o*c*d,this._y=o*c*h+u*l*d,this._z=o*l*d-u*c*h,this._w=o*l*h+u*c*d;break;case"YZX":this._x=u*l*h+o*c*d,this._y=o*c*h+u*l*d,this._z=o*l*d-u*c*h,this._w=o*l*h-u*c*d;break;case"XZY":this._x=u*l*h-o*c*d,this._y=o*c*h-u*l*d,this._z=o*l*d+u*c*h,this._w=o*l*h+u*c*d}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){e/=2;var i=Math.sin(e);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(t){var e=(t=t.elements)[0],i=t[4],r=t[8],n=t[1],a=t[5],s=t[9],o=t[2],l=t[6],h=e+a+(t=t[10]);return 0<h?(h=.5/Math.sqrt(h+1),this._w=.25/h,this._x=(l-s)*h,this._y=(r-o)*h,this._z=(n-i)*h):a<e&&t<e?(h=2*Math.sqrt(1+e-a-t),this._w=(l-s)/h,this._x=.25*h,this._y=(i+n)/h,this._z=(r+o)/h):t<a?(h=2*Math.sqrt(1+a-e-t),this._w=(r-o)/h,this._x=(i+n)/h,this._y=.25*h,this._z=(s+l)/h):(h=2*Math.sqrt(1+t-e-a),this._w=(n-i)/h,this._x=(r+o)/h,this._y=(s+l)/h,this._z=.25*h),this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0):(this._x=0,this._y=-t.z,this._z=t.y)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x),this._w=i,this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(V(this.dot(t),-1,1)))}rotateTowards(t,e){var i=this.angleTo(t);return 0!==i&&(e=Math.min(1,e/i),this.slerp(t,e)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(t=1/t),this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?this.multiplyQuaternions(t,e):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){var i=t._x,r=t._y,n=t._z,a=(t=t._w,e._x),s=e._y,o=e._z;e=e._w;return this._x=i*e+t*a+r*o-n*s,this._y=r*e+t*s+n*a-i*o,this._z=n*e+t*o+i*s-r*a,this._w=t*e-i*a-r*s-n*o,this._onChangeCallback(),this}slerp(t,e){if(0!==e){if(1===e)return this.copy(t);var i,r,n=this._x,a=this._y,s=this._z,o=this._w;let l=o*t._w+n*t._x+a*t._y+s*t._z;l<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,l=-l):this.copy(t),1<=l?(this._w=o,this._x=n,this._y=a,this._z=s):((t=1-l*l)<=Number.EPSILON?(this._w=(i=1-e)*o+e*this._w,this._x=i*n+e*this._x,this._y=i*a+e*this._y,this._z=i*s+e*this._z,this.normalize()):(i=Math.sqrt(t),t=Math.atan2(i,l),r=Math.sin((1-e)*t)/i,e=Math.sin(e*t)/i,this._w=o*r+this._w*e,this._x=n*r+this._x*e,this._y=a*r+this._y*e,this._z=s*r+this._z*e),this._onChangeCallback())}return this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){var t=Math.random(),e=Math.sqrt(1-t),i=(t=Math.sqrt(t),2*Math.PI*Math.random()),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),t*Math.sin(r),t*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}vt.prototype.isQuaternion=!0;class xt{constructor(t=0,e=0,i=0){this.x=t,this.y=e,this.z=i}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?this.addVectors(t,e):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?this.subVectors(t,e):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?this.multiplyVectors(t,e):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler,this.applyQuaternion(yt.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(yt.setFromAxisAngle(t,e))}applyMatrix3(t){var e=this.x,i=this.y,r=this.z;t=t.elements;return this.x=t[0]*e+t[3]*i+t[6]*r,this.y=t[1]*e+t[4]*i+t[7]*r,this.z=t[2]*e+t[5]*i+t[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){var e=this.x,i=this.y,r=this.z,n=1/((t=t.elements)[3]*e+t[7]*i+t[11]*r+t[15]);return this.x=(t[0]*e+t[4]*i+t[8]*r+t[12])*n,this.y=(t[1]*e+t[5]*i+t[9]*r+t[13])*n,this.z=(t[2]*e+t[6]*i+t[10]*r+t[14])*n,this}applyQuaternion(t){var e=this.x,i=this.y,r=this.z,n=t.x,a=t.y,s=t.z,o=(t=t.w)*e+a*r-s*i,l=t*i+s*e-n*r,h=t*r+n*i-a*e;e=-n*e-a*i-s*r;return this.x=o*t+e*-n+l*-s-h*-a,this.y=l*t+e*-a+h*-n-o*-s,this.z=h*t+e*-s+o*-a-l*-n,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){var e=this.x,i=this.y,r=this.z;t=t.elements;return this.x=t[0]*e+t[4]*i+t[8]*r,this.y=t[1]*e+t[5]*i+t[9]*r,this.z=t[2]*e+t[6]*i+t[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t,e){return void 0!==e?this.crossVectors(t,e):this.crossVectors(this,t)}crossVectors(t,e){var i=t.x,r=t.y,n=(t=t.z,e.x),a=e.y;e=e.z;return this.x=r*e-t*a,this.y=t*n-i*e,this.z=i*a-r*n,this}projectOnVector(t){var e=t.lengthSq();return 0===e?this.set(0,0,0):(e=t.dot(this)/e,this.copy(t).multiplyScalar(e))}projectOnPlane(t){return _t.copy(this).projectOnVector(t),this.sub(_t)}reflect(t){return this.sub(_t.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){var e=Math.sqrt(this.lengthSq()*t.lengthSq());return 0===e?Math.PI/2:(t=this.dot(t)/e,Math.acos(V(t,-1,1)))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){var e=this.x-t.x,i=this.y-t.y;return e*e+i*i+(t=this.z-t.z)*t}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){var r=Math.sin(e)*t;return this.x=r*Math.sin(i),this.y=Math.cos(e)*t,this.z=r*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){return t=t.elements,this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(t){var e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length();t=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=t,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,i){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){var t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(e),this.y=i*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}xt.prototype.isVector3=!0;const _t=new xt,yt=new vt;class Mt{constructor(t=new xt(1/0,1/0,1/0),e=new xt(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,i=1/0,r=1/0,n=-1/0,a=-1/0,s=-1/0;for(let u=0,c=t.length;u<c;u+=3){var o=t[u],l=t[u+1],h=t[u+2];o<e&&(e=o),l<i&&(i=l),h<r&&(r=h),o>n&&(n=o),l>a&&(a=l),h>s&&(s=h)}return this.min.set(e,i,r),this.max.set(n,a,s),this}setFromBufferAttribute(t){let e=1/0,i=1/0,r=1/0,n=-1/0,a=-1/0,s=-1/0;for(let u=0,c=t.count;u<c;u++){var o=t.getX(u),l=t.getY(u),h=t.getZ(u);o<e&&(e=o),l<i&&(i=l),h<r&&(r=h),o>n&&(n=o),l>a&&(a=l),h>s&&(s=h)}return this.min.set(e,i,r),this.max.set(n,a,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){return e=wt.copy(e).multiplyScalar(.5),this.min.copy(t).sub(e),this.max.copy(t).add(e),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);var i=t.geometry;if(void 0!==i)if(e&&null!=i.attributes&&void 0!==i.attributes.position){var r=i.attributes.position;for(let e=0,i=r.count;e<i;e++)wt.fromBufferAttribute(r,e).applyMatrix4(t.matrixWorld),this.expandByPoint(wt)}else null===i.boundingBox&&i.computeBoundingBox(),bt.copy(i.boundingBox),bt.applyMatrix4(t.matrixWorld),this.union(bt);var n=t.children;for(let t=0,i=n.length;t<i;t++)this.expandByObject(n[t],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,wt),wt.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return i=0<t.normal.x?(e=t.normal.x*this.min.x,t.normal.x*this.max.x):(e=t.normal.x*this.max.x,t.normal.x*this.min.x),0<t.normal.y?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),0<t.normal.z?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){return!this.isEmpty()&&(this.getCenter(Dt),It.subVectors(this.max,Dt),Tt.subVectors(t.a,Dt),At.subVectors(t.b,Dt),Ct.subVectors(t.c,Dt),Et.subVectors(At,Tt),Lt.subVectors(Ct,At),Pt.subVectors(Tt,Ct),!!zt([0,-Et.z,Et.y,0,-Lt.z,Lt.y,0,-Pt.z,Pt.y,Et.z,0,-Et.x,Lt.z,0,-Lt.x,Pt.z,0,-Pt.x,-Et.y,Et.x,0,-Lt.y,Lt.x,0,-Pt.y,Pt.x,0],Tt,At,Ct,It))&&!!zt([1,0,0,0,1,0,0,0,1],Tt,At,Ct,It)&&(Rt.crossVectors(Et,Lt),zt([Rt.x,Rt.y,Rt.z],Tt,At,Ct,It))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return wt.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(wt).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(St[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),St[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),St[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),St[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),St[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),St[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),St[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),St[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(St)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Mt.prototype.isBox3=!0;const St=[new xt,new xt,new xt,new xt,new xt,new xt,new xt,new xt],wt=new xt,bt=new Mt,Tt=new xt,At=new xt,Ct=new xt,Et=new xt,Lt=new xt,Pt=new xt,Dt=new xt,It=new xt,Rt=new xt,Nt=new xt;function zt(t,e,i,r,n){for(let h=0,u=t.length-3;h<=u;h+=3){Nt.fromArray(t,h);var a=n.x*Math.abs(Nt.x)+n.y*Math.abs(Nt.y)+n.z*Math.abs(Nt.z),s=e.dot(Nt),o=i.dot(Nt),l=r.dot(Nt);if(Math.max(-Math.max(s,o,l),Math.min(s,o,l))>a)return!1}return!0}const Ot=new Mt,Ut=new xt,Ft=new xt,Bt=new xt;class Vt{constructor(t=new xt,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){var i=this.center;void 0!==e?i.copy(e):Ot.setFromPoints(t).getCenter(i);let r=0;for(let e=0,n=t.length;e<n;e++)r=Math.max(r,i.distanceToSquared(t[e]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){var i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?t.makeEmpty():(t.set(this.center,this.center),t.expandByScalar(this.radius)),t}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){var e;return Bt.subVectors(t,this.center),(t=Bt.lengthSq())>this.radius*this.radius&&(e=.5*((t=Math.sqrt(t))-this.radius),this.center.add(Bt.multiplyScalar(e/t)),this.radius+=e),this}union(t){return(!0===this.center.equals(t.center)?Ft.set(0,0,1):Ft.subVectors(t.center,this.center).normalize()).multiplyScalar(t.radius),this.expandByPoint(Ut.copy(t.center).add(Ft)),this.expandByPoint(Ut.copy(t.center).sub(Ft)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const kt=new xt,Gt=new xt,Wt=new xt,Ht=new xt,jt=new xt,Xt=new xt,qt=new xt;class Yt{constructor(t=new xt,e=new xt(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,kt)),this}closestPointToPoint(t,e){return e.subVectors(t,this.origin),(t=e.dot(this.direction))<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(t).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){var e=kt.subVectors(t,this.origin).dot(this.direction);return(e<0?this.origin:(kt.copy(this.direction).multiplyScalar(e).add(this.origin),kt)).distanceToSquared(t)}distanceSqToSegment(t,e,i,r){Gt.copy(t).add(e).multiplyScalar(.5),Wt.copy(e).sub(t).normalize(),Ht.copy(this.origin).sub(Gt);t=.5*t.distanceTo(e),e=-this.direction.dot(Wt);var n=Ht.dot(this.direction),a=-Ht.dot(Wt),s=Ht.lengthSq(),o=Math.abs(1-e*e);let l,h,u,c;return u=0<o?(l=e*a-n,h=e*n-a,c=t*o,0<=l?h>=-c?h<=c?(l*=o=1/o,h*=o,l*(l+e*h+2*n)+h*(e*l+h+2*a)+s):(h=t,-(l=Math.max(0,-(e*h+n)))*l+h*(h+2*a)+s):(h=-t,-(l=Math.max(0,-(e*h+n)))*l+h*(h+2*a)+s):h<=-c?(l=Math.max(0,-(-e*t+n)),h=0<l?-t:Math.min(Math.max(-t,-a),t),-l*l+h*(h+2*a)+s):h<=c?(l=0,(h=Math.min(Math.max(-t,-a),t))*(h+2*a)+s):(l=Math.max(0,-(e*t+n)),h=0<l?t:Math.min(Math.max(-t,-a),t),-l*l+h*(h+2*a)+s)):(h=0<e?-t:t,-(l=Math.max(0,-(e*h+n)))*l+h*(h+2*a)+s),i&&i.copy(this.direction).multiplyScalar(l).add(this.origin),r&&r.copy(Wt).multiplyScalar(h).add(Gt),u}intersectSphere(t,e){kt.subVectors(t.center,this.origin);var i=kt.dot(this.direction),r=kt.dot(kt)-i*i;return(t=t.radius*t.radius)<r||(r=i+(t=Math.sqrt(t-r)),(i-=t)<0&&r<0)?null:i<0?this.at(r,e):this.at(i,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){var e=t.normal.dot(this.direction);return 0===e?0===t.distanceToPoint(this.origin)?0:null:0<=(t=-(this.origin.dot(t.normal)+t.constant)/e)?t:null}intersectPlane(t,e){return null===(t=this.distanceToPlane(t))?null:this.at(t,e)}intersectsPlane(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,r,n,a,s,o;var l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,c=this.origin;return r=0<=l?(i=(t.min.x-c.x)*l,(t.max.x-c.x)*l):(i=(t.max.x-c.x)*l,(t.min.x-c.x)*l),a=0<=h?(n=(t.min.y-c.y)*h,(t.max.y-c.y)*h):(n=(t.max.y-c.y)*h,(t.min.y-c.y)*h),i>a||n>r||((n>i||i!=i)&&(i=n),(a<r||r!=r)&&(r=a),o=0<=u?(s=(t.min.z-c.z)*u,(t.max.z-c.z)*u):(s=(t.max.z-c.z)*u,(t.min.z-c.z)*u),i>o)||s>r||((s>i||i!=i)&&(i=s),(r=o<r||r!=r?o:r)<0)?null:this.at(0<=i?i:r,e)}intersectsBox(t){return null!==this.intersectBox(t,kt)}intersectTriangle(t,e,i,r,n){jt.subVectors(e,t),Xt.subVectors(i,t),qt.crossVectors(jt,Xt);let a,s=this.direction.dot(qt);if(0<s){if(r)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}return Ht.subVectors(this.origin,t),(e=a*this.direction.dot(Xt.crossVectors(Ht,Xt)))<0||(i=a*this.direction.dot(jt.cross(Ht)))<0||e+i>s||(r=-a*Ht.dot(qt))<0?null:this.at(r/s,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Jt{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,i,r,n,a,s,o,l,h,u,c,d,p,f,m){var g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=r,g[1]=n,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=h,g[10]=u,g[14]=c,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Jt).fromArray(this.elements)}copy(t){var e=this.elements;t=t.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],this}copyPosition(t){var e=this.elements;t=t.elements;return e[12]=t[12],e[13]=t[13],e[14]=t[14],this}setFromMatrix3(t){return t=t.elements,this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){var e=this.elements,i=t.elements,r=1/Zt.setFromMatrixColumn(t,0).length(),n=1/Zt.setFromMatrixColumn(t,1).length();t=1/Zt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*r,e[1]=i[1]*r,e[2]=i[2]*r,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*t,e[9]=i[9]*t,e[10]=i[10]*t,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler;var e,i,r,n,a=this.elements,s=t.x,o=t.y,l=t.z,h=Math.cos(s),u=(s=Math.sin(s),Math.cos(o)),c=(o=Math.sin(o),Math.cos(l));l=Math.sin(l);return"XYZ"===t.order?(i=h*c,r=h*l,n=s*c,e=s*l,a[0]=u*c,a[4]=-u*l,a[8]=o,a[1]=r+n*o,a[5]=i-e*o,a[9]=-s*u,a[2]=e-i*o,a[6]=n+r*o,a[10]=h*u):"YXZ"===t.order?(e=u*l,i=o*c,a[0]=(n=u*c)+(r=o*l)*s,a[4]=i*s-e,a[8]=h*o,a[1]=h*l,a[5]=h*c,a[9]=-s,a[2]=e*s-i,a[6]=r+n*s,a[10]=h*u):"ZXY"===t.order?(e=u*l,i=o*c,a[0]=(r=u*c)-(n=o*l)*s,a[4]=-h*l,a[8]=i+e*s,a[1]=e+i*s,a[5]=h*c,a[9]=n-r*s,a[2]=-h*o,a[6]=s,a[10]=h*u):"ZYX"===t.order?(e=h*c,i=h*l,n=s*c,r=s*l,a[0]=u*c,a[4]=n*o-i,a[8]=e*o+r,a[1]=u*l,a[5]=r*o+e,a[9]=i*o-n,a[2]=-o,a[6]=s*u,a[10]=h*u):"YZX"===t.order?(r=h*u,e=h*o,i=s*u,n=s*o,a[0]=u*c,a[4]=n-r*l,a[8]=i*l+e,a[1]=l,a[5]=h*c,a[9]=-s*c,a[2]=-o*c,a[6]=e*l+i,a[10]=r-n*l):"XZY"===t.order&&(e=h*u,i=h*o,r=s*u,n=s*o,a[0]=u*c,a[4]=-l,a[8]=o*c,a[1]=e*l+n,a[5]=h*c,a[9]=i*l-r,a[2]=r*l-i,a[6]=s*c,a[10]=n*l+e),a[3]=0,a[7]=0,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Qt,t,$t)}lookAt(t,e,i){var r=this.elements;return ie.subVectors(t,e),0===ie.lengthSq()&&(ie.z=1),ie.normalize(),te.crossVectors(i,ie),0===te.lengthSq()&&(1===Math.abs(i.z)?ie.x+=1e-4:ie.z+=1e-4,ie.normalize(),te.crossVectors(i,ie)),te.normalize(),ee.crossVectors(ie,te),r[0]=te.x,r[4]=ee.x,r[8]=ie.x,r[1]=te.y,r[5]=ee.y,r[9]=ie.y,r[2]=te.z,r[6]=ee.z,r[10]=ie.z,this}multiply(t,e){return void 0!==e?this.multiplyMatrices(t,e):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){t=t.elements,e=e.elements;var i=this.elements,r=t[0],n=t[4],a=t[8],s=t[12],o=t[1],l=t[5],h=t[9],u=t[13],c=t[2],d=t[6],p=t[10],f=t[14],m=t[3],g=t[7],v=t[11],x=(t=t[15],e[0]),_=e[4],y=e[8],M=e[12],S=e[1],w=e[5],b=e[9],T=e[13],A=e[2],C=e[6],E=e[10],L=e[14],P=e[3],D=e[7],I=e[11];e=e[15];return i[0]=r*x+n*S+a*A+s*P,i[4]=r*_+n*w+a*C+s*D,i[8]=r*y+n*b+a*E+s*I,i[12]=r*M+n*T+a*L+s*e,i[1]=o*x+l*S+h*A+u*P,i[5]=o*_+l*w+h*C+u*D,i[9]=o*y+l*b+h*E+u*I,i[13]=o*M+l*T+h*L+u*e,i[2]=c*x+d*S+p*A+f*P,i[6]=c*_+d*w+p*C+f*D,i[10]=c*y+d*b+p*E+f*I,i[14]=c*M+d*T+p*L+f*e,i[3]=m*x+g*S+v*A+t*P,i[7]=m*_+g*w+v*C+t*D,i[11]=m*y+g*b+v*E+t*I,i[15]=m*M+g*T+v*L+t*e,this}multiplyScalar(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){var t=this.elements,e=t[0],i=t[4],r=t[8],n=t[12],a=t[1],s=t[5],o=t[9],l=t[13],h=t[2],u=t[6],c=t[10],d=t[14];return t[3]*(+n*o*u-r*l*u-n*s*c+i*l*c+r*s*d-i*o*d)+t[7]*(+e*o*d-e*l*c+n*a*c-r*a*d+r*l*h-n*o*h)+t[11]*(+e*l*u-e*s*d-n*a*u+i*a*d+n*s*h-i*l*h)+t[15]*(-r*s*h-e*o*u+e*s*c+r*a*u-i*a*c+i*o*h)}transpose(){var t=this.elements,e=t[1];return t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){var r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=i),this}invert(){var t=this.elements,e=t[0],i=t[1],r=t[2],n=t[3],a=t[4],s=t[5],o=t[6],l=t[7],h=t[8],u=t[9],c=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],v=u*m*l-f*c*l+f*o*d-s*m*d-u*o*g+s*c*g,x=p*c*l-h*m*l-p*o*d+a*m*d+h*o*g-a*c*g,_=h*f*l-p*u*l+p*s*d-a*f*d-h*s*g+a*u*g,y=p*u*o-h*f*o-p*s*c+a*f*c+h*s*m-a*u*m,M=e*v+i*x+r*_+n*y;return 0==M?this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0):(t[0]=v*(v=1/M),t[1]=(f*c*n-u*m*n-f*r*d+i*m*d+u*r*g-i*c*g)*v,t[2]=(s*m*n-f*o*n+f*r*l-i*m*l-s*r*g+i*o*g)*v,t[3]=(u*o*n-s*c*n-u*r*l+i*c*l+s*r*d-i*o*d)*v,t[4]=x*v,t[5]=(h*m*n-p*c*n+p*r*d-e*m*d-h*r*g+e*c*g)*v,t[6]=(p*o*n-a*m*n-p*r*l+e*m*l+a*r*g-e*o*g)*v,t[7]=(a*c*n-h*o*n+h*r*l-e*c*l-a*r*d+e*o*d)*v,t[8]=_*v,t[9]=(p*u*n-h*f*n-p*i*d+e*f*d+h*i*g-e*u*g)*v,t[10]=(a*f*n-p*s*n+p*i*l-e*f*l-a*i*g+e*s*g)*v,t[11]=(h*s*n-a*u*n-h*i*l+e*u*l+a*i*d-e*s*d)*v,t[12]=y*v,t[13]=(h*f*r-p*u*r+p*i*c-e*f*c-h*i*m+e*u*m)*v,t[14]=(p*s*r-a*f*r-p*i*o+e*f*o+a*i*m-e*s*m)*v,t[15]=(a*u*r-h*s*r+h*i*o-e*u*o-a*i*c+e*s*c)*v,this)}scale(t){var e=this.elements,i=t.x,r=t.y;t=t.z;return e[0]*=i,e[4]*=r,e[8]*=t,e[1]*=i,e[5]*=r,e[9]*=t,e[2]*=i,e[6]*=r,e[10]*=t,e[3]*=i,e[7]*=r,e[11]*=t,this}getMaxScaleOnAxis(){var t=(i=this.elements)[0]*i[0]+i[1]*i[1]+i[2]*i[2],e=i[4]*i[4]+i[5]*i[5]+i[6]*i[6],i=i[8]*i[8]+i[9]*i[9]+i[10]*i[10];return Math.sqrt(Math.max(t,e,i))}makeTranslation(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){var e=Math.cos(t);t=Math.sin(t);return this.set(1,0,0,0,0,e,-t,0,0,t,e,0,0,0,0,1),this}makeRotationY(t){var e=Math.cos(t);t=Math.sin(t);return this.set(e,0,t,0,0,1,0,0,-t,0,e,0,0,0,0,1),this}makeRotationZ(t){var e=Math.cos(t);t=Math.sin(t);return this.set(e,-t,0,0,t,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){var i=Math.cos(e),r=(e=Math.sin(e),1-i),n=t.x,a=t.y,s=(t=t.z,r*n),o=r*a;return this.set(s*n+i,s*a-e*t,s*t+e*a,0,s*a+e*t,o*a+i,o*t-e*n,0,s*t-e*a,o*t+e*n,r*t*t+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,r,n,a){return this.set(1,i,n,0,t,1,a,0,e,r,1,0,0,0,0,1),this}compose(t,e,i){var r=this.elements,n=(s=e._x)*(u=s+s),a=s*(c=(l=e._y)+l),s=s*(d=(h=e._z)+h),o=l*c,l=l*d,h=h*d,u=(e=e._w)*u,c=e*c,d=(e=e*d,i.x),p=i.y;i=i.z;return r[0]=(1-(o+h))*d,r[1]=(a+e)*d,r[2]=(s-c)*d,r[3]=0,r[4]=(a-e)*p,r[5]=(1-(n+h))*p,r[6]=(l+u)*p,r[7]=0,r[8]=(s+c)*i,r[9]=(l-u)*i,r[10]=(1-(n+o))*i,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,i){var r=this.elements;let n=Zt.set(r[0],r[1],r[2]).length();var a=Zt.set(r[4],r[5],r[6]).length(),s=Zt.set(r[8],r[9],r[10]).length(),o=(t=(this.determinant()<0&&(n=-n),t.x=r[12],t.y=r[13],t.z=r[14],Kt.copy(this),1/n),r=1/a,1/s);return Kt.elements[0]*=t,Kt.elements[1]*=t,Kt.elements[2]*=t,Kt.elements[4]*=r,Kt.elements[5]*=r,Kt.elements[6]*=r,Kt.elements[8]*=o,Kt.elements[9]*=o,Kt.elements[10]*=o,e.setFromRotationMatrix(Kt),i.x=n,i.y=a,i.z=s,this}makePerspective(t,e,i,r,n,a){var s=this.elements,o=2*n/(i-r),l=(e+t)/(e-t);i=(i+r)/(i-r),r=-(a+n)/(a-n),a=-2*a*n/(a-n);return s[0]=2*n/(e-t),s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=i,s[13]=0,s[2]=0,s[6]=0,s[10]=r,s[14]=a,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,i,r,n,a){var s=this.elements,o=1/(e-t),l=1/(i-r),h=1/(a-n);e=(e+t)*o,t=(i+r)*l,i=(a+n)*h;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-e,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-t,s[2]=0,s[6]=0,s[10]=-2*h,s[14]=-i,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){var e=this.elements,i=t.elements;for(let t=0;t<16;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}Jt.prototype.isMatrix4=!0;const Zt=new xt,Kt=new Jt,Qt=new xt(0,0,0),$t=new xt(1,1,1),te=new xt,ee=new xt,ie=new xt,re=new Jt,ne=new vt;class ae{constructor(t=0,e=0,i=0,r=ae.DefaultOrder){this._x=t,this._y=e,this._z=i,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,r=this._order){return this._x=t,this._y=e,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){var r=(t=t.elements)[0],n=t[4],a=t[8],s=t[1],o=t[5],l=t[9],h=t[2],u=t[6],c=t[10];switch(e){case"XYZ":this._y=Math.asin(V(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,c),this._z=Math.atan2(-n,r)):(this._x=Math.atan2(u,o),this._z=0);break;case"YXZ":this._x=Math.asin(-V(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,c),this._z=Math.atan2(s,o)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(V(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,c),this._z=Math.atan2(-n,o)):(this._y=0,this._z=Math.atan2(s,r));break;case"ZYX":this._y=Math.asin(-V(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,c),this._z=Math.atan2(s,r)):(this._x=0,this._z=Math.atan2(-n,o));break;case"YZX":this._z=Math.asin(V(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,c));break;case"XZY":this._z=Math.asin(-V(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(u,o),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-l,c),this._y=0)}return this._order=e,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return re.makeRotationFromQuaternion(t),this.setFromRotationMatrix(re,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return ne.setFromEuler(this),this.setFromQuaternion(ne,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ae.prototype.isEuler=!0,ae.DefaultOrder="XYZ",ae.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class se{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let oe=0;const le=new xt,he=new vt,ue=new Jt,ce=new xt,de=new xt,pe=new xt,fe=new vt,me=new xt(1,0,0),ge=new xt(0,1,0),ve=new xt(0,0,1),xe={type:"added"},_e={type:"removed"};class ye extends N{constructor(){super(),Object.defineProperty(this,"id",{value:oe++}),this.uuid=B(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ye.DefaultUp.clone();var t=new xt;const e=new ae,i=new vt;var r=new xt(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Jt},normalMatrix:{value:new q}}),this.matrix=new Jt,this.matrixWorld=new Jt,this.matrixAutoUpdate=ye.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new se,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return he.setFromAxisAngle(t,e),this.quaternion.multiply(he),this}rotateOnWorldAxis(t,e){return he.setFromAxisAngle(t,e),this.quaternion.premultiply(he),this}rotateX(t){return this.rotateOnAxis(me,t)}rotateY(t){return this.rotateOnAxis(ge,t)}rotateZ(t){return this.rotateOnAxis(ve,t)}translateOnAxis(t,e){return le.copy(t).applyQuaternion(this.quaternion),this.position.add(le.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(me,t)}translateY(t){return this.translateOnAxis(ge,t)}translateZ(t){return this.translateOnAxis(ve,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(ue.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?ce.copy(t):ce.set(t,e,i),t=this.parent,this.updateWorldMatrix(!0,!1),de.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ue.lookAt(de,ce,this.up):ue.lookAt(ce,de,this.up),this.quaternion.setFromRotationMatrix(ue),t&&(ue.extractRotation(t.matrixWorld),he.setFromRotationMatrix(ue),this.quaternion.premultiply(he.invert()))}add(t){if(1<arguments.length)for(let t=0;t<arguments.length;t++)this.add(arguments[t]);else t!==this&&t&&t.isObject3D&&(null!==t.parent&&t.parent.remove(t),(t.parent=this).children.push(t),t.dispatchEvent(xe));return this}remove(t){if(1<arguments.length)for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);else{var e=this.children.indexOf(t);-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(_e))}return this}removeFromParent(){var t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){var t=this.children[e];t.parent=null,t.dispatchEvent(_e)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),ue.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),ue.multiply(t.parent.matrixWorld)),t.applyMatrix4(ue),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let r=0,n=this.children.length;r<n;r++){var i=this.children[r].getObjectByProperty(t,e);if(void 0!==i)return i}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(de,t,pe),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(de,fe,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);var e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);var e=this.children;for(let i=0,r=e.length;i<r;i++)e[i].traverse(t)}traverseVisible(t){if(!1!==this.visible){t(this);var e=this.children;for(let i=0,r=e.length;i<r;i++)e[i].traverseVisible(t)}}traverseAncestors(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t=!(this.matrixWorldNeedsUpdate=!1));var e=this.children;for(let i=0,r=e.length;i<r;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){var i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){var r=this.children;for(let t=0,e=r.length;t<e;t++)r[t].updateWorldMatrix(!1,!0)}}toJSON(t){var e,i,r,n,a,s,o=void 0===t||"string"==typeof t,l={},h=(o&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},l.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"}),{});function u(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(h.uuid=this.uuid,h.type=this.type,""!==this.name&&(h.name=this.name),!0===this.castShadow&&(h.castShadow=!0),!0===this.receiveShadow&&(h.receiveShadow=!0),!1===this.visible&&(h.visible=!1),!1===this.frustumCulled&&(h.frustumCulled=!1),0!==this.renderOrder&&(h.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(h.userData=this.userData),h.layers=this.layers.mask,h.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(h.matrixAutoUpdate=!1),this.isInstancedMesh&&(h.type="InstancedMesh",h.count=this.count,h.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor)&&(h.instanceColor=this.instanceColor.toJSON()),this.isScene)this.background&&(this.background.isColor?h.background=this.background.toJSON():this.background.isTexture&&(h.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(h.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){h.geometry=u(t.geometries,this.geometry);var c=this.geometry.parameters;if(void 0!==c&&void 0!==c.shapes){var d=c.shapes;if(Array.isArray(d))for(let e=0,i=d.length;e<i;e++){var p=d[e];u(t.shapes,p)}else u(t.shapes,d)}}if(this.isSkinnedMesh&&(h.bindMode=this.bindMode,h.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton)&&(u(t.skeletons,this.skeleton),h.skeleton=this.skeleton.uuid),void 0!==this.material)if(Array.isArray(this.material)){var f=[];for(let e=0,i=this.material.length;e<i;e++)f.push(u(t.materials,this.material[e]));h.material=f}else h.material=u(t.materials,this.material);if(0<this.children.length){h.children=[];for(let e=0;e<this.children.length;e++)h.children.push(this.children[e].toJSON(t).object)}if(0<this.animations.length){h.animations=[];for(let e=0;e<this.animations.length;e++){var m=this.animations[e];h.animations.push(u(t.animations,m))}}return o&&(c=g(t.geometries),o=g(t.materials),e=g(t.textures),i=g(t.images),r=g(t.shapes),n=g(t.skeletons),a=g(t.animations),s=g(t.nodes),0<c.length&&(l.geometries=c),0<o.length&&(l.materials=o),0<e.length&&(l.textures=e),0<i.length&&(l.images=i),0<r.length&&(l.shapes=r),0<n.length&&(l.skeletons=n),0<a.length&&(l.animations=a),0<s.length)&&(l.nodes=s),l.object=h,l;function g(t){var e=[];for(const r in t){var i=t[r];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){var i=t.children[e];this.add(i.clone())}return this}}ye.DefaultUp=new xt(0,1,0),ye.DefaultMatrixAutoUpdate=!0,ye.prototype.isObject3D=!0;const Me=new xt,Se=new xt,we=new xt,be=new xt,Te=new xt,Ae=new xt,Ce=new xt,Ee=new xt,Le=new xt,Pe=new xt;class De{constructor(t=new xt,e=new xt,i=new xt){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,r){return r.subVectors(i,e),Me.subVectors(t,e),r.cross(Me),0<(i=r.lengthSq())?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(t,e,i,r,n){Me.subVectors(r,e),Se.subVectors(i,e),we.subVectors(t,e);r=Me.dot(Me),i=Me.dot(Se),t=Me.dot(we),e=Se.dot(Se);var a=Se.dot(we),s=r*e-i*i;return 0==s?n.set(-2,-1,-1):n.set(1-(e=(e*t-i*a)*(n=1/s))-(s=(r*a-i*t)*n),s,e)}static containsPoint(t,e,i,r){return this.getBarycoord(t,e,i,r,be),0<=be.x&&0<=be.y&&be.x+be.y<=1}static getUV(t,e,i,r,n,a,s,o){return this.getBarycoord(t,e,i,r,be),o.set(0,0),o.addScaledVector(n,be.x),o.addScaledVector(a,be.y),o.addScaledVector(s,be.z),o}static isFrontFacing(t,e,i,r){return Me.subVectors(i,e),Se.subVectors(t,e),Me.cross(Se).dot(r)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,r){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,e,i,r){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Me.subVectors(this.c,this.b),Se.subVectors(this.a,this.b),.5*Me.cross(Se).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return De.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return De.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,i,r,n){return De.getUV(t,this.a,this.b,this.c,e,i,r,n)}containsPoint(t){return De.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return De.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){var i=this.a,r=this.b,n=this.c;let a,s;Te.subVectors(r,i),Ae.subVectors(n,i),Ee.subVectors(t,i);var o=Te.dot(Ee),l=Ae.dot(Ee);if(o<=0&&l<=0)return e.copy(i);Le.subVectors(t,r);var h=Te.dot(Le),u=Ae.dot(Le);if(0<=h&&u<=h)return e.copy(r);var c=o*u-h*l;if(c<=0&&0<=o&&h<=0)return a=o/(o-h),e.copy(i).addScaledVector(Te,a);Pe.subVectors(t,n);t=Te.dot(Pe);var d=Ae.dot(Pe);return 0<=d&&t<=d?e.copy(n):(o=t*l-o*d)<=0&&0<=l&&d<=0?(s=l/(l-d),e.copy(i).addScaledVector(Ae,s)):(l=h*d-t*u)<=0&&0<=u-h&&0<=t-d?(Ce.subVectors(n,r),s=(u-h)/(u-h+(t-d)),e.copy(r).addScaledVector(Ce,s)):(a=o*(n=1/(l+o+c)),s=c*n,e.copy(i).addScaledVector(Te,a).addScaledVector(Ae,s))}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Ie=0;class Re extends N{constructor(){super(),Object.defineProperty(this,"id",{value:Ie++}),this.uuid=B(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){0<this._alphaTest!=0<t&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const r in t){var e,i=t[r];void 0!==i&&("shading"===r?this.flatShading=1===i:void 0!==(e=this[r])&&(e&&e.isColor?e.set(i):e&&e.isVector3&&i&&i.isVector3?e.copy(i):this[r]=i))}}toJSON(t){var e=void 0===t||"string"==typeof t,i=(e&&(t={textures:{},images:{}}),{metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}});function r(t){var e=[];for(const r in t){var i=t[r];delete i.metadata,e.push(i)}return e}return i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine)&&(i.combine=this.combine),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),0<this.alphaTest&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),1<this.wireframeLinewidth&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e&&(e=r(t.textures),t=r(t.images),0<e.length&&(i.textures=e),0<t.length)&&(i.images=t),i}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;var e=t.clippingPlanes;let i=null;if(null!==e){var r=e.length;i=new Array(r);for(let t=0;t!==r;++t)i[t]=e[t].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}Re.prototype.isMaterial=!0,Re.fromType=function(){return null};class Ne extends Re{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new st(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}Ne.prototype.isMeshBasicMaterial=!0;const ze=new xt,Oe=new X;class Ue{constructor(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.usage=I,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let r=0,n=this.itemSize;r<n;r++)this.array[t+r]=e.array[i+r];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){var e=this.array;let i=0;for(let r=0,n=t.length;r<n;r++){let n=t[r];void 0===n&&(n=new st),e[i++]=n.r,e[i++]=n.g,e[i++]=n.b}return this}copyVector2sArray(t){var e=this.array;let i=0;for(let r=0,n=t.length;r<n;r++){let n=t[r];void 0===n&&(n=new X),e[i++]=n.x,e[i++]=n.y}return this}copyVector3sArray(t){var e=this.array;let i=0;for(let r=0,n=t.length;r<n;r++){let n=t[r];void 0===n&&(n=new xt),e[i++]=n.x,e[i++]=n.y,e[i++]=n.z}return this}copyVector4sArray(t){var e=this.array;let i=0;for(let r=0,n=t.length;r<n;r++){let n=t[r];void 0===n&&(n=new pt),e[i++]=n.x,e[i++]=n.y,e[i++]=n.z,e[i++]=n.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,i=this.count;e<i;e++)Oe.fromBufferAttribute(this,e),Oe.applyMatrix3(t),this.setXY(e,Oe.x,Oe.y);else if(3===this.itemSize)for(let e=0,i=this.count;e<i;e++)ze.fromBufferAttribute(this,e),ze.applyMatrix3(t),this.setXYZ(e,ze.x,ze.y,ze.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)ze.fromBufferAttribute(this,e),ze.applyMatrix4(t),this.setXYZ(e,ze.x,ze.y,ze.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)ze.fromBufferAttribute(this,e),ze.applyNormalMatrix(t),this.setXYZ(e,ze.x,ze.y,ze.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)ze.fromBufferAttribute(this,e),ze.transformDirection(t),this.setXYZ(e,ze.x,ze.y,ze.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=r,this}setXYZW(t,e,i,r,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=r,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){var t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==I&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}Ue.prototype.isBufferAttribute=!0;class Fe extends Ue{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Be extends Ue{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class Ve extends Ue{constructor(t,e,i){super(new Float32Array(t),e,i)}}let ke=0;const Ge=new Jt,We=new ye,He=new xt,je=new Mt,Xe=new Mt,qe=new xt;class Ye extends N{constructor(){super(),Object.defineProperty(this,"id",{value:ke++}),this.uuid=B(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Y(t)?Be:Fe)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){var e,i=(void 0!==(e=(void 0!==(e=this.attributes.position)&&(e.applyMatrix4(t),e.needsUpdate=!0),this.attributes.normal))&&(i=(new q).getNormalMatrix(t),e.applyNormalMatrix(i),e.needsUpdate=!0),this.attributes.tangent);return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ge.makeRotationFromQuaternion(t),this.applyMatrix4(Ge),this}rotateX(t){return Ge.makeRotationX(t),this.applyMatrix4(Ge),this}rotateY(t){return Ge.makeRotationY(t),this.applyMatrix4(Ge),this}rotateZ(t){return Ge.makeRotationZ(t),this.applyMatrix4(Ge),this}translate(t,e,i){return Ge.makeTranslation(t,e,i),this.applyMatrix4(Ge),this}scale(t,e,i){return Ge.makeScale(t,e,i),this.applyMatrix4(Ge),this}lookAt(t){return We.lookAt(t),We.updateMatrix(),this.applyMatrix4(We.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(He).negate(),this.translate(He.x,He.y,He.z),this}setFromPoints(t){var e=[];for(let r=0,n=t.length;r<n;r++){var i=t[r];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Ve(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Mt);var t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)this.boundingBox.set(new xt(-1/0,-1/0,-1/0),new xt(1/0,1/0,1/0));else{if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,r=e.length;t<r;t++){var i=e[t];je.setFromBufferAttribute(i),this.morphTargetsRelative?(qe.addVectors(this.boundingBox.min,je.min),this.boundingBox.expandByPoint(qe),qe.addVectors(this.boundingBox.max,je.max),this.boundingBox.expandByPoint(qe)):(this.boundingBox.expandByPoint(je.min),this.boundingBox.expandByPoint(je.max))}}else this.boundingBox.makeEmpty();isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Vt);var t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)this.boundingSphere.set(new xt,1/0);else if(t){var i=this.boundingSphere.center;if(je.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){var r=e[t];Xe.setFromBufferAttribute(r),this.morphTargetsRelative?(qe.addVectors(je.min,Xe.min),je.expandByPoint(qe),qe.addVectors(je.max,Xe.max),je.expandByPoint(qe)):(je.expandByPoint(Xe.min),je.expandByPoint(Xe.max))}je.getCenter(i);let s=0;for(let e=0,r=t.count;e<r;e++)qe.fromBufferAttribute(t,e),s=Math.max(s,i.distanceToSquared(qe));if(e)for(let r=0,o=e.length;r<o;r++){var n=e[r],a=this.morphTargetsRelative;for(let e=0,r=n.count;e<r;e++)qe.fromBufferAttribute(n,e),a&&(He.fromBufferAttribute(t,e),qe.add(He)),s=Math.max(s,i.distanceToSquared(qe))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)}}computeTangents(){var t=this.index,e=this.attributes;if(null!==t&&void 0!==e.position&&void 0!==e.normal&&void 0!==e.uv){var i=t.array;const p=e.position.array,f=e.normal.array,m=e.uv.array;var r,n,a,s,o=p.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Ue(new Float32Array(4*o),4));const g=this.getAttribute("tangent").array,v=[],x=[];for(let t=0;t<o;t++)v[t]=new xt,x[t]=new xt;const _=new xt,y=new xt,M=new xt,S=new X,w=new X,b=new X,T=new xt,A=new xt;let C=this.groups;for(let t=0,e=(C=0===C.length?[{start:0,count:i.length}]:C).length;t<e;++t){var l=C[t],h=l.start;for(let t=h,e=h+l.count;t<e;t+=3)r=i[t+0],n=i[t+1],a=i[t+2],void 0,_.fromArray(p,3*r),y.fromArray(p,3*n),M.fromArray(p,3*a),S.fromArray(m,2*r),w.fromArray(m,2*n),b.fromArray(m,2*a),y.sub(_),M.sub(_),w.sub(S),b.sub(S),s=1/(w.x*b.y-b.x*w.y),isFinite(s)&&(T.copy(y).multiplyScalar(b.y).addScaledVector(M,-w.y).multiplyScalar(s),A.copy(M).multiplyScalar(w.x).addScaledVector(y,-b.x).multiplyScalar(s),v[r].add(T),v[n].add(T),v[a].add(T),x[r].add(A),x[n].add(A),x[a].add(A))}const E=new xt,L=new xt,P=new xt,D=new xt;for(let t=0,e=C.length;t<e;++t){var u=C[t],c=u.start;for(let t=c,e=c+u.count;t<e;t+=3)d(i[t+0]),d(i[t+1]),d(i[t+2])}function d(t){P.fromArray(f,3*t),D.copy(P);var e=v[t];e=(e=(E.copy(e),E.sub(P.multiplyScalar(P.dot(e))).normalize(),L.crossVectors(D,e),L.dot(x[t])))<0?-1:1;g[4*t]=E.x,g[4*t+1]=E.y,g[4*t+2]=E.z,g[4*t+3]=e}}}computeVertexNormals(){var t=this.index,e=this.getAttribute("position");if(void 0!==e){let p=this.getAttribute("normal");if(void 0===p)p=new Ue(new Float32Array(3*e.count),3),this.setAttribute("normal",p);else for(let t=0,e=p.count;t<e;t++)p.setXYZ(t,0,0,0);var i=new xt,r=new xt,n=new xt,a=new xt,s=new xt,o=new xt,l=new xt,h=new xt;if(t)for(let f=0,m=t.count;f<m;f+=3){var u=t.getX(f+0),c=t.getX(f+1),d=t.getX(f+2);i.fromBufferAttribute(e,u),r.fromBufferAttribute(e,c),n.fromBufferAttribute(e,d),l.subVectors(n,r),h.subVectors(i,r),l.cross(h),a.fromBufferAttribute(p,u),s.fromBufferAttribute(p,c),o.fromBufferAttribute(p,d),a.add(l),s.add(l),o.add(l),p.setXYZ(u,a.x,a.y,a.z),p.setXYZ(c,s.x,s.y,s.z),p.setXYZ(d,o.x,o.y,o.z)}else for(let t=0,a=e.count;t<a;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),n.fromBufferAttribute(e,t+2),l.subVectors(n,r),h.subVectors(i,r),l.cross(h),p.setXYZ(t+0,l.x,l.y,l.z),p.setXYZ(t+1,l.x,l.y,l.z),p.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),p.needsUpdate=!0}}merge(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0);var i=this.attributes;for(const o in i)if(void 0!==t.attributes[o]){var r=i[o].array,n=(a=t.attributes[o]).array,a=a.itemSize*e,s=Math.min(n.length,r.length-a);for(let t=0,e=a;t<s;t++,e++)r[e]=n[t]}return this}}normalizeNormals(){var t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)qe.fromBufferAttribute(t,e),qe.normalize(),t.setXYZ(e,qe.x,qe.y,qe.z)}toNonIndexed(){function t(t,e){var i=t.array,r=t.itemSize,n=t.normalized,a=new i.constructor(e.length*r);let s=0,o=0;for(let n=0,l=e.length;n<l;n++){s=t.isInterleavedBufferAttribute?e[n]*t.data.stride+t.offset:e[n]*r;for(let t=0;t<r;t++)a[o++]=i[s++]}return new Ue(a,r,n)}if(null===this.index)return this;var e=new Ye,i=this.index.array,r=this.attributes;for(const a in r){var n=t(r[a],i);e.setAttribute(a,n)}var a=this.morphAttributes;for(const r in a){var s=[],o=a[r];for(let e=0,r=o.length;e<r;e++){var l=t(o[e],i);s.push(l)}e.morphAttributes[r]=s}e.morphTargetsRelative=this.morphTargetsRelative;var h=this.groups;for(let t=0,i=h.length;t<i;t++){var u=h[t];e.addGroup(u.start,u.count,u.materialIndex)}return e}toJSON(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),0<Object.keys(this.userData).length&&(t.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(const i in e)void 0!==e[i]&&(t[i]=e[i])}else{t.data={attributes:{}};var i=this.index,r=(null!==i&&(t.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)}),this.attributes);for(const e in r){var n=r[e];t.data.attributes[e]=n.toJSON(t.data)}var a={};let e=!1;for(const i in this.morphAttributes){var s=this.morphAttributes[i],o=[];for(let e=0,i=s.length;e<i;e++){var l=s[e];o.push(l.toJSON(t.data))}0<o.length&&(a[i]=o,e=!0)}e&&(t.data.morphAttributes=a,t.data.morphTargetsRelative=this.morphTargetsRelative),0<(i=this.groups).length&&(t.data.groups=JSON.parse(JSON.stringify(i))),null!==(i=this.boundingSphere)&&(t.data.boundingSphere={center:i.center.toArray(),radius:i.radius})}return t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var e={},i=(this.name=t.name,t.index),r=(null!==i&&this.setIndex(i.clone(e)),t.attributes);for(const t in r){var n=r[t];this.setAttribute(t,n.clone(e))}var a=t.morphAttributes;for(const t in a){var s=[],o=a[t];for(let t=0,i=o.length;t<i;t++)s.push(o[t].clone(e));this.morphAttributes[t]=s}this.morphTargetsRelative=t.morphTargetsRelative;var l=t.groups;for(let t=0,e=l.length;t<e;t++){var h=l[t];this.addGroup(h.start,h.count,h.materialIndex)}return null!==(i=t.boundingBox)&&(this.boundingBox=i.clone()),null!==(i=t.boundingSphere)&&(this.boundingSphere=i.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Ye.prototype.isBufferGeometry=!0;const Je=new Jt,Ze=new Yt,Ke=new Vt,Qe=new xt,$e=new xt,ti=new xt,ei=new xt,ii=new xt,ri=new xt,ni=new xt,ai=new xt,si=new xt,oi=new X,li=new X,hi=new X,ui=new xt,ci=new xt;class di extends ye{constructor(t=new Ye,e=new Ne){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){var t=this.geometry;if(t.isBufferGeometry){var e=t.morphAttributes,i=Object.keys(e);if(0<i.length){var r=e[i[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=r.length;t<e;t++){var n=r[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else void 0!==(e=t.morphTargets)&&e.length}raycast(t,e){var i=this.geometry,r=this.material,n=this.matrixWorld;if(void 0!==r&&(null===i.boundingSphere&&i.computeBoundingSphere(),Ke.copy(i.boundingSphere),Ke.applyMatrix4(n),!1!==t.ray.intersectsSphere(Ke))&&(Je.copy(n).invert(),Ze.copy(t.ray).applyMatrix4(Je),null===i.boundingBox||!1!==Ze.intersectsBox(i.boundingBox))){let n;if(i.isBufferGeometry){var a=i.index,s=i.attributes.position,o=i.morphAttributes.position,l=i.morphTargetsRelative,h=i.attributes.uv,u=i.attributes.uv2,c=i.groups,d=i.drawRange;if(null!==a)if(Array.isArray(r))for(let i=0,x=c.length;i<x;i++){var p=c[i],f=r[p.materialIndex];for(let i=Math.max(p.start,d.start),r=Math.min(a.count,Math.min(p.start+p.count,d.start+d.count));i<r;i+=3){var m=a.getX(i),g=a.getX(i+1),v=a.getX(i+2);(n=pi(this,f,t,Ze,s,o,l,h,u,m,g,v))&&(n.faceIndex=Math.floor(i/3),n.face.materialIndex=p.materialIndex,e.push(n))}}else for(let i=Math.max(0,d.start),c=Math.min(a.count,d.start+d.count);i<c;i+=3){var x=a.getX(i),_=a.getX(i+1),y=a.getX(i+2);(n=pi(this,r,t,Ze,s,o,l,h,u,x,_,y))&&(n.faceIndex=Math.floor(i/3),e.push(n))}else if(void 0!==s)if(Array.isArray(r))for(let i=0,a=c.length;i<a;i++){var M=c[i],S=r[M.materialIndex];for(let i=Math.max(M.start,d.start),r=Math.min(s.count,Math.min(M.start+M.count,d.start+d.count));i<r;i+=3){(n=pi(this,S,t,Ze,s,o,l,h,u,i,i+1,i+2))&&(n.faceIndex=Math.floor(i/3),n.face.materialIndex=M.materialIndex,e.push(n))}}else for(let i=Math.max(0,d.start),a=Math.min(s.count,d.start+d.count);i<a;i+=3){(n=pi(this,r,t,Ze,s,o,l,h,u,i,i+1,i+2))&&(n.faceIndex=Math.floor(i/3),e.push(n))}}else i.isGeometry}}}function pi(t,e,i,r,a,s,o,l,h,u,c,d){Qe.fromBufferAttribute(a,u),$e.fromBufferAttribute(a,c),ti.fromBufferAttribute(a,d);var p=t.morphTargetInfluences;if(s&&p){ni.set(0,0,0),ai.set(0,0,0),si.set(0,0,0);for(let t=0,e=s.length;t<e;t++){var f=p[t],m=s[t];0!==f&&(ei.fromBufferAttribute(m,u),ii.fromBufferAttribute(m,c),ri.fromBufferAttribute(m,d),o?(ni.addScaledVector(ei,f),ai.addScaledVector(ii,f),si.addScaledVector(ri,f)):(ni.addScaledVector(ei.sub(Qe),f),ai.addScaledVector(ii.sub($e),f),si.addScaledVector(ri.sub(ti),f)))}Qe.add(ni),$e.add(ai),ti.add(si)}return t.isSkinnedMesh&&(t.boneTransform(u,Qe),t.boneTransform(c,$e),t.boneTransform(d,ti)),(a=function(t,e,i,r,a,s,o,l){let h;return null===(h=1===e.side?r.intersectTriangle(o,s,a,!0,l):r.intersectTriangle(a,s,o,e.side!==n,l))||(ci.copy(l),ci.applyMatrix4(t.matrixWorld),(r=i.ray.origin.distanceTo(ci))<i.near)||r>i.far?null:{distance:r,point:ci.clone(),object:t}}(t,e,i,r,Qe,$e,ti,ui))&&(l&&(oi.fromBufferAttribute(l,u),li.fromBufferAttribute(l,c),hi.fromBufferAttribute(l,d),a.uv=De.getUV(ui,Qe,$e,ti,oi,li,hi,new X)),h&&(oi.fromBufferAttribute(h,u),li.fromBufferAttribute(h,c),hi.fromBufferAttribute(h,d),a.uv2=De.getUV(ui,Qe,$e,ti,oi,li,hi,new X)),t={a:u,b:c,c:d,normal:new xt,materialIndex:0},De.getNormal(Qe,$e,ti,t.normal),a.face=t),a}di.prototype.isMesh=!0;class fi extends Ye{constructor(t=1,e=1,i=1,r=1,n=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:r,heightSegments:n,depthSegments:a};const s=this,o=(r=Math.floor(r),n=Math.floor(n),a=Math.floor(a),[]),l=[],h=[],u=[];let c=0,d=0;function p(t,e,i,r,n,a,p,f,m,g,v){var x=a/m,_=p/g,y=a/2,M=p/2,S=f/2,w=m+1,b=g+1;let T=0,A=0;var C=new xt;for(let a=0;a<b;a++){var E=a*_-M;for(let s=0;s<w;s++){var L=s*x-y;C[t]=L*r,C[e]=E*n,C[i]=S,l.push(C.x,C.y,C.z),C[t]=0,C[e]=0,C[i]=0<f?1:-1,h.push(C.x,C.y,C.z),u.push(s/m),u.push(1-a/g),T+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){var P=c+e+w*t,D=c+e+w*(t+1),I=c+(e+1)+w*(t+1),R=c+(e+1)+w*t;o.push(P,D,R),o.push(D,I,R),A+=6}s.addGroup(d,A,v),d+=A,c+=T}p("z","y","x",-1,-1,i,e,t,a,n,0),p("z","y","x",1,-1,i,e,-t,a,n,1),p("x","z","y",1,1,t,i,e,r,a,2),p("x","z","y",1,-1,t,i,-e,r,a,3),p("x","y","z",1,-1,t,e,i,r,n,4),p("x","y","z",-1,-1,t,e,-i,r,n,5),this.setIndex(o),this.setAttribute("position",new Ve(l,3)),this.setAttribute("normal",new Ve(h,3)),this.setAttribute("uv",new Ve(u,2))}static fromJSON(t){return new fi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function mi(t){var e={};for(const r in t){e[r]={};for(const n in t[r]){var i=t[r][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[r][n]=i.clone():Array.isArray(i)?e[r][n]=i.slice():e[r][n]=i}}return e}function gi(t){var e={};for(let r=0;r<t.length;r++){var i=mi(t[r]);for(const t in i)e[t]=i[t]}return e}const vi={clone:mi,merge:gi};class xi extends Re{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(t.attributes,this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=mi(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){var e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const r in this.uniforms){var i=this.uniforms[r].value;i&&i.isTexture?e.uniforms[r]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[r]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[r]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[r]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[r]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[r]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[r]={type:"m4",value:i.toArray()}:e.uniforms[r]={value:i}}0<Object.keys(this.defines).length&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;var r={};for(const t in this.extensions)!0===this.extensions[t]&&(r[t]=!0);return 0<Object.keys(r).length&&(e.extensions=r),e}}xi.prototype.isShaderMaterial=!0;class _i extends ye{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Jt,this.projectionMatrix=new Jt,this.projectionMatrixInverse=new Jt}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);var e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}_i.prototype.isCamera=!0;class yi extends _i{constructor(t=50,e=1,i=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){t=.5*this.getFilmHeight()/t,this.fov=2*F*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){var t=Math.tan(.5*U*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*F*Math.atan(Math.tan(.5*U*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,i,r,n,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var t=this.near;let e=t*Math.tan(.5*U*this.fov)/this.zoom,i=2*e,r=this.aspect*i,n=-.5*r;var a,s=this.view,o=(null!==this.view&&this.view.enabled&&(o=s.fullWidth,a=s.fullHeight,n+=s.offsetX*r/o,e-=s.offsetY*i/a,r*=s.width/o,i*=s.height/a),this.filmOffset);0!==o&&(n+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+r,e,e-i,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){return(t=super.toJSON(t)).object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}yi.prototype.isPerspectiveCamera=!0;class Mi extends ye{constructor(t,e,i){super(),this.type="CubeCamera",!0===i.isWebGLCubeRenderTarget&&(this.renderTarget=i,(i=new yi(90,1,t,e)).layers=this.layers,i.up.set(0,-1,0),i.lookAt(new xt(1,0,0)),this.add(i),(i=new yi(90,1,t,e)).layers=this.layers,i.up.set(0,-1,0),i.lookAt(new xt(-1,0,0)),this.add(i),(i=new yi(90,1,t,e)).layers=this.layers,i.up.set(0,0,1),i.lookAt(new xt(0,1,0)),this.add(i),(i=new yi(90,1,t,e)).layers=this.layers,i.up.set(0,0,-1),i.lookAt(new xt(0,-1,0)),this.add(i),(i=new yi(90,1,t,e)).layers=this.layers,i.up.set(0,-1,0),i.lookAt(new xt(0,0,1)),this.add(i),(i=new yi(90,1,t,e)).layers=this.layers,i.up.set(0,-1,0),i.lookAt(new xt(0,0,-1)),this.add(i))}update(t,e){null===this.parent&&this.updateMatrixWorld();var i=this.renderTarget,[r,n,a,s,o,l]=this.children,h=t.getRenderTarget(),u=t.toneMapping,c=t.xr.enabled,d=(t.toneMapping=0,t.xr.enabled=!1,i.texture.generateMipmaps);i.texture.generateMipmaps=!1,t.setRenderTarget(i,0),t.render(e,r),t.setRenderTarget(i,1),t.render(e,n),t.setRenderTarget(i,2),t.render(e,a),t.setRenderTarget(i,3),t.render(e,s),t.setRenderTarget(i,4),t.render(e,o),i.texture.generateMipmaps=d,t.setRenderTarget(i,5),t.render(e,l),t.setRenderTarget(h),t.toneMapping=u,t.xr.enabled=c,i.texture.needsPMREMUpdate=!0}}class Si extends dt{constructor(t,e,i,r,n,a,s,l,h,u){super(t=void 0!==t?t:[],e=void 0!==e?e:o,i,r,n,a,s,l,h,u),this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Si.prototype.isCubeTexture=!0;class wi extends ft{constructor(t,e={}){super(t,t,e),t=[t={width:t,height:t,depth:1},t,t,t,t,t],this.texture=new Si(t,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:f}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;var i={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},r=new fi(5,5,5);(i=new xi({name:"CubemapFromEquirect",uniforms:mi(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:a})).uniforms.tEquirect.value=e,r=new di(r,i),i=e.minFilter;return e.minFilter===m&&(e.minFilter=f),new Mi(1,10,this).update(t,r),e.minFilter=i,r.geometry.dispose(),r.material.dispose(),this}clear(t,e,i,r){var n=t.getRenderTarget();for(let n=0;n<6;n++)t.setRenderTarget(this,n),t.clear(e,i,r);t.setRenderTarget(n)}}wi.prototype.isWebGLCubeRenderTarget=!0;const bi=new xt,Ti=new xt,Ai=new q;class Ci{constructor(t=new xt(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,r){return this.normal.set(t,e,i),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){return i=bi.subVectors(i,e).cross(Ti.subVectors(t,e)).normalize(),this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){var i=t.delta(bi),r=this.normal.dot(i);return 0===r?0===this.distanceToPoint(t.start)?e.copy(t.start):null:(r=-(t.start.dot(this.normal)+this.constant)/r)<0||1<r?null:e.copy(i).multiplyScalar(r).add(t.start)}intersectsLine(t){var e=this.distanceToPoint(t.start);t=this.distanceToPoint(t.end);return e<0&&0<t||t<0&&0<e}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){return e=e||Ai.getNormalMatrix(t),t=this.coplanarPoint(bi).applyMatrix4(t),e=this.normal.applyMatrix3(e).normalize(),this.constant=-t.dot(e),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Ci.prototype.isPlane=!0;const Ei=new Vt,Li=new xt;class Pi{constructor(t=new Ci,e=new Ci,i=new Ci,r=new Ci,n=new Ci,a=new Ci){this.planes=[t,e,i,r,n,a]}set(t,e,i,r,n,a){var s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(i),s[3].copy(r),s[4].copy(n),s[5].copy(a),this}copy(t){var e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){var e=this.planes,i=(t=t.elements)[0],r=t[1],n=t[2],a=t[3],s=t[4],o=t[5],l=t[6],h=t[7],u=t[8],c=t[9],d=t[10],p=t[11],f=t[12],m=t[13],g=t[14];t=t[15];return e[0].setComponents(a-i,h-s,p-u,t-f).normalize(),e[1].setComponents(a+i,h+s,p+u,t+f).normalize(),e[2].setComponents(a+r,h+o,p+c,t+m).normalize(),e[3].setComponents(a-r,h-o,p-c,t-m).normalize(),e[4].setComponents(a-n,h-l,p-d,t-g).normalize(),e[5].setComponents(a+n,h+l,p+d,t+g).normalize(),this}intersectsObject(t){var e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Ei.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Ei)}intersectsSprite(t){return Ei.center.set(0,0,0),Ei.radius=.7071067811865476,Ei.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ei)}intersectsSphere(t){var e=this.planes,i=t.center,r=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(i)<r)return!1;return!0}intersectsBox(t){var e=this.planes;for(let r=0;r<6;r++){var i=e[r];if(Li.x=(0<i.normal.x?t.max:t.min).x,Li.y=(0<i.normal.y?t.max:t.min).y,Li.z=(0<i.normal.z?t.max:t.min).z,i.distanceToPoint(Li)<0)return!1}return!0}containsPoint(t){var e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Di(){let t=null,e=!1,i=null,r=null;function n(e,a){i(e,a),r=t.requestAnimationFrame(n)}return{start:function(){!0!==e&&null!==i&&(r=t.requestAnimationFrame(n),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){i=t},setContext:function(e){t=e}}}function Ii(t,e){const i=e.isWebGL2,r=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);var i=r.get(e);i&&(t.deleteBuffer(i.buffer),r.delete(e))},update:function(e,n){var a,s,o,l;e.isGLBufferAttribute?(!(a=r.get(e))||a.version<e.version)&&r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}):(e.isInterleavedBufferAttribute&&(e=e.data),void 0===(a=r.get(e))?r.set(e,function(e,r){var n=e.array,a=e.usage,s=t.createBuffer();let o;if(t.bindBuffer(r,s),t.bufferData(r,n,a),e.onUploadCallback(),n instanceof Float32Array)o=5126;else if(n instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!i)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");o=5131}else o=5123;else if(n instanceof Int16Array)o=5122;else if(n instanceof Uint32Array)o=5125;else if(n instanceof Int32Array)o=5124;else if(n instanceof Int8Array)o=5120;else{if(!(n instanceof Uint8Array||n instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+n);o=5121}return{buffer:s,type:o,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(e,n)):a.version<e.version&&(s=a.buffer,n=n,l=(o=e).array,o=o.updateRange,t.bindBuffer(n,s),-1===o.count?t.bufferSubData(n,0,l):(i?t.bufferSubData(n,o.offset*l.BYTES_PER_ELEMENT,l,o.offset,o.count):t.bufferSubData(n,o.offset*l.BYTES_PER_ELEMENT,l.subarray(o.offset,o.offset+o.count)),o.count=-1),a.version=e.version))}}}class Ri extends Ye{constructor(t=1,e=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:r};var n=t/2,a=e/2,s=Math.floor(i),o=Math.floor(r),l=s+1,h=o+1,u=t/s,c=e/o,d=[],p=[],f=[],m=[];for(let t=0;t<h;t++){var g=t*c-a;for(let e=0;e<l;e++){var v=e*u-n;p.push(v,-g,0),f.push(0,0,1),m.push(e/s),m.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){var x=e+l*t,_=e+l*(t+1),y=e+1+l*(t+1),M=e+1+l*t;d.push(x,_,M),d.push(_,y,M)}this.setIndex(d),this.setAttribute("position",new Ve(p,3)),this.setAttribute("normal",new Ve(f,3)),this.setAttribute("uv",new Ve(m,2))}static fromJSON(t){return new Ri(t.width,t.height,t.widthSegments,t.heightSegments)}}const Ni={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},zi={common:{diffuse:{value:new st(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new q},uv2Transform:{value:new q},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new X(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new st(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new st(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new q}},sprite:{diffuse:{value:new st(16777215)},opacity:{value:1},center:{value:new X(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new q}}},Oi={basic:{uniforms:gi([zi.common,zi.specularmap,zi.envmap,zi.aomap,zi.lightmap,zi.fog]),vertexShader:Ni.meshbasic_vert,fragmentShader:Ni.meshbasic_frag},lambert:{uniforms:gi([zi.common,zi.specularmap,zi.envmap,zi.aomap,zi.lightmap,zi.emissivemap,zi.fog,zi.lights,{emissive:{value:new st(0)}}]),vertexShader:Ni.meshlambert_vert,fragmentShader:Ni.meshlambert_frag},phong:{uniforms:gi([zi.common,zi.specularmap,zi.envmap,zi.aomap,zi.lightmap,zi.emissivemap,zi.bumpmap,zi.normalmap,zi.displacementmap,zi.fog,zi.lights,{emissive:{value:new st(0)},specular:{value:new st(1118481)},shininess:{value:30}}]),vertexShader:Ni.meshphong_vert,fragmentShader:Ni.meshphong_frag},standard:{uniforms:gi([zi.common,zi.envmap,zi.aomap,zi.lightmap,zi.emissivemap,zi.bumpmap,zi.normalmap,zi.displacementmap,zi.roughnessmap,zi.metalnessmap,zi.fog,zi.lights,{emissive:{value:new st(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ni.meshphysical_vert,fragmentShader:Ni.meshphysical_frag},toon:{uniforms:gi([zi.common,zi.aomap,zi.lightmap,zi.emissivemap,zi.bumpmap,zi.normalmap,zi.displacementmap,zi.gradientmap,zi.fog,zi.lights,{emissive:{value:new st(0)}}]),vertexShader:Ni.meshtoon_vert,fragmentShader:Ni.meshtoon_frag},matcap:{uniforms:gi([zi.common,zi.bumpmap,zi.normalmap,zi.displacementmap,zi.fog,{matcap:{value:null}}]),vertexShader:Ni.meshmatcap_vert,fragmentShader:Ni.meshmatcap_frag},points:{uniforms:gi([zi.points,zi.fog]),vertexShader:Ni.points_vert,fragmentShader:Ni.points_frag},dashed:{uniforms:gi([zi.common,zi.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ni.linedashed_vert,fragmentShader:Ni.linedashed_frag},depth:{uniforms:gi([zi.common,zi.displacementmap]),vertexShader:Ni.depth_vert,fragmentShader:Ni.depth_frag},normal:{uniforms:gi([zi.common,zi.bumpmap,zi.normalmap,zi.displacementmap,{opacity:{value:1}}]),vertexShader:Ni.meshnormal_vert,fragmentShader:Ni.meshnormal_frag},sprite:{uniforms:gi([zi.sprite,zi.fog]),vertexShader:Ni.sprite_vert,fragmentShader:Ni.sprite_frag},background:{uniforms:{uvTransform:{value:new q},t2D:{value:null}},vertexShader:Ni.background_vert,fragmentShader:Ni.background_frag},cube:{uniforms:gi([zi.envmap,{opacity:{value:1}}]),vertexShader:Ni.cube_vert,fragmentShader:Ni.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ni.equirect_vert,fragmentShader:Ni.equirect_frag},distanceRGBA:{uniforms:gi([zi.common,zi.displacementmap,{referencePosition:{value:new xt},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ni.distanceRGBA_vert,fragmentShader:Ni.distanceRGBA_frag},shadow:{uniforms:gi([zi.lights,zi.fog,{color:{value:new st(0)},opacity:{value:1}}]),vertexShader:Ni.shadow_vert,fragmentShader:Ni.shadow_frag}};function Ui(t,e,i,r,n,a){const s=new st(0);let o,l,h=!0===n?0:1,u=null,d=0,p=null;function f(t,e){i.buffers.color.setClear(t.r,t.g,t.b,e,a)}return{getClearColor:function(){return s},setClearColor:function(t,e=1){s.set(t),h=e,f(s,h)},getClearAlpha:function(){return h},setClearAlpha:function(t){h=t,f(s,h)},render:function(i,n){let a=!1,m=!0===n.isScene?n.background:null;m&&m.isTexture&&(m=e.get(m)),null===(m=(n=(n=t.xr).getSession&&n.getSession())&&"additive"===n.environmentBlendMode?null:m)?f(s,h):m&&m.isColor&&(f(m,1),a=!0),(t.autoClear||a)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.mapping===c)?(void 0===l&&((l=new di(new fi(1,1,1),new xi({name:"BackgroundCubeMaterial",uniforms:mi(Oi.cube.uniforms),vertexShader:Oi.cube.vertexShader,fragmentShader:Oi.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(l)),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&!1===m.isRenderTargetTexture?-1:1,u===m&&d===m.version&&p===t.toneMapping||(l.material.needsUpdate=!0,u=m,d=m.version,p=t.toneMapping),l.layers.enableAll(),i.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(void 0===o&&((o=new di(new Ri(2,2),new xi({name:"BackgroundMaterial",uniforms:mi(Oi.background.uniforms),vertexShader:Oi.background.vertexShader,fragmentShader:Oi.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(o)),!0===(o.material.uniforms.t2D.value=m).matrixAutoUpdate&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),u===m&&d===m.version&&p===t.toneMapping||(o.material.needsUpdate=!0,u=m,d=m.version,p=t.toneMapping),o.layers.enableAll(),i.unshift(o,o.geometry,o.material,0,0,null))}}}function Fi(t,e,i,r){const n=t.getParameter(34921),a=r.isWebGL2?null:e.get("OES_vertex_array_object"),s=r.isWebGL2||null!==a,o={},l=p(null);let h=l,u=!1;function c(e){if(r.isWebGL2)return t.bindVertexArray(e);a.bindVertexArrayOES(e)}function d(e){if(r.isWebGL2)return t.deleteVertexArray(e);a.deleteVertexArrayOES(e)}function p(t){var e=[],i=[],r=[];for(let t=0;t<n;t++)e[t]=0,i[t]=0,r[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:r,object:t,attributes:{},index:null}}function f(){var t=h.newAttributes;for(let e=0,i=t.length;e<i;e++)t[e]=0}function m(t){g(t,0)}function g(i,n){var a=h.newAttributes,s=h.enabledAttributes,o=h.attributeDivisors;a[i]=1,0===s[i]&&(t.enableVertexAttribArray(i),s[i]=1),o[i]!==n&&((r.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,n),o[i]=n)}function v(){var e=h.newAttributes,i=h.enabledAttributes;for(let r=0,n=i.length;r<n;r++)i[r]!==e[r]&&(t.disableVertexAttribArray(r),i[r]=0)}function x(e,i,n,a,s,o){!0!==r.isWebGL2||5124!==n&&5125!==n?t.vertexAttribPointer(e,i,n,a,s,o):t.vertexAttribIPointer(e,i,n,s,o)}function _(){y(),u=!0,h!==l&&c((h=l).object)}function y(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(n,l,d,_,y){let M=!1;if(s){var S=function(e,i,n){n=!0===n.wireframe;let s=o[e.id];void 0===s&&(s={},o[e.id]=s);let l=s[i.id];void 0===l&&(l={},s[i.id]=l);let h=l[n];return void 0===h&&(h=p(r.isWebGL2?t.createVertexArray():a.createVertexArrayOES()),l[n]=h),h}(_,d,l);if(h!==S&&c((h=S).object),M=function(t,e,i,r){var n=h.attributes,a=e.attributes;let s=0;var o=i.getAttributes();for(const e in o)if(0<=o[e].location){var l=n[e];let i=a[e];if(void 0===i&&("instanceMatrix"===e&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===e)&&t.instanceColor&&(i=t.instanceColor),void 0===l)return!0;if(l.attribute!==i)return!0;if(i&&l.data!==i.data)return!0;s++}return h.attributesNum!==s||h.index!==r}(n,_,d,y)){var w=n,b=(S=d,y),T={},A=_.attributes;let t=0;var C=S.getAttributes();for(const e in C)if(0<=C[e].location){let i=A[e];void 0===i&&("instanceMatrix"===e&&w.instanceMatrix&&(i=w.instanceMatrix),"instanceColor"===e)&&w.instanceColor&&(i=w.instanceColor);var E={};(E.attribute=i)&&i.data&&(E.data=i.data),T[e]=E,t++}h.attributes=T,h.attributesNum=t,h.index=b}}else S=!0===l.wireframe,h.geometry===_.id&&h.program===d.id&&h.wireframe===S||(h.geometry=_.id,h.program=d.id,h.wireframe=S,M=!0);null!==y&&i.update(y,34963),(M||u)&&(u=!1,function(n,a,s,o){if(!1!==r.isWebGL2||!n.isInstancedMesh&&!o.isInstancedBufferGeometry||null!==e.get("ANGLE_instanced_arrays")){f();var l=o.attributes,h=s.getAttributes(),u=a.defaultAttributeValues;for(const e in h){var c=h[e];if(0<=c.location){let r=l[e];if(void 0!==(r=void 0===r&&("instanceMatrix"===e&&n.instanceMatrix&&(r=n.instanceMatrix),"instanceColor"===e)&&n.instanceColor?n.instanceColor:r)){var d=r.normalized,p=r.itemSize,_=i.get(r);if(void 0!==_){var y=_.buffer,M=_.type,S=_.bytesPerElement;if(r.isInterleavedBufferAttribute){var w=r.data,b=w.stride,T=r.offset;if(w.isInstancedInterleavedBuffer){for(let t=0;t<c.locationSize;t++)g(c.location+t,w.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=w.meshPerAttribute*w.count)}else for(let t=0;t<c.locationSize;t++)m(c.location+t);t.bindBuffer(34962,y);for(let t=0;t<c.locationSize;t++)x(c.location+t,p/c.locationSize,M,d,b*S,(T+p/c.locationSize*t)*S)}else{if(r.isInstancedBufferAttribute){for(let t=0;t<c.locationSize;t++)g(c.location+t,r.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=r.meshPerAttribute*r.count)}else for(let t=0;t<c.locationSize;t++)m(c.location+t);t.bindBuffer(34962,y);for(let t=0;t<c.locationSize;t++)x(c.location+t,p/c.locationSize,M,d,p*S,p/c.locationSize*t*S)}}}else if(void 0!==u){var A=u[e];if(void 0!==A)switch(A.length){case 2:t.vertexAttrib2fv(c.location,A);break;case 3:t.vertexAttrib3fv(c.location,A);break;case 4:t.vertexAttrib4fv(c.location,A);break;default:t.vertexAttrib1fv(c.location,A)}}}}v()}}(n,l,d,_),null!==y)&&t.bindBuffer(34963,i.get(y).buffer)},reset:_,resetDefaultState:y,dispose:function(){_();for(const i in o){var t=o[i];for(const i in t){var e=t[i];for(const t in e)d(e[t].object),delete e[t];delete t[i]}delete o[i]}},releaseStatesOfGeometry:function(t){if(void 0!==o[t.id]){var e=o[t.id];for(const t in e){var i=e[t];for(const t in i)d(i[t].object),delete i[t];delete e[t]}delete o[t.id]}},releaseStatesOfProgram:function(t){for(const r in o){var e=o[r];if(void 0!==e[t.id]){var i=e[t.id];for(const t in i)d(i[t].object),delete i[t];delete e[t.id]}}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:v}}function Bi(t,e,i,r){const n=r.isWebGL2;let a;this.setMode=function(t){a=t},this.render=function(e,r){t.drawArrays(a,e,r),i.update(r,a,1)},this.renderInstances=function(r,s,o){if(0!==o){let l,h;if(n)l=t,h="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",null===l)return;l[h](a,r,s,o),i.update(s,a,o)}}}function Vi(t,e,i){let r;function n(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(35633,36338).precision&&0<t.getShaderPrecisionFormat(35632,36338).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(35633,36337).precision&&0<t.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==i.precision?i.precision:"highp";var o=((o=n(s))!==s&&(s=o),a||e.has("WEBGL_draw_buffers")),l=(i=!0===i.logarithmicDepthBuffer,t.getParameter(34930)),h=t.getParameter(35660),u=t.getParameter(3379),c=t.getParameter(34076),d=t.getParameter(34921),p=t.getParameter(36347),f=t.getParameter(36348),m=t.getParameter(36349),g=0<h,v=a||e.has("OES_texture_float");return{isWebGL2:a,drawBuffers:o,getMaxAnisotropy:function(){var i;return r=void 0===r?!0===e.has("EXT_texture_filter_anisotropic")?(i=e.get("EXT_texture_filter_anisotropic"),t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):0:r},getMaxPrecision:n,precision:s,logarithmicDepthBuffer:i,maxTextures:l,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:c,maxAttributes:d,maxVertexUniforms:p,maxVaryings:f,maxFragmentUniforms:m,vertexTextures:g,floatFragmentTextures:v,floatVertexTextures:g&&v,maxSamples:a?t.getParameter(36183):0}}function ki(t){const e=this;let i=null,r=0,n=!1,a=!1;const s=new Ci,o=new q,l={value:null,needsUpdate:!1};function h(){l.value!==i&&(l.value=i,l.needsUpdate=0<r),e.numPlanes=r,e.numIntersection=0}function u(t,i,r,n){var a=null!==t?t.length:0;let h=null;if(0!==a){if(h=l.value,!0!==n||null===h){n=r+4*a;var u=i.matrixWorldInverse;o.getNormalMatrix(u),(null===h||h.length<n)&&(h=new Float32Array(n));for(let e=0,i=r;e!==a;++e,i+=4)s.copy(t[e]).applyMatrix4(u,o),s.normal.toArray(h,i),h[i+3]=s.constant}l.value=h,l.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,a){var s=0!==t.length||e||0!==r||n;return n=e,i=u(t,a,0),r=t.length,s},this.beginShadows=function(){a=!0,u(null)},this.endShadows=function(){a=!1,h()},this.setState=function(e,s,o){var c=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows;e=t.get(e);if(!n||null===c||0===c.length||a&&!p)a?u(null):h();else{var f=4*(p=a?0:r),m=e.clippingState||null;l.value=m,m=u(c,s,f,o);for(let t=0;t!==f;++t)m[t]=i[t];e.clippingState=m,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=p}}}function Gi(t){let e=new WeakMap;function i(t,e){return e===h?t.mapping=o:e===u&&(t.mapping=l),t}function r(t){var i=((t=t.target).removeEventListener("dispose",r),e.get(t));void 0!==i&&(e.delete(t),i.dispose())}return{get:function(n){if(n&&n.isTexture&&!1===n.isRenderTargetTexture){var a=n.mapping;if(a===h||a===u)return e.has(n)?i(e.get(n).texture,n.mapping):(a=n.image)&&0<a.height?((a=new wi(a.height/2)).fromEquirectangularTexture(t,n),e.set(n,a),n.addEventListener("dispose",r),i(a.texture,n.mapping)):null}return n},dispose:function(){e=new WeakMap}}}Oi.physical={uniforms:gi([Oi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new X(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new st(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new X},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new st(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new st(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ni.meshphysical_vert,fragmentShader:Ni.meshphysical_frag};class Wi extends _i{constructor(t=-1,e=1,i=1,r=-1,n=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=r,this.near=n,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,i,r,n,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let n=i-t,a=i+t,s=r+e,o=r-e;null!==this.view&&this.view.enabled&&(i=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom,n+=i*this.view.offsetX,a=n+i*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height),this.projectionMatrix.makeOrthographic(n,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){return(t=super.toJSON(t)).object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}Wi.prototype.isOrthographicCamera=!0;const Hi=[.125,.215,.35,.446,.526,.582],ji=new Wi,Xi=new st;let qi=null;e=1/(i=(1+Math.sqrt(5))/2);const Yi=[new xt(1,1,1),new xt(-1,1,1),new xt(1,1,-1),new xt(-1,1,-1),new xt(0,i,e),new xt(0,i,-e),new xt(e,0,i),new xt(-e,0,i),new xt(i,e,0),new xt(-i,e,0)];class Ji{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,i=.1,r=100){qi=this._renderer.getRenderTarget(),this._setSize(256);var n=this._allocateTargets();return n.depthBuffer=!0,this._sceneToCubeUV(t,i,r,n),0<e&&this._blur(n,0,0,e),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=$i(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Qi(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(qi),t.scissorTest=!1,Ki(t,0,0,t.width,t.height)}_fromTexture(t,e){return t.mapping===o||t.mapping===l?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),qi=this._renderer.getRenderTarget(),e=e||this._allocateTargets(),this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(){var t,e,i=3*Math.max(this._cubeSize,112),r=4*this._cubeSize,n={magFilter:f,minFilter:f,generateMipmaps:!1,type:_,format:M,encoding:C,depthBuffer:!1},s=Zi(i,r,n);return null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.width===i||(null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Zi(i,r,n),n=this._lodMax,({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){var e=[],i=[],r=[];let n=t;var a=t-4+1+Hi.length;for(let f=0;f<a;f++){var s=Math.pow(2,n);i.push(s);let a=1/s;f>t-4?a=Hi[f-t+4-1]:0===f&&(a=0),r.push(a);var o=-(s=1/(s-2)),l=[o,o,s=1+s,o,s,s,o,o,s,s,o,s],h=new Float32Array(108),u=new Float32Array(72),c=new Float32Array(36);for(let t=0;t<6;t++){var d=t%3*2/3-1,p=2<t?0:-1;d=(h.set([d,p,0,d+2/3,p,0,d+2/3,1+p,0,d,p,0,d+2/3,1+p,0,d,1+p,0],18*t),u.set(l,12*t),[t,t,t,t,t,t]);c.set(d,6*t)}(o=new Ye).setAttribute("position",new Ue(h,3)),o.setAttribute("uv",new Ue(u,2)),o.setAttribute("faceIndex",new Ue(c,1)),e.push(o),4<n&&n--}return{lodPlanes:e,sizeLods:i,sigmas:r}}(n)),this._blurMaterial=(n=n,i=i,r=r,t=new Float32Array(20),e=new xt(0,1,0),i=new xi({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/i,CUBEUV_TEXEL_HEIGHT:1/r,CUBEUV_MAX_MIP:n+".0"},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:e}},vertexShader:tr(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:a,depthTest:!1,depthWrite:!1}))),s}_compileMaterial(t){t=new di(this._lodPlanes[0],t),this._renderer.compile(t,ji)}_sceneToCubeUV(t,e,i,r){var n=new yi(90,1,e,i),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=(e=o.autoClear,i=o.toneMapping,o.getClearColor(Xi),o.toneMapping=0,o.autoClear=!1,new Ne({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1})),h=new di(new fi,l);let u=!1;var c=t.background;c?c.isColor&&(l.color.copy(c),t.background=null,u=!0):(l.color.copy(Xi),u=!0);for(let e=0;e<6;e++){var d=e%3,p=(0==d?(n.up.set(0,a[e],0),n.lookAt(s[e],0,0)):1==d?(n.up.set(0,0,a[e]),n.lookAt(0,s[e],0)):(n.up.set(0,a[e],0),n.lookAt(0,0,s[e])),this._cubeSize);Ki(r,d*p,2<e?p:0,p,p),o.setRenderTarget(r),u&&o.render(h,n),o.render(t,n)}h.geometry.dispose(),h.material.dispose(),o.toneMapping=i,o.autoClear=e,t.background=c}_textureToCubeUV(t,e){var i=this._renderer,r=((r=t.mapping===o||t.mapping===l)?(null===this._cubemapMaterial&&(this._cubemapMaterial=$i()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Qi()),r?this._cubemapMaterial:this._equirectMaterial),n=new di(this._lodPlanes[0],r);Ki(e,0,0,3*(r=(r.uniforms.envMap.value=t,this._cubeSize)),2*r),i.setRenderTarget(e),i.render(n,ji)}_applyPMREM(t){var e=this._renderer,i=e.autoClear;e.autoClear=!1;for(let e=1;e<this._lodPlanes.length;e++){var r=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),n=Yi[(e-1)%Yi.length];this._blur(t,e-1,e,r,n)}e.autoClear=i}_blur(t,e,i,r,n){var a=this._pingPongRenderTarget;this._halfBlur(t,a,e,i,r,"latitudinal",n),this._halfBlur(a,t,i,i,r,"longitudinal",n)}_halfBlur(t,e,i,r,n,a,s){var o=this._renderer,l=this._blurMaterial,h=new di(this._lodPlanes[r],l),u=(l=l.uniforms,this._sizeLods[i]-1),c=n/(u=isFinite(n)?Math.PI/(2*u):2*Math.PI/39),d=isFinite(n)?1+Math.floor(3*c):20,p=[];let f=0;for(let t=0;t<20;++t){const e=t/c;var m=Math.exp(-e*e/2);p.push(m),0===t?f+=m:t<d&&(f+=2*m)}for(let t=0;t<p.length;t++)p[t]=p[t]/f;l.envMap.value=t.texture,l.samples.value=d,l.weights.value=p,l.latitudinal.value="latitudinal"===a,s&&(l.poleAxis.value=s),n=this._lodMax,l.dTheta.value=u,l.mipInt.value=n-i;Ki(e,3*(t=this._sizeLods[r])*(n-4<r?r-n+4:0),a=4*(this._cubeSize-t),3*t,2*t),o.setRenderTarget(e),o.render(h,ji)}}function Zi(t,e,i){return(t=new ft(t,e,i)).texture.mapping=c,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Ki(t,e,i,r,n){t.viewport.set(e,i,r,n),t.scissor.set(e,i,r,n)}function Qi(){return new xi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:tr(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:a,depthTest:!1,depthWrite:!1})}function $i(){return new xi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:tr(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:a,depthTest:!1,depthWrite:!1})}function tr(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function er(t){let e=new WeakMap,i=null;function r(t){var i=((t=t.target).removeEventListener("dispose",r),e.get(t));void 0!==i&&(e.delete(t),i.dispose())}return{get:function(n){if(n&&n.isTexture){var a,s=(c=n.mapping)===h||c===u,c=c===o||c===l;if(s||c)return n.isRenderTargetTexture&&!0===n.needsPMREMUpdate?(n.needsPMREMUpdate=!1,a=e.get(n),null===i&&(i=new Ji(t)),a=s?i.fromEquirectangular(n,a):i.fromCubemap(n,a),e.set(n,a),a.texture):e.has(n)?e.get(n).texture:(a=n.image,s&&a&&0<a.height||c&&a&&function(t){let e=0;for(let i=0;i<6;i++)void 0!==t[i]&&e++;return 6===e}(a)?(null===i&&(i=new Ji(t)),c=s?i.fromEquirectangular(n):i.fromCubemap(n),e.set(n,c),n.addEventListener("dispose",r),c.texture):null)}return n},dispose:function(){e=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function ir(t){const e={};function i(i){if(void 0!==e[i])return e[i];let r;switch(i){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(i)}return e[i]=r}return{has:function(t){return null!==i(t)},init:function(t){t.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(t){return t=i(t)}}}function rr(t,e,i,r){const n={},a=new WeakMap;function s(t){var o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",s),delete n[o.id],(t=a.get(o))&&(e.remove(t),a.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}return{get:function(t,e){return!0!==n[e.id]&&(e.addEventListener("dispose",s),n[e.id]=!0,i.memory.geometries++),e},update:function(t){var i=t.attributes;for(const t in i)e.update(i[t],34962);var r=t.morphAttributes;for(const t in r){var n=r[t];for(let t=0,i=n.length;t<i;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){var i,r=a.get(t);return(!r||null!==(i=t.index)&&r.version<i.version)&&function(t){var i=[],r=t.index,n=t.attributes.position;let s=0;if(null!==r){var o=r.array;s=r.version;for(let t=0,e=o.length;t<e;t+=3){var l=o[t+0],h=o[t+1],u=o[t+2];i.push(l,h,h,u,u,l)}}else{r=n.array,s=n.version;for(let t=0,e=r.length/3-1;t<e;t+=3){var c=t+0,d=t+1,p=t+2;i.push(c,d,d,p,p,c)}}(n=new(Y(i)?Be:Fe)(i,1)).version=s,(r=a.get(t))&&e.remove(r),a.set(t,n)}(t),a.get(t)}}}function nr(t,e,i,r){const n=r.isWebGL2;let a,s,o;this.setMode=function(t){a=t},this.setIndex=function(t){s=t.type,o=t.bytesPerElement},this.render=function(e,r){t.drawElements(a,r,s,e*o),i.update(r,a,1)},this.renderInstances=function(r,l,h){if(0!==h){let u,c;if(n)u=t,c="drawElementsInstanced";else if(u=e.get("ANGLE_instanced_arrays"),c="drawElementsInstancedANGLE",null===u)return;u[c](a,l,s,r*o,h),i.update(l,a,h)}}}function ar(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,i,r){switch(e.calls++,i){case 4:e.triangles+=r*(t/3);break;case 1:e.lines+=r*(t/2);break;case 3:e.lines+=r*(t-1);break;case 2:e.lines+=r*t;break;case 0:e.points+=r*t}}}}function sr(t,e){return t[0]-e[0]}function or(t,e){return Math.abs(e[1])-Math.abs(t[1])}function lr(t,e){let i=1;(e=(e.isInterleavedBufferAttribute?e.data:e).array)instanceof Int8Array?i=127:e instanceof Int16Array?i=32767:e instanceof Int32Array&&(i=2147483647),t.divideScalar(i)}function hr(t,e,i){const r={},n=new Float32Array(8),a=new WeakMap,s=new pt,o=[];for(let t=0;t<8;t++)o[t]=[t,0];return{update:function(l,h,u,c){var d=l.morphTargetInfluences;if(!0===e.isWebGL2){var p=void 0!==(l=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color)?l.length:0;let r=a.get(h);if(void 0===r||r.count!==p){void 0!==r&&r.texture.dispose();var f=void 0!==h.morphAttributes.position,m=void 0!==h.morphAttributes.normal,g=void 0!==h.morphAttributes.color,v=h.morphAttributes.position||[],_=h.morphAttributes.normal||[],y=h.morphAttributes.color||[];let t=1==g?3:1==m?2:1==f?1:0,i=h.attributes.position.count*t,n=1;i>e.maxTextureSize&&(n=Math.ceil(i/e.maxTextureSize),i=e.maxTextureSize);var M=new Float32Array(i*n*4*p);const o=new mt(M,i,n,p);o.type=x,o.needsUpdate=!0;var S=4*t;for(let t=0;t<p;t++){var w=v[t],b=_[t],T=y[t],A=i*n*4*t;for(let t=0;t<w.count;t++){var C=t*S;1==f&&(s.fromBufferAttribute(w,t),!0===w.normalized&&lr(s,w),M[A+C]=s.x,M[A+C+1]=s.y,M[A+C+2]=s.z,M[A+C+3]=0),1==m&&(s.fromBufferAttribute(b,t),!0===b.normalized&&lr(s,b),M[A+C+4]=s.x,M[A+C+5]=s.y,M[A+C+6]=s.z,M[A+C+7]=0),1==g&&(s.fromBufferAttribute(T,t),!0===T.normalized&&lr(s,T),M[A+C+8]=s.x,M[A+C+9]=s.y,M[A+C+10]=s.z,M[A+C+11]=4===T.itemSize?s.w:1)}}r={count:p,texture:o,size:new X(i,n)},a.set(h,r),h.addEventListener("dispose",(function t(){o.dispose(),a.delete(h),h.removeEventListener("dispose",t)}))}let n=0;for(let t=0;t<d.length;t++)n+=d[t];l=h.morphTargetsRelative?1:1-n,c.getUniforms().setValue(t,"morphTargetBaseInfluence",l),c.getUniforms().setValue(t,"morphTargetInfluences",d),c.getUniforms().setValue(t,"morphTargetsTexture",r.texture,i),c.getUniforms().setValue(t,"morphTargetsTextureSize",r.size)}else{var E=void 0===d?0:d.length;let e=r[h.id];if(void 0===e||e.length!==E){e=[];for(let t=0;t<E;t++)e[t]=[t,0];r[h.id]=e}for(let t=0;t<E;t++){var L=e[t];L[0]=t,L[1]=d[t]}e.sort(or);for(let t=0;t<8;t++)t<E&&e[t][1]?(o[t][0]=e[t][0],o[t][1]=e[t][1]):(o[t][0]=Number.MAX_SAFE_INTEGER,o[t][1]=0);o.sort(sr);var P=h.morphAttributes.position,D=h.morphAttributes.normal;let i=0;for(let t=0;t<8;t++){var I=(R=o[t])[0],R=R[1];I!==Number.MAX_SAFE_INTEGER&&R?(P&&h.getAttribute("morphTarget"+t)!==P[I]&&h.setAttribute("morphTarget"+t,P[I]),D&&h.getAttribute("morphNormal"+t)!==D[I]&&h.setAttribute("morphNormal"+t,D[I]),n[t]=R,i+=R):(P&&!0===h.hasAttribute("morphTarget"+t)&&h.deleteAttribute("morphTarget"+t),D&&!0===h.hasAttribute("morphNormal"+t)&&h.deleteAttribute("morphNormal"+t),n[t]=0)}l=h.morphTargetsRelative?1:1-i,c.getUniforms().setValue(t,"morphTargetBaseInfluence",l),c.getUniforms().setValue(t,"morphTargetInfluences",n)}}}}function ur(t,e,i,r){let n=new WeakMap;function a(t){(t=t.target).removeEventListener("dispose",a),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function(t){var s=r.render.frame,o=t.geometry;o=e.get(t,o);return n.get(o)!==s&&(e.update(o),n.set(o,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",a)&&t.addEventListener("dispose",a),i.update(t.instanceMatrix,34962),null!==t.instanceColor)&&i.update(t.instanceColor,34962),o},dispose:function(){n=new WeakMap}}}const cr=new dt,dr=new mt,pr=new gt,fr=new Si,mr=[],gr=[],vr=new Float32Array(16),xr=new Float32Array(9),_r=new Float32Array(4);function yr(t,e,i){var r=t[0];if(r<=0||0<r)return t;var n=e*i;let a=mr[n];if(void 0===a&&(a=new Float32Array(n),mr[n]=a),0!==e){r.toArray(a,0);for(let r=1,n=0;r!==e;++r)n+=i,t[r].toArray(a,n)}return a}function Mr(t,e){if(t.length===e.length){for(let i=0,r=t.length;i<r;i++)if(t[i]!==e[i])return;return 1}}function Sr(t,e){for(let i=0,r=e.length;i<r;i++)t[i]=e[i]}function wr(t,e){let i=gr[e];void 0===i&&(i=new Int32Array(e),gr[e]=i);for(let r=0;r!==e;++r)i[r]=t.allocateTextureUnit();return i}function br(t,e){var i=this.cache;i[0]!==e&&(t.uniform1f(this.addr,e),i[0]=e)}function Tr(t,e){var i=this.cache;void 0!==e.x?i[0]===e.x&&i[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y):Mr(i,e)||(t.uniform2fv(this.addr,e),Sr(i,e))}function Ar(t,e){var i=this.cache;void 0!==e.x?i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z):void 0!==e.r?i[0]===e.r&&i[1]===e.g&&i[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b):Mr(i,e)||(t.uniform3fv(this.addr,e),Sr(i,e))}function Cr(t,e){var i=this.cache;void 0!==e.x?i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w):Mr(i,e)||(t.uniform4fv(this.addr,e),Sr(i,e))}function Er(t,e){var i=this.cache,r=e.elements;void 0===r?Mr(i,e)||(t.uniformMatrix2fv(this.addr,!1,e),Sr(i,e)):Mr(i,r)||(_r.set(r),t.uniformMatrix2fv(this.addr,!1,_r),Sr(i,r))}function Lr(t,e){var i=this.cache,r=e.elements;void 0===r?Mr(i,e)||(t.uniformMatrix3fv(this.addr,!1,e),Sr(i,e)):Mr(i,r)||(xr.set(r),t.uniformMatrix3fv(this.addr,!1,xr),Sr(i,r))}function Pr(t,e){var i=this.cache,r=e.elements;void 0===r?Mr(i,e)||(t.uniformMatrix4fv(this.addr,!1,e),Sr(i,e)):Mr(i,r)||(vr.set(r),t.uniformMatrix4fv(this.addr,!1,vr),Sr(i,r))}function Dr(t,e){var i=this.cache;i[0]!==e&&(t.uniform1i(this.addr,e),i[0]=e)}function Ir(t,e){var i=this.cache;Mr(i,e)||(t.uniform2iv(this.addr,e),Sr(i,e))}function Rr(t,e){var i=this.cache;Mr(i,e)||(t.uniform3iv(this.addr,e),Sr(i,e))}function Nr(t,e){var i=this.cache;Mr(i,e)||(t.uniform4iv(this.addr,e),Sr(i,e))}function zr(t,e){var i=this.cache;i[0]!==e&&(t.uniform1ui(this.addr,e),i[0]=e)}function Or(t,e){var i=this.cache;Mr(i,e)||(t.uniform2uiv(this.addr,e),Sr(i,e))}function Ur(t,e){var i=this.cache;Mr(i,e)||(t.uniform3uiv(this.addr,e),Sr(i,e))}function Fr(t,e){var i=this.cache;Mr(i,e)||(t.uniform4uiv(this.addr,e),Sr(i,e))}function Br(t,e,i){var r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(t.uniform1i(this.addr,n),r[0]=n),i.setTexture2D(e||cr,n)}function Vr(t,e,i){var r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(t.uniform1i(this.addr,n),r[0]=n),i.setTexture3D(e||pr,n)}function kr(t,e,i){var r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(t.uniform1i(this.addr,n),r[0]=n),i.setTextureCube(e||fr,n)}function Gr(t,e,i){var r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(t.uniform1i(this.addr,n),r[0]=n),i.setTexture2DArray(e||dr,n)}function Wr(t,e){t.uniform1fv(this.addr,e)}function Hr(t,e){e=yr(e,this.size,2),t.uniform2fv(this.addr,e)}function jr(t,e){e=yr(e,this.size,3),t.uniform3fv(this.addr,e)}function Xr(t,e){e=yr(e,this.size,4),t.uniform4fv(this.addr,e)}function qr(t,e){e=yr(e,this.size,4),t.uniformMatrix2fv(this.addr,!1,e)}function Yr(t,e){e=yr(e,this.size,9),t.uniformMatrix3fv(this.addr,!1,e)}function Jr(t,e){e=yr(e,this.size,16),t.uniformMatrix4fv(this.addr,!1,e)}function Zr(t,e){t.uniform1iv(this.addr,e)}function Kr(t,e){t.uniform2iv(this.addr,e)}function Qr(t,e){t.uniform3iv(this.addr,e)}function $r(t,e){t.uniform4iv(this.addr,e)}function tn(t,e){t.uniform1uiv(this.addr,e)}function en(t,e){t.uniform2uiv(this.addr,e)}function rn(t,e){t.uniform3uiv(this.addr,e)}function nn(t,e){t.uniform4uiv(this.addr,e)}function an(t,e,i){var r=e.length,n=wr(i,r);t.uniform1iv(this.addr,n);for(let t=0;t!==r;++t)i.setTexture2D(e[t]||cr,n[t])}function sn(t,e,i){var r=e.length,n=wr(i,r);t.uniform1iv(this.addr,n);for(let t=0;t!==r;++t)i.setTexture3D(e[t]||pr,n[t])}function on(t,e,i){var r=e.length,n=wr(i,r);t.uniform1iv(this.addr,n);for(let t=0;t!==r;++t)i.setTextureCube(e[t]||fr,n[t])}function ln(t,e,i){var r=e.length,n=wr(i,r);t.uniform1iv(this.addr,n);for(let t=0;t!==r;++t)i.setTexture2DArray(e[t]||dr,n[t])}function hn(t,e,i){this.id=t,this.addr=i,this.cache=[],this.setValue=function(t){switch(t){case 5126:return br;case 35664:return Tr;case 35665:return Ar;case 35666:return Cr;case 35674:return Er;case 35675:return Lr;case 35676:return Pr;case 5124:case 35670:return Dr;case 35667:case 35671:return Ir;case 35668:case 35672:return Rr;case 35669:case 35673:return Nr;case 5125:return zr;case 36294:return Or;case 36295:return Ur;case 36296:return Fr;case 35678:case 36198:case 36298:case 36306:case 35682:return Br;case 35679:case 36299:case 36307:return Vr;case 35680:case 36300:case 36308:case 36293:return kr;case 36289:case 36303:case 36311:case 36292:return Gr}}(e.type)}function un(t,e,i){this.id=t,this.addr=i,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Wr;case 35664:return Hr;case 35665:return jr;case 35666:return Xr;case 35674:return qr;case 35675:return Yr;case 35676:return Jr;case 5124:case 35670:return Zr;case 35667:case 35671:return Kr;case 35668:case 35672:return Qr;case 35669:case 35673:return $r;case 5125:return tn;case 36294:return en;case 36295:return rn;case 36296:return nn;case 35678:case 36198:case 36298:case 36306:case 35682:return an;case 35679:case 36299:case 36307:return sn;case 35680:case 36300:case 36308:case 36293:return on;case 36289:case 36303:case 36311:case 36292:return ln}}(e.type)}function cn(t){this.id=t,this.seq=[],this.map={}}cn.prototype.setValue=function(t,e,i){var r=this.seq;for(let a=0,s=r.length;a!==s;++a){var n=r[a];n.setValue(t,e[n.id],i)}};const dn=/(\w+)(\])?(\[|\.)?/g;function pn(t,e){t.seq.push(e),t.map[e.id]=e}function fn(t,e){this.seq=[],this.map={};var i=t.getProgramParameter(e,35718);for(let d=0;d<i;++d){var r=t.getActiveUniform(e,d),n=(c=u=h=s=n=void 0,r),a=t.getUniformLocation(e,r.name),s=this,o=n.name,l=o.length;for(dn.lastIndex=0;;){var h=dn.exec(o),u=dn.lastIndex;let t=h[1];var c="]"===h[2];h=h[3];if(c&&(t|=0),void 0===h||"["===h&&u+2===l){pn(s,new(void 0===h?hn:un)(t,n,a));break}{let e=s.map[t];void 0===e&&pn(s,e=new cn(t)),s=e}}}}function mn(t,e,i){return e=t.createShader(e),t.shaderSource(e,i),t.compileShader(e),e}fn.prototype.setValue=function(t,e,i,r){void 0!==(e=this.map[e])&&e.setValue(t,i,r)},fn.prototype.setOptional=function(t,e,i){void 0!==(e=e[i])&&this.setValue(t,i,e)},fn.upload=function(t,e,i,r){for(let s=0,o=e.length;s!==o;++s){var n=e[s],a=i[n.id];!1!==a.needsUpdate&&n.setValue(t,a.value,r)}},fn.seqWithValue=function(t,e){var i=[];for(let n=0,a=t.length;n!==a;++n){var r=t[n];r.id in e&&i.push(r)}return i};let gn=0;function vn(t,e,i){var r=t.getShaderParameter(e,35713),n=t.getShaderInfoLog(e).trim();return r&&""===n?"":(r=/ERROR: 0:(\d+)/.exec(n))?(r=parseInt(r[0]),i.toUpperCase()+"\n\n"+n+"\n\n"+function(t,e){var i=t.split("\n"),r=[],n=(t=Math.max(e-6,0),Math.min(e+6,i.length));for(let e=t;e<n;e++)r.push(e+1+": "+i[e]);return r.join("\n")}(t.getShaderSource(e),r)):n}function xn(t,e){return"vec4 "+t+"( vec4 value ) { return LinearTo"+(e=function(t){switch(t){case C:return["Linear","( value )"];case E:return["sRGB","( value )"];default:return["Linear","( value )"]}}(e))[0]+e[1]+"; }"}function _n(t){return""!==t}function yn(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Mn(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Sn=/^[ \t]*#include +<([\w\d./]+)>/gm;function wn(t){return t.replace(Sn,bn)}function bn(t,e){var i=Ni[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return wn(i)}const Tn=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,An=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Cn(t){return t.replace(An,Ln).replace(Tn,En)}function En(t,e,i,r){return Ln(0,e,i,r)}function Ln(t,e,i,r){let n="";for(let t=parseInt(e);t<parseInt(i);t++)n+=r.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return n}function Pn(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Dn(t,e,i,r){const n=t.getContext();var a,s=i.defines,h=i.vertexShader,u=i.fragmentShader,d=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(i),p=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case o:case l:e="ENVMAP_TYPE_CUBE";break;case c:e="ENVMAP_TYPE_CUBE_UV"}return e}(i),f=function(t){let e="ENVMAP_MODE_REFLECTION";return t.envMap&&t.envMapMode===l?"ENVMAP_MODE_REFRACTION":e}(i),m=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(i),g=null===(g=(g=i).envMapCubeUVHeight)?null:(a=Math.log2(g)-2,g=1/g,{texelWidth:1/(3*Math.max(Math.pow(2,a),112)),texelHeight:g,maxMip:a}),v=i.isWebGL2?"":[(a=i).extensionDerivatives||a.envMapCubeUVHeight||a.bumpMap||a.tangentSpaceNormalMap||a.clearcoatNormalMap||a.flatShading||"physical"===a.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(a.extensionFragDepth||a.logarithmicDepthBuffer)&&a.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",a.extensionDrawBuffers&&a.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(a.extensionShaderTextureLOD||a.envMap||a.transmission)&&a.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(_n).join("\n");s=function(t){var e=[];for(const r in t){var i=t[r];!1!==i&&e.push("#define "+r+" "+i)}return e.join("\n")}(s);const x=n.createProgram();let _,y,M,S,w=i.glslVersion?"#version "+i.glslVersion+"\n":"";if(i.isRawShaderMaterial?(0<(_=[s].filter(_n).join("\n")).length&&(_+="\n"),0<(y=[v,s].filter(_n).join("\n")).length&&(y+="\n")):(_=[Pn(i),"#define SHADER_NAME "+i.shaderName,s,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+f:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphColors&&i.isWebGL2?"#define USE_MORPHCOLORS":"",0<i.morphTargetsCount&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",0<i.morphTargetsCount&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",0<i.morphTargetsCount&&i.isWebGL2?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+d:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(_n).join("\n"),y=[v,Pn(i),"#define SHADER_NAME "+i.shaderName,s,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+p:"",i.envMap?"#define "+f:"",i.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+d:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==i.toneMapping?"#define TONE_MAPPING":"",0!==i.toneMapping?Ni.tonemapping_pars_fragment:"",0!==i.toneMapping?function(t,e){let i;switch(e){case 1:i="Linear";break;case 2:i="Reinhard";break;case 3:i="OptimizedCineon";break;case 4:i="ACESFilmic";break;case 5:i="Custom";break;default:i="Linear"}return"vec3 toneMapping( vec3 color ) { return "+i+"ToneMapping( color ); }"}(0,i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",Ni.encodings_pars_fragment,xn("linearToOutputTexel",i.outputEncoding),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(_n).join("\n")),h=Mn(yn(wn(h),i),i),u=Mn(yn(wn(u),i),i),h=Cn(h),u=Cn(u),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(w="#version 300 es\n",_=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+_,y=["#define varying in","300 es"===i.glslVersion?"":"layout(location = 0) out highp vec4 pc_fragColor;","300 es"===i.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y),s=w+y+u,p=mn(n,35633,v=w+_+h),f=mn(n,35632,s),n.attachShader(x,p),n.attachShader(x,f),void 0!==i.index0AttributeName?n.bindAttribLocation(x,0,i.index0AttributeName):!0===i.morphTargets&&n.bindAttribLocation(x,0,"position"),n.linkProgram(x),t.debug.checkShaderErrors){m=n.getProgramInfoLog(x).trim(),g=n.getShaderInfoLog(p).trim(),d=n.getShaderInfoLog(f).trim();let t=!0,e=!0;!1===n.getProgramParameter(x,35714)?(t=!1,vn(n,p,"vertex"),vn(n,f,"fragment")):""!==m||""!==g&&""!==d||(e=!1),e&&(this.diagnostics={runnable:t,programLog:m,vertexShader:{log:g,prefix:_},fragmentShader:{log:d,prefix:y}})}return n.deleteShader(p),n.deleteShader(f),this.getUniforms=function(){return M=void 0===M?new fn(n,x):M},this.getAttributes=function(){return S=void 0===S?function(t,e){var i={},r=t.getProgramParameter(e,35721);for(let s=0;s<r;s++){var n=t.getActiveAttrib(e,s),a=n.name;let r=1;35674===n.type&&(r=2),35675===n.type&&(r=3),35676===n.type&&(r=4),i[a]={type:n.type,location:t.getAttribLocation(e,a),locationSize:r}}return i}(n,x):S},this.destroy=function(){r.releaseStatesOfProgram(this),n.deleteProgram(x),this.program=void 0},this.name=i.shaderName,this.id=gn++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=p,this.fragmentShader=f,this}let In=0;class Rn{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){var e=t.vertexShader,i=t.fragmentShader;e=this._getShaderStage(e),i=this._getShaderStage(i);return!1===(t=this._getShaderCacheForMaterial(t)).has(e)&&(t.add(e),e.usedTimes++),!1===t.has(i)&&(t.add(i),i.usedTimes++),this}remove(t){for(const e of this.materialCache.get(t))e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){var e=this.materialCache;return!1===e.has(t)&&e.set(t,new Set),e.get(t)}_getShaderStage(t){var e,i=this.shaderCache;return!1===i.has(t)&&(e=new Nn(t),i.set(t,e)),i.get(t)}}class Nn{constructor(t){this.id=In++,this.code=t,this.usedTimes=0}}function zn(t,e,i,r,a,s,o){const l=new se,h=new Rn,u=[],d=a.isWebGL2,p=a.logarithmicDepthBuffer,f=a.vertexTextures;let m=a.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(s,l,u,v,x){var _=v.fog,y=x.geometry,M=(v=s.isMeshStandardMaterial?v.environment:null,(v=(s.isMeshStandardMaterial?i:e).get(s.envMap||v))&&v.mapping===c?v.image.height:null),S=g[s.type];null!==s.precision&&(m=a.getMaxPrecision(s.precision),s.precision);var w=void 0!==(w=y.morphAttributes.position||y.morphAttributes.normal||y.morphAttributes.color)?w.length:0;let b,T,A,L,P=0;void 0!==y.morphAttributes.position&&(P=1),void 0!==y.morphAttributes.normal&&(P=2),void 0!==y.morphAttributes.color&&(P=3),S?(b=(D=Oi[S]).vertexShader,T=D.fragmentShader):(b=s.vertexShader,T=s.fragmentShader,h.update(s),A=h.getVertexShaderID(s),L=h.getFragmentShaderID(s));var D=t.getRenderTarget(),I=0<s.alphaTest,R=0<s.clearcoat;return{isWebGL2:d,shaderID:S,shaderName:s.type,vertexShader:b,fragmentShader:T,defines:s.defines,customVertexShaderID:A,customFragmentShaderID:L,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:m,instancing:!0===x.isInstancedMesh,instancingColor:!0===x.isInstancedMesh&&null!==x.instanceColor,supportsVertexTextures:f,outputEncoding:null===D?t.outputEncoding:!0===D.isXRRenderTarget?D.texture.encoding:C,map:!!s.map,matcap:!!s.matcap,envMap:!!v,envMapMode:v&&v.mapping,envMapCubeUVHeight:M,lightMap:!!s.lightMap,aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:1===s.normalMapType,tangentSpaceNormalMap:0===s.normalMapType,decodeVideoTexture:!!s.map&&!0===s.map.isVideoTexture&&s.map.encoding===E,clearcoat:R,clearcoatMap:R&&!!s.clearcoatMap,clearcoatRoughnessMap:R&&!!s.clearcoatRoughnessMap,clearcoatNormalMap:R&&!!s.clearcoatNormalMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,specularIntensityMap:!!s.specularIntensityMap,specularColorMap:!!s.specularColorMap,opaque:!1===s.transparent&&1===s.blending,alphaMap:!!s.alphaMap,alphaTest:I,gradientMap:!!s.gradientMap,sheen:0<s.sheen,sheenColorMap:!!s.sheenColorMap,sheenRoughnessMap:!!s.sheenRoughnessMap,transmission:0<s.transmission,transmissionMap:!!s.transmissionMap,thicknessMap:!!s.thicknessMap,combine:s.combine,vertexTangents:!!s.normalMap&&!!y.attributes.tangent,vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!y.attributes.color&&4===y.attributes.color.itemSize,vertexUvs:!!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatMap||s.clearcoatRoughnessMap||s.clearcoatNormalMap||s.displacementMap||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheenColorMap||s.sheenRoughnessMap),uvsVertexOnly:!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatNormalMap||0<s.transmission||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||0<s.sheen||s.sheenColorMap||s.sheenRoughnessMap||!s.displacementMap),fog:!!_,useFog:!0===s.fog,fogExp2:_&&_.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:p,skinning:!0===x.isSkinnedMesh,morphTargets:void 0!==y.morphAttributes.position,morphNormals:void 0!==y.morphAttributes.normal,morphColors:void 0!==y.morphAttributes.color,morphTargetsCount:w,morphTextureStride:P,numDirLights:l.directional.length,numPointLights:l.point.length,numSpotLights:l.spot.length,numRectAreaLights:l.rectArea.length,numHemiLights:l.hemi.length,numDirLightShadows:l.directionalShadowMap.length,numPointLightShadows:l.pointShadowMap.length,numSpotLightShadows:l.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&0<u.length,shadowMapType:t.shadowMap.type,toneMapping:s.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:s.side===n,flipSided:1===s.side,useDepthPacking:!!s.depthPacking,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||r.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()}},getProgramCacheKey:function(e){var i,r,n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&((i=n).push((r=e).precision),i.push(r.outputEncoding),i.push(r.envMapMode),i.push(r.envMapCubeUVHeight),i.push(r.combine),i.push(r.vertexUvs),i.push(r.fogExp2),i.push(r.sizeAttenuation),i.push(r.morphTargetsCount),i.push(r.morphAttributeCount),i.push(r.numDirLights),i.push(r.numPointLights),i.push(r.numSpotLights),i.push(r.numHemiLights),i.push(r.numRectAreaLights),i.push(r.numDirLightShadows),i.push(r.numPointLightShadows),i.push(r.numSpotLightShadows),i.push(r.shadowMapType),i.push(r.toneMapping),i.push(r.numClippingPlanes),i.push(r.numClipIntersection),i.push(r.depthPacking),i=n,r=e,l.disableAll(),r.isWebGL2&&l.enable(0),r.supportsVertexTextures&&l.enable(1),r.instancing&&l.enable(2),r.instancingColor&&l.enable(3),r.map&&l.enable(4),r.matcap&&l.enable(5),r.envMap&&l.enable(6),r.lightMap&&l.enable(7),r.aoMap&&l.enable(8),r.emissiveMap&&l.enable(9),r.bumpMap&&l.enable(10),r.normalMap&&l.enable(11),r.objectSpaceNormalMap&&l.enable(12),r.tangentSpaceNormalMap&&l.enable(13),r.clearcoat&&l.enable(14),r.clearcoatMap&&l.enable(15),r.clearcoatRoughnessMap&&l.enable(16),r.clearcoatNormalMap&&l.enable(17),r.displacementMap&&l.enable(18),r.specularMap&&l.enable(19),r.roughnessMap&&l.enable(20),r.metalnessMap&&l.enable(21),r.gradientMap&&l.enable(22),r.alphaMap&&l.enable(23),r.alphaTest&&l.enable(24),r.vertexColors&&l.enable(25),r.vertexAlphas&&l.enable(26),r.vertexUvs&&l.enable(27),r.vertexTangents&&l.enable(28),r.uvsVertexOnly&&l.enable(29),r.fog&&l.enable(30),i.push(l.mask),l.disableAll(),r.useFog&&l.enable(0),r.flatShading&&l.enable(1),r.logarithmicDepthBuffer&&l.enable(2),r.skinning&&l.enable(3),r.morphTargets&&l.enable(4),r.morphNormals&&l.enable(5),r.morphColors&&l.enable(6),r.premultipliedAlpha&&l.enable(7),r.shadowMapEnabled&&l.enable(8),r.physicallyCorrectLights&&l.enable(9),r.doubleSided&&l.enable(10),r.flipSided&&l.enable(11),r.useDepthPacking&&l.enable(12),r.dithering&&l.enable(13),r.specularIntensityMap&&l.enable(14),r.specularColorMap&&l.enable(15),r.transmission&&l.enable(16),r.transmissionMap&&l.enable(17),r.thicknessMap&&l.enable(18),r.sheen&&l.enable(19),r.sheenColorMap&&l.enable(20),r.sheenRoughnessMap&&l.enable(21),r.decodeVideoTexture&&l.enable(22),r.opaque&&l.enable(23),i.push(l.mask),n.push(t.outputEncoding)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){var e=g[t.type];return e?(e=Oi[e],vi.clone(e.uniforms)):t.uniforms},acquireProgram:function(e,i){let r;for(let t=0,e=u.length;t<e;t++){var n=u[t];if(n.cacheKey===i){++(r=n).usedTimes;break}}return void 0===r&&(r=new Dn(t,i,e,s),u.push(r)),r},releaseProgram:function(t){var e;0==--t.usedTimes&&(e=u.indexOf(t),u[e]=u[u.length-1],u.pop(),t.destroy())},releaseShaderCache:function(t){h.remove(t)},programs:u,dispose:function(){h.dispose()}}}function On(){let t=new WeakMap;return{get:function(e){let i=t.get(e);return void 0===i&&(i={},t.set(e,i)),i},remove:function(e){t.delete(e)},update:function(e,i,r){t.get(e)[i]=r},dispose:function(){t=new WeakMap}}}function Un(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Fn(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Bn(){const t=[];let e=0;const i=[],r=[],n=[];function a(i,r,n,a,s,o){let l=t[e];return void 0===l?(l={id:i.id,object:i,geometry:r,material:n,groupOrder:a,renderOrder:i.renderOrder,z:s,group:o},t[e]=l):(l.id=i.id,l.object=i,l.geometry=r,l.material=n,l.groupOrder=a,l.renderOrder=i.renderOrder,l.z=s,l.group=o),e++,l}return{opaque:i,transmissive:r,transparent:n,init:function(){e=0,i.length=0,r.length=0,n.length=0},push:function(t,e,s,o,l,h){t=a(t,e,s,o,l,h),(0<s.transmission?r:!0===s.transparent?n:i).push(t)},unshift:function(t,e,s,o,l,h){t=a(t,e,s,o,l,h),(0<s.transmission?r:!0===s.transparent?n:i).unshift(t)},finish:function(){for(let r=e,n=t.length;r<n;r++){var i=t[r];if(null===i.id)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.group=null}},sort:function(t,e){1<i.length&&i.sort(t||Un),1<r.length&&r.sort(e||Fn),1<n.length&&n.sort(e||Fn)}}}function Vn(){let t=new WeakMap;return{get:function(e,i){let r;return!1===t.has(e)?(r=new Bn,t.set(e,[r])):i>=t.get(e).length?(r=new Bn,t.get(e).push(r)):r=t.get(e)[i],r},dispose:function(){t=new WeakMap}}}function kn(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":i={direction:new xt,color:new st};break;case"SpotLight":i={position:new xt,direction:new xt,color:new st,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new xt,color:new st,distance:0,decay:0};break;case"HemisphereLight":i={direction:new xt,skyColor:new st,groundColor:new st};break;case"RectAreaLight":i={color:new st,position:new xt,halfWidth:new xt,halfHeight:new xt}}return t[e.id]=i}}}let Gn=0;function Wn(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Hn(t,e){const i=new kn,r=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new X};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new X,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=i}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)n.probe.push(new xt);const a=new xt,s=new Jt,o=new Jt;return{setup:function(a,s){let o=0,l=0,h=0;for(let t=0;t<9;t++)n.probe[t].set(0,0,0);let u=0,c=0,d=0,p=0,f=0,m=0,g=0,v=0;a.sort(Wn);var x=!0!==s?Math.PI:1;for(let t=0,e=a.length;t<e;t++){var _,y,M,S,w=a[t],b=w.color,T=w.intensity,A=w.distance,C=w.shadow&&w.shadow.map?w.shadow.map.texture:null;if(w.isAmbientLight)o+=b.r*T*x,l+=b.g*T*x,h+=b.b*T*x;else if(w.isLightProbe)for(let t=0;t<9;t++)n.probe[t].addScaledVector(w.sh.coefficients[t],T);else w.isDirectionalLight?((M=i.get(w)).color.copy(w.color).multiplyScalar(w.intensity*x),w.castShadow&&(_=w.shadow,(y=r.get(w)).shadowBias=_.bias,y.shadowNormalBias=_.normalBias,y.shadowRadius=_.radius,y.shadowMapSize=_.mapSize,n.directionalShadow[u]=y,n.directionalShadowMap[u]=C,n.directionalShadowMatrix[u]=w.shadow.matrix,m++),n.directional[u]=M,u++):w.isSpotLight?((_=i.get(w)).position.setFromMatrixPosition(w.matrixWorld),_.color.copy(b).multiplyScalar(T*x),_.distance=A,_.coneCos=Math.cos(w.angle),_.penumbraCos=Math.cos(w.angle*(1-w.penumbra)),_.decay=w.decay,w.castShadow&&(y=w.shadow,(M=r.get(w)).shadowBias=y.bias,M.shadowNormalBias=y.normalBias,M.shadowRadius=y.radius,M.shadowMapSize=y.mapSize,n.spotShadow[d]=M,n.spotShadowMap[d]=C,n.spotShadowMatrix[d]=w.shadow.matrix,v++),n.spot[d]=_,d++):w.isRectAreaLight?((A=i.get(w)).color.copy(b).multiplyScalar(T),A.halfWidth.set(.5*w.width,0,0),A.halfHeight.set(0,.5*w.height,0),n.rectArea[p]=A,p++):w.isPointLight?((b=i.get(w)).color.copy(w.color).multiplyScalar(w.intensity*x),b.distance=w.distance,b.decay=w.decay,w.castShadow&&(A=w.shadow,(S=r.get(w)).shadowBias=A.bias,S.shadowNormalBias=A.normalBias,S.shadowRadius=A.radius,S.shadowMapSize=A.mapSize,S.shadowCameraNear=A.camera.near,S.shadowCameraFar=A.camera.far,n.pointShadow[c]=S,n.pointShadowMap[c]=C,n.pointShadowMatrix[c]=w.shadow.matrix,g++),n.point[c]=b,c++):w.isHemisphereLight&&((A=i.get(w)).skyColor.copy(w.color).multiplyScalar(T*x),A.groundColor.copy(w.groundColor).multiplyScalar(T*x),n.hemi[f]=A,f++)}0<p&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(n.rectAreaLTC1=zi.LTC_FLOAT_1,n.rectAreaLTC2=zi.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")&&(n.rectAreaLTC1=zi.LTC_HALF_1,n.rectAreaLTC2=zi.LTC_HALF_2)),n.ambient[0]=o,n.ambient[1]=l,n.ambient[2]=h,(s=n.hash).directionalLength===u&&s.pointLength===c&&s.spotLength===d&&s.rectAreaLength===p&&s.hemiLength===f&&s.numDirectionalShadows===m&&s.numPointShadows===g&&s.numSpotShadows===v||(n.directional.length=u,n.spot.length=d,n.rectArea.length=p,n.point.length=c,n.hemi.length=f,n.directionalShadow.length=m,n.directionalShadowMap.length=m,n.pointShadow.length=g,n.pointShadowMap.length=g,n.spotShadow.length=v,n.spotShadowMap.length=v,n.directionalShadowMatrix.length=m,n.pointShadowMatrix.length=g,n.spotShadowMatrix.length=v,s.directionalLength=u,s.pointLength=c,s.spotLength=d,s.rectAreaLength=p,s.hemiLength=f,s.numDirectionalShadows=m,s.numPointShadows=g,s.numSpotShadows=v,n.version=Gn++)},setupView:function(t,e){let i=0,r=0,l=0,h=0,u=0;var c=e.matrixWorldInverse;for(let e=0,g=t.length;e<g;e++){var d,p,f,m=t[e];m.isDirectionalLight?((d=n.directional[i]).direction.setFromMatrixPosition(m.matrixWorld),a.setFromMatrixPosition(m.target.matrixWorld),d.direction.sub(a),d.direction.transformDirection(c),i++):m.isSpotLight?((d=n.spot[l]).position.setFromMatrixPosition(m.matrixWorld),d.position.applyMatrix4(c),d.direction.setFromMatrixPosition(m.matrixWorld),a.setFromMatrixPosition(m.target.matrixWorld),d.direction.sub(a),d.direction.transformDirection(c),l++):m.isRectAreaLight?((p=n.rectArea[h]).position.setFromMatrixPosition(m.matrixWorld),p.position.applyMatrix4(c),o.identity(),s.copy(m.matrixWorld),s.premultiply(c),o.extractRotation(s),p.halfWidth.set(.5*m.width,0,0),p.halfHeight.set(0,.5*m.height,0),p.halfWidth.applyMatrix4(o),p.halfHeight.applyMatrix4(o),h++):m.isPointLight?((p=n.point[r]).position.setFromMatrixPosition(m.matrixWorld),p.position.applyMatrix4(c),r++):m.isHemisphereLight&&((f=n.hemi[u]).direction.setFromMatrixPosition(m.matrixWorld),f.direction.transformDirection(c),u++)}},state:n}}function jn(t,e){const i=new Hn(t,e),r=[],n=[];return{init:function(){r.length=0,n.length=0},state:{lightsArray:r,shadowsArray:n,lights:i},setupLights:function(t){i.setup(r,t)},setupLightsView:function(t){i.setupView(r,t)},pushLight:function(t){r.push(t)},pushShadow:function(t){n.push(t)}}}function Xn(t,e){let i=new WeakMap;return{get:function(r,n=0){let a;return!1===i.has(r)?(a=new jn(t,e),i.set(r,[a])):n>=i.get(r).length?(a=new jn(t,e),i.get(r).push(a)):a=i.get(r)[n],a},dispose:function(){i=new WeakMap}}}class qn extends Re{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}qn.prototype.isMeshDepthMaterial=!0;class Yn extends Re{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new xt,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}Yn.prototype.isMeshDistanceMaterial=!0;function Jn(t,e,i){let r=new Pi;const s=new X,o=new X,l=new pt,h=new qn({depthPacking:L}),u=new Yn,c={},d=i.maxTextureSize,f={0:1,1:0,2:n},m=new xi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new X},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=m.clone();g.defines.HORIZONTAL_PASS=1,(i=new Ye).setAttribute("position",new Ue(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new di(i,m),x=this;function _(e,i,r,n,a,s){let o=null;if(o=void 0!==(e=!0===r.isPointLight?e.customDistanceMaterial:e.customDepthMaterial)?e:!0===r.isPointLight?u:h,t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&0<i.alphaTest){e=o.uuid;var l=i.uuid;let t=c[e],r=(void 0===t&&(t={},c[e]=t),t[l]);void 0===r&&(r=o.clone(),t[l]=r),o=r}return o.visible=i.visible,o.wireframe=i.wireframe,o.side=3===s?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:f[i.side],o.alphaMap=i.alphaMap,o.alphaTest=i.alphaTest,o.clipShadows=i.clipShadows,o.clippingPlanes=i.clippingPlanes,o.clipIntersection=i.clipIntersection,o.displacementMap=i.displacementMap,o.displacementScale=i.displacementScale,o.displacementBias=i.displacementBias,o.wireframeLinewidth=i.wireframeLinewidth,o.linewidth=i.linewidth,!0===r.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(r.matrixWorld),o.nearDistance=n,o.farDistance=a),o}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(i,n,h){if(!1!==x.enabled&&(!1!==x.autoUpdate||!1!==x.needsUpdate)&&0!==i.length){var u=t.getRenderTarget(),c=t.getActiveCubeFace(),f=t.getActiveMipmapLevel(),y=t.state;y.setBlending(a),y.buffers.color.setClear(1,1,1,1),y.buffers.depth.setTest(!0),y.setScissorTest(!1);for(let a=0,u=i.length;a<u;a++){var S=i[a],w=S.shadow;if(void 0!==w&&(!1!==w.autoUpdate||!1!==w.needsUpdate)){s.copy(w.mapSize);var b,T,A=w.getFrameExtents(),C=(s.multiply(A),o.copy(w.mapSize),(s.x>d||s.y>d)&&(s.x>d&&(o.x=Math.floor(d/A.x),s.x=o.x*A.x,w.mapSize.x=o.x),s.y>d)&&(o.y=Math.floor(d/A.y),s.y=o.y*A.y,w.mapSize.y=o.y),null!==w.map||w.isPointLightShadow||3!==this.type||(w.map=new ft(s.x,s.y),w.map.texture.name=S.name+".shadowMap",w.mapPass=new ft(s.x,s.y),w.camera.updateProjectionMatrix()),null===w.map&&(A={minFilter:p,magFilter:p,format:M},w.map=new ft(s.x,s.y,A),w.map.texture.name=S.name+".shadowMap",w.camera.updateProjectionMatrix()),t.setRenderTarget(w.map),t.clear(),w.getViewportCount());for(let i=0;i<C;i++){var E=w.getViewport(i);l.set(o.x*E.x,o.y*E.y,o.x*E.z,o.y*E.w),y.viewport(l),w.updateMatrices(S,i),r=w.getFrustum(),function i(n,a,s,o,l){if(!1===n.visible)return;if(n.layers.test(a.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===l)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const i=e.update(n),r=n.material;if(Array.isArray(r)){const e=i.groups;for(let a=0,h=e.length;a<h;a++){const h=e[a],u=r[h.materialIndex];if(u&&u.visible){const e=_(n,u,o,s.near,s.far,l);t.renderBufferDirect(s,null,i,e,n,h)}}}else if(r.visible){const e=_(n,r,o,s.near,s.far,l);t.renderBufferDirect(s,null,i,e,n,null)}}const h=n.children;for(let t=0,e=h.length;t<e;t++)i(h[t],a,s,o,l)}(n,h,w.camera,S,this.type)}w.isPointLightShadow||3!==this.type||(A=void 0,A=w,b=h,T=e.update(v),m.defines.VSM_SAMPLES!==A.blurSamples&&(m.defines.VSM_SAMPLES=A.blurSamples,g.defines.VSM_SAMPLES=A.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),m.uniforms.shadow_pass.value=A.map.texture,m.uniforms.resolution.value=A.mapSize,m.uniforms.radius.value=A.radius,t.setRenderTarget(A.mapPass),t.clear(),t.renderBufferDirect(b,null,T,m,v,null),g.uniforms.shadow_pass.value=A.mapPass.texture,g.uniforms.resolution.value=A.mapSize,g.uniforms.radius.value=A.radius,t.setRenderTarget(A.map),t.clear(),t.renderBufferDirect(b,null,T,g,v,null)),w.needsUpdate=!1}}x.needsUpdate=!1,t.setRenderTarget(u,c,f)}}}function Zn(t,e,i){const r=i.isWebGL2,o=new function(){let e=!1;const i=new pt;let r=null;const n=new pt(0,0,0,0);return{setMask:function(i){r===i||e||(t.colorMask(i,i,i,i),r=i)},setLocked:function(t){e=t},setClear:function(e,r,a,s,o){!0===o&&(e*=s,r*=s,a*=s),i.set(e,r,a,s),!1===n.equals(i)&&(t.clearColor(e,r,a,s),n.copy(i))},reset:function(){e=!1,r=null,n.set(-1,0,0,0)}}},l=new function(){let e=!1,i=null,r=null,n=null;return{setTest:function(t){(t?V:k)(2929)},setMask:function(r){i===r||e||(t.depthMask(r),i=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case 0:t.depthFunc(512);break;case 1:t.depthFunc(519);break;case 2:t.depthFunc(513);break;case 3:t.depthFunc(515);break;case 4:t.depthFunc(514);break;case 5:t.depthFunc(518);break;case 6:t.depthFunc(516);break;case 7:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){n!==e&&(t.clearDepth(e),n=e)},reset:function(){e=!1,i=null,r=null,n=null}}},h=new function(){let e=!1,i=null,r=null,n=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(t){e||(t?V:k)(2960)},setMask:function(r){i===r||e||(t.stencilMask(r),i=r)},setFunc:function(e,i,s){r===e&&n===i&&a===s||(t.stencilFunc(e,i,s),r=e,n=i,a=s)},setOp:function(e,i,r){s===e&&o===i&&l===r||(t.stencilOp(e,i,r),s=e,o=i,l=r)},setLocked:function(t){e=t},setClear:function(e){h!==e&&(t.clearStencil(e),h=e)},reset:function(){e=!1,i=null,r=null,n=null,a=null,s=null,o=null,l=null,h=null}}};let u={},c={},d=new WeakMap,p=[],f=null,m=!1,g=null,v=null,x=null,_=null,y=null,M=null,S=null,w=!1,b=null,T=null,A=null,C=null,E=null;const L=t.getParameter(35661);let P=!1,D=0;-1!==(N=t.getParameter(7938)).indexOf("WebGL")?(D=parseFloat(/^WebGL (\d)/.exec(N)[1]),P=1<=D):-1!==N.indexOf("OpenGL ES")&&(D=parseFloat(/^OpenGL ES (\d)/.exec(N)[1]),P=2<=D);let I=null,R={};var N=t.getParameter(3088),z=t.getParameter(2978);const O=(new pt).fromArray(N),U=(new pt).fromArray(z);function F(e,i,r){var n=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<r;e++)t.texImage2D(i+e,0,6408,1,1,0,6408,5121,n);return a}const B={};function V(e){!0!==u[e]&&(t.enable(e),u[e]=!0)}function k(e){!1!==u[e]&&(t.disable(e),u[e]=!1)}B[3553]=F(3553,3553,1),B[34067]=F(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),h.setClear(0),V(2929),l.setFunc(3),j(!1),X(1),V(2884),H(a);const G={100:32774,101:32778,102:32779},W=(r?(G[103]=32775,G[104]=32776):null!==(N=e.get("EXT_blend_minmax"))&&(G[103]=N.MIN_EXT,G[104]=N.MAX_EXT),{200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773});function H(e,i,r,n,o,l,h,u){if(e===a)!0===m&&(k(3042),m=!1);else if(!1===m&&(V(3042),m=!0),5!==e){if(e!==g||u!==w){if(100===v&&100===y||(t.blendEquation(32774),v=100,y=100),u)switch(e){case 1:t.blendFuncSeparate(1,771,1,771);break;case s:t.blendFunc(1,1);break;case 3:t.blendFuncSeparate(0,769,0,1);break;case 4:t.blendFuncSeparate(0,768,0,770)}else switch(e){case 1:t.blendFuncSeparate(770,771,1,771);break;case s:t.blendFunc(770,1);break;case 3:t.blendFuncSeparate(0,769,0,1);break;case 4:t.blendFunc(0,768)}x=null,_=null,M=null,S=null,g=e,w=u}}else o=o||i,l=l||r,h=h||n,i===v&&o===y||(t.blendEquationSeparate(G[i],G[o]),v=i,y=o),r===x&&n===_&&l===M&&h===S||(t.blendFuncSeparate(W[r],W[n],W[l],W[h]),x=r,_=n,M=l,S=h),g=e,w=null}function j(e){b!==e&&(e?t.frontFace(2304):t.frontFace(2305),b=e)}function X(e){0!==e?(V(2884),e!==T&&(1===e?t.cullFace(1029):2===e?t.cullFace(1028):t.cullFace(1032))):k(2884),T=e}function q(e,i,r){e?(V(32823),C===i&&E===r||(t.polygonOffset(i,r),C=i,E=r)):k(32823)}function Y(e){void 0===e&&(e=33984+L-1),I!==e&&(t.activeTexture(e),I=e)}return{buffers:{color:o,depth:l,stencil:h},enable:V,disable:k,bindFramebuffer:function(e,i){return c[e]!==i&&(t.bindFramebuffer(e,i),c[e]=i,r&&(36009===e&&(c[36160]=i),36160===e)&&(c[36009]=i),!0)},drawBuffers:function(r,n){let a=p,s=!1;if(r)if(void 0===(a=d.get(n))&&(a=[],d.set(n,a)),r.isWebGLMultipleRenderTargets){if(n=r.texture,a.length!==n.length||36064!==a[0]){for(let t=0,e=n.length;t<e;t++)a[t]=36064+t;a.length=n.length,s=!0}}else 36064!==a[0]&&(a[0]=36064,s=!0);else 1029!==a[0]&&(a[0]=1029,s=!0);s&&(i.isWebGL2?t.drawBuffers(a):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(e){return f!==e&&(t.useProgram(e),f=e,!0)},setBlending:H,setMaterial:function(t,e){(t.side===n?k:V)(2884);let i=1===t.side;j(i=e?!i:i),1===t.blending&&!1===t.transparent?H(a):H(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),l.setFunc(t.depthFunc),l.setTest(t.depthTest),l.setMask(t.depthWrite),o.setMask(t.colorWrite),e=t.stencilWrite,h.setTest(e),e&&(h.setMask(t.stencilWriteMask),h.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),h.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),q(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),(!0===t.alphaToCoverage?V:k)(32926)},setFlipSided:j,setCullFace:X,setLineWidth:function(e){e!==A&&(P&&t.lineWidth(e),A=e)},setPolygonOffset:q,setScissorTest:function(t){(t?V:k)(3089)},activeTexture:Y,bindTexture:function(e,i){null===I&&Y();let r=R[I];void 0===r&&(r={type:void 0,texture:void 0},R[I]=r),r.type===e&&r.texture===i||(t.bindTexture(e,i||B[e]),r.type=e,r.texture=i)},unbindTexture:function(){var e=R[I];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){}},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){}},scissor:function(e){!1===O.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),O.copy(e))},viewport:function(e){!1===U.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),U.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),u={},I=null,R={},c={},d=new WeakMap,p=[],f=null,m=!1,g=null,v=null,x=null,_=null,y=null,M=null,S=null,w=!1,b=null,T=null,A=null,C=null,E=null,O.set(0,0,t.canvas.width,t.canvas.height),U.set(0,0,t.canvas.width,t.canvas.height),o.reset(),l.reset(),h.reset()}}}function Kn(t,e,i,r,n,a,s){const o=n.isWebGL2,l=(n.maxTextures,n.maxCubemapSize),h=n.maxTextureSize,u=n.maxSamples,c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,g=/OculusBrowser/g.test(navigator.userAgent),b=new WeakMap;let T;const A=new WeakMap;let L=!1;try{L="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function P(t,e){return L?new OffscreenCanvas(t,e):J("canvas")}function D(t,e,i,r){let n=1;return((n=t.width>r||t.height>r?r/Math.max(t.width,t.height):n)<1||!0===e)&&("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap)?(e=(r=e?H:Math.floor)(n*t.width),r=r(n*t.height),void 0===T&&(T=P(e,r)),(i=i?P(e,r):T).width=e,i.height=r,i.getContext("2d").drawImage(t,0,0,e,r),i):t}function I(t){return W(t.width)&&W(t.height)}function R(t,e){return t.generateMipmaps&&e&&t.minFilter!==p&&t.minFilter!==f}function N(e){t.generateMipmap(e)}function z(i,r,n,a,s=!1){if(!1===o)return r;if(null!==i&&void 0!==t[i])return t[i];let l=r;return 6403===r&&(5126===n&&(l=33326),5131===n&&(l=33325),5121===n)&&(l=33321),33319===r&&(5126===n&&(l=33328),5131===n&&(l=33327),5121===n)&&(l=33323),33325!==(l=6408===r&&(5126===n&&(l=34836),5131===n&&(l=34842),5121===n&&(l=a===E&&!1===s?35907:32856),32819===n&&(l=32854),32820===n)?32855:l)&&33326!==l&&33327!==l&&33328!==l&&34842!==l&&34836!==l||e.get("EXT_color_buffer_float"),l}function O(t,e,i){return!0===R(t,i)||t.isFramebufferTexture&&t.minFilter!==p&&t.minFilter!==f?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&0<t.mipmaps.length?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function U(t){return t===p||1004===t||1005===t?9728:9729}function F(t){var e,i,n,a;(t=t.target).removeEventListener("dispose",F),e=t,void 0!==(i=r.get(e)).__webglInit&&(n=e.source,(a=A.get(n))&&((i=a[i.__cacheKey]).usedTimes--,0===i.usedTimes&&V(e),0===Object.keys(a).length)&&A.delete(n),r.remove(e)),t.isVideoTexture&&b.delete(t)}function B(e){var i=((e=e.target).removeEventListener("dispose",B),e.texture),n=r.get(e),a=r.get(i);if(void 0!==a.__webglTexture&&(t.deleteTexture(a.__webglTexture),s.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&t.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let e=0,n=i.length;e<n;e++){var o=r.get(i[e]);o.__webglTexture&&(t.deleteTexture(o.__webglTexture),s.memory.textures--),r.remove(i[e])}r.remove(i),r.remove(e)}function V(e){var i=r.get(e);t.deleteTexture(i.__webglTexture),e=e.source;delete A.get(e)[i.__cacheKey],s.memory.textures--}let k=0;function G(t,e){var n,a=r.get(t);if(t.isVideoTexture&&(n=t,o=s.render.frame,b.get(n)!==o)&&(b.set(n,o),n.update()),!1===t.isRenderTargetTexture&&0<t.version&&a.__version!==t.version){var o=t.image;if(null!==o&&!1!==o.complete)return void Z(a,t,e)}i.activeTexture(33984+e),i.bindTexture(3553,a.__webglTexture)}const j={1e3:10497,[d]:33071,1002:33648},X={[p]:9728,1004:9984,1005:9986,[f]:9729,1007:9985,[m]:9987};function q(i,a,s){s?(t.texParameteri(i,10242,j[a.wrapS]),t.texParameteri(i,10243,j[a.wrapT]),32879!==i&&35866!==i||t.texParameteri(i,32882,j[a.wrapR]),t.texParameteri(i,10240,X[a.magFilter]),t.texParameteri(i,10241,X[a.minFilter])):(t.texParameteri(i,10242,33071),t.texParameteri(i,10243,33071),32879!==i&&35866!==i||t.texParameteri(i,32882,33071),a.wrapS===d&&a.wrapT,t.texParameteri(i,10240,U(a.magFilter)),t.texParameteri(i,10241,U(a.minFilter)),a.minFilter!==p&&a.minFilter),!0===e.has("EXT_texture_filter_anisotropic")&&(s=e.get("EXT_texture_filter_anisotropic"),a.type===x&&!1===e.has("OES_texture_float_linear")||!1===o&&a.type===_&&!1===e.has("OES_texture_half_float_linear")||(1<a.anisotropy||r.get(a).__currentAnisotropy)&&(t.texParameterf(i,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,n.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy))}function Y(e,i){let r=!1;void 0===e.__webglInit&&(e.__webglInit=!0,i.addEventListener("dispose",F));var n=i.source;let a=A.get(n);void 0===a&&(a={},A.set(n,a)),(n=[]).push((o=i).wrapS),n.push(o.wrapT),n.push(o.magFilter),n.push(o.minFilter),n.push(o.anisotropy),n.push(o.internalFormat),n.push(o.format),n.push(o.type),n.push(o.generateMipmaps),n.push(o.premultiplyAlpha),n.push(o.flipY),n.push(o.unpackAlignment),n.push(o.encoding);var o=n.join();return o!==e.__cacheKey&&(void 0===a[o]&&(a[o]={texture:t.createTexture(),usedTimes:0},s.memory.textures++,r=!0),a[o].usedTimes++,void 0!==(n=a[e.__cacheKey])&&(a[e.__cacheKey].usedTimes--,0===n.usedTimes)&&V(i),e.__cacheKey=o,e.__webglTexture=a[o].texture),r}function Z(e,r,n){let s=3553;r.isDataArrayTexture&&(s=35866),r.isData3DTexture&&(s=32879);var l=Y(e,r),u=r.source;if(i.activeTexture(33984+n),i.bindTexture(s,e.__webglTexture),u.version!==u.__currentVersion||!0===l){t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0),n=r;n=!o&&(n.wrapS!==d||n.wrapT!==d||n.minFilter!==p&&n.minFilter!==f)&&!1===I(r.image);var c=I(n=it(r,D(r.image,n,!1,h)))||o,m=a.convert(r.format,r.encoding);let T,A=a.convert(r.type),C=z(r.internalFormat,m,A,r.encoding,r.isVideoTexture);q(s,r,c);var g=r.mipmaps,_=o&&!0!==r.isVideoTexture,b=(l=void 0===e.__version||!0===l,O(r,n,c));if(r.isDepthTexture)C=6402,o?C=r.type===x?36012:1014===r.type?33190:r.type===y?35056:33189:r.type,r.format===S&&6402===C&&r.type!==v&&1014!==r.type&&(r.type=v,A=a.convert(r.type)),r.format===w&&6402===C&&(C=34041,r.type!==y)&&(r.type=y,A=a.convert(r.type)),l&&(_?i.texStorage2D(3553,1,C,n.width,n.height):i.texImage2D(3553,0,C,n.width,n.height,0,m,A,null));else if(r.isDataTexture)if(0<g.length&&c){_&&l&&i.texStorage2D(3553,b,C,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)T=g[t],_?i.texSubImage2D(3553,t,0,0,T.width,T.height,m,A,T.data):i.texImage2D(3553,t,C,T.width,T.height,0,m,A,T.data);r.generateMipmaps=!1}else _?(l&&i.texStorage2D(3553,b,C,n.width,n.height),i.texSubImage2D(3553,0,0,0,n.width,n.height,m,A,n.data)):i.texImage2D(3553,0,C,n.width,n.height,0,m,A,n.data);else if(r.isCompressedTexture){_&&l&&i.texStorage2D(3553,b,C,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)T=g[t],r.format!==M?null!==m&&(_?i.compressedTexSubImage2D(3553,t,0,0,T.width,T.height,m,T.data):i.compressedTexImage2D(3553,t,C,T.width,T.height,0,T.data)):_?i.texSubImage2D(3553,t,0,0,T.width,T.height,m,A,T.data):i.texImage2D(3553,t,C,T.width,T.height,0,m,A,T.data)}else if(r.isDataArrayTexture)_?(l&&i.texStorage3D(35866,b,C,n.width,n.height,n.depth),i.texSubImage3D(35866,0,0,0,0,n.width,n.height,n.depth,m,A,n.data)):i.texImage3D(35866,0,C,n.width,n.height,n.depth,0,m,A,n.data);else if(r.isData3DTexture)_?(l&&i.texStorage3D(32879,b,C,n.width,n.height,n.depth),i.texSubImage3D(32879,0,0,0,0,n.width,n.height,n.depth,m,A,n.data)):i.texImage3D(32879,0,C,n.width,n.height,n.depth,0,m,A,n.data);else if(r.isFramebufferTexture){if(l)if(_)i.texStorage2D(3553,b,C,n.width,n.height);else{let t=n.width,e=n.height;for(let r=0;r<b;r++)i.texImage2D(3553,r,C,t,e,0,m,A,null),t>>=1,e>>=1}}else if(0<g.length&&c){_&&l&&i.texStorage2D(3553,b,C,g[0].width,g[0].height);for(let t=0,e=g.length;t<e;t++)T=g[t],_?i.texSubImage2D(3553,t,0,0,m,A,T):i.texImage2D(3553,t,C,m,A,T);r.generateMipmaps=!1}else _?(l&&i.texStorage2D(3553,b,C,n.width,n.height),i.texSubImage2D(3553,0,0,0,m,A,n)):i.texImage2D(3553,0,C,m,A,n);R(r,c)&&N(s),u.__currentVersion=u.version,r.onUpdate&&r.onUpdate(r)}e.__version=r.version}function K(e,n,s,o,l){var h=a.convert(s.format,s.encoding),u=a.convert(s.type),d=z(s.internalFormat,h,u,s.encoding);r.get(n).__hasExternalTextures||(32879===l||35866===l?i.texImage3D(l,0,d,n.width,n.height,n.depth,0,h,u,null):i.texImage2D(l,0,d,n.width,n.height,0,h,u,null)),i.bindFramebuffer(36160,e),et(n)?c.framebufferTexture2DMultisampleEXT(36160,o,l,r.get(s).__webglTexture,0,tt(n)):t.framebufferTexture2D(36160,o,l,r.get(s).__webglTexture,0),i.bindFramebuffer(36160,null)}function Q(e,i,r){if(t.bindRenderbuffer(36161,e),i.depthBuffer&&!i.stencilBuffer){let a=33189;r||et(i)?((n=i.depthTexture)&&n.isDepthTexture&&(n.type===x?a=36012:1014===n.type&&(a=33190)),n=tt(i),et(i)?c.renderbufferStorageMultisampleEXT(36161,n,a,i.width,i.height):t.renderbufferStorageMultisample(36161,n,a,i.width,i.height)):t.renderbufferStorage(36161,a,i.width,i.height),t.framebufferRenderbuffer(36160,36096,36161,e)}else{var n,s;i.depthBuffer&&i.stencilBuffer?(n=tt(i),r&&!1===et(i)?t.renderbufferStorageMultisample(36161,n,35056,i.width,i.height):et(i)?c.renderbufferStorageMultisampleEXT(36161,n,35056,i.width,i.height):t.renderbufferStorage(36161,34041,i.width,i.height),t.framebufferRenderbuffer(36160,33306,36161,e)):(n=!0===i.isWebGLMultipleRenderTargets?i.texture[0]:i.texture,e=a.convert(n.format,n.encoding),s=a.convert(n.type),e=z(n.internalFormat,e,s,n.encoding),s=tt(i),r&&!1===et(i)?t.renderbufferStorageMultisample(36161,s,e,i.width,i.height):et(i)?c.renderbufferStorageMultisampleEXT(36161,s,e,i.width,i.height):t.renderbufferStorage(36161,e,i.width,i.height))}t.bindRenderbuffer(36161,null)}function $(e){var n=r.get(e),a=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!n.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");var s=n.__webglFramebuffer,o=e;if(o&&o.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,s),!o.depthTexture||!o.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(o.depthTexture).__webglTexture&&o.depthTexture.image.width===o.width&&o.depthTexture.image.height===o.height||(o.depthTexture.image.width=o.width,o.depthTexture.image.height=o.height,o.depthTexture.needsUpdate=!0),G(o.depthTexture,0);s=r.get(o.depthTexture).__webglTexture;var l=tt(o);if(o.depthTexture.format===S)et(o)?c.framebufferTexture2DMultisampleEXT(36160,36096,3553,s,0,l):t.framebufferTexture2D(36160,36096,3553,s,0);else{if(o.depthTexture.format!==w)throw new Error("Unknown depthTexture format");et(o)?c.framebufferTexture2DMultisampleEXT(36160,33306,3553,s,0,l):t.framebufferTexture2D(36160,33306,3553,s,0)}}else if(a){n.__webglDepthbuffer=[];for(let r=0;r<6;r++)i.bindFramebuffer(36160,n.__webglFramebuffer[r]),n.__webglDepthbuffer[r]=t.createRenderbuffer(),Q(n.__webglDepthbuffer[r],e,!1)}else i.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),Q(n.__webglDepthbuffer,e,!1);i.bindFramebuffer(36160,null)}function tt(t){return Math.min(u,t.samples)}function et(t){var i=r.get(t);return o&&0<t.samples&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function it(t,i){var r=t.encoding,n=t.format;return t.type,!0!==t.isCompressedTexture&&!0!==t.isVideoTexture&&1035!==t.format&&r!==C&&r===E&&!1===o&&(!0===e.has("EXT_sRGB")&&n===M?(t.format=1035,t.minFilter=f,t.generateMipmaps=!1):i=lt.sRGBToLinear(i)),i}this.allocateTextureUnit=function(){var t=k;return k+=1,t},this.resetTextureUnits=function(){k=0},this.setTexture2D=G,this.setTexture2DArray=function(t,e){var n=r.get(t);0<t.version&&n.__version!==t.version?Z(n,t,e):(i.activeTexture(33984+e),i.bindTexture(35866,n.__webglTexture))},this.setTexture3D=function(t,e){var n=r.get(t);0<t.version&&n.__version!==t.version?Z(n,t,e):(i.activeTexture(33984+e),i.bindTexture(32879,n.__webglTexture))},this.setTextureCube=function(e,n){var s=r.get(e);if(0<e.version&&s.__version!==e.version){var h=s,u=e;e=n;if(6===u.image.length){var c=Y(h,u),d=u.source;if(i.activeTexture(33984+e),i.bindTexture(34067,h.__webglTexture),d.version!==d.__currentVersion||!0===c){t.pixelStorei(37440,u.flipY),t.pixelStorei(37441,u.premultiplyAlpha),t.pixelStorei(3317,u.unpackAlignment),t.pixelStorei(37443,0);var p=u.isCompressedTexture||u.image[0].isCompressedTexture,f=u.image[0]&&u.image[0].isDataTexture,m=[];for(let t=0;t<6;t++)m[t]=p||f?f?u.image[t].image:u.image[t]:D(u.image[t],!1,!0,l),m[t]=it(u,m[t]);c=I(e=m[0])||o;var g=a.convert(u.format,u.encoding),v=a.convert(u.type),x=z(u.internalFormat,g,v,u.encoding),_=o&&!0!==u.isVideoTexture,y=void 0===h.__version;let r,n=O(u,e,c);if(q(34067,u,c),p){_&&y&&i.texStorage2D(34067,n,x,e.width,e.height);for(let t=0;t<6;t++){r=m[t].mipmaps;for(let e=0;e<r.length;e++){var S=r[e];u.format!==M?null!==g&&(_?i.compressedTexSubImage2D(34069+t,e,0,0,S.width,S.height,g,S.data):i.compressedTexImage2D(34069+t,e,x,S.width,S.height,0,S.data)):_?i.texSubImage2D(34069+t,e,0,0,S.width,S.height,g,v,S.data):i.texImage2D(34069+t,e,x,S.width,S.height,0,g,v,S.data)}}}else{r=u.mipmaps,_&&y&&(0<r.length&&n++,i.texStorage2D(34067,n,x,m[0].width,m[0].height));for(let t=0;t<6;t++)if(f){_?i.texSubImage2D(34069+t,0,0,0,m[t].width,m[t].height,g,v,m[t].data):i.texImage2D(34069+t,0,x,m[t].width,m[t].height,0,g,v,m[t].data);for(let e=0;e<r.length;e++){var w=r[e].image[t].image;_?i.texSubImage2D(34069+t,e+1,0,0,w.width,w.height,g,v,w.data):i.texImage2D(34069+t,e+1,x,w.width,w.height,0,g,v,w.data)}}else{_?i.texSubImage2D(34069+t,0,0,0,g,v,m[t]):i.texImage2D(34069+t,0,x,g,v,m[t]);for(let e=0;e<r.length;e++){var b=r[e];_?i.texSubImage2D(34069+t,e+1,0,0,g,v,b.image[t]):i.texImage2D(34069+t,e+1,x,g,v,b.image[t])}}}R(u,c)&&N(34067),d.__currentVersion=d.version,u.onUpdate&&u.onUpdate(u)}h.__version=u.version}}else i.activeTexture(33984+n),i.bindTexture(34067,s.__webglTexture)},this.rebindTextures=function(t,e,i){var n=r.get(t);void 0!==e&&K(n.__webglFramebuffer,t,t.texture,36064,3553),void 0!==i&&$(t)},this.setupRenderTarget=function(e){var l,h,u=e.texture,c=r.get(e),d=r.get(u),p=(e.addEventListener("dispose",B),!0!==e.isWebGLMultipleRenderTargets&&(void 0===d.__webglTexture&&(d.__webglTexture=t.createTexture()),d.__version=u.version,s.memory.textures++),!0===e.isWebGLCubeRenderTarget),f=!0===e.isWebGLMultipleRenderTargets,m=I(e)||o;if(p){c.__webglFramebuffer=[];for(let e=0;e<6;e++)c.__webglFramebuffer[e]=t.createFramebuffer()}else if(c.__webglFramebuffer=t.createFramebuffer(),f){if(n.drawBuffers){var g=e.texture;for(let e=0,i=g.length;e<i;e++){var v=r.get(g[e]);void 0===v.__webglTexture&&(v.__webglTexture=t.createTexture(),s.memory.textures++)}}}else o&&0<e.samples&&!1===et(e)&&(c.__webglMultisampledFramebuffer=t.createFramebuffer(),c.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,c.__webglColorRenderbuffer),l=a.convert(u.format,u.encoding),h=a.convert(u.type),l=z(u.internalFormat,l,h,u.encoding),h=tt(e),t.renderbufferStorageMultisample(36161,h,l,e.width,e.height),i.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,c.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(c.__webglDepthRenderbuffer=t.createRenderbuffer(),Q(c.__webglDepthRenderbuffer,e,!0)),i.bindFramebuffer(36160,null));if(p){i.bindTexture(34067,d.__webglTexture),q(34067,u,m);for(let t=0;t<6;t++)K(c.__webglFramebuffer[t],e,u,36064,34069+t);R(u,m)&&N(34067)}else if(f){var x=e.texture;for(let t=0,n=x.length;t<n;t++){var _=x[t],y=r.get(_);i.bindTexture(3553,y.__webglTexture),q(3553,_,m),K(c.__webglFramebuffer,e,_,36064+t,3553),R(_,m)&&N(3553)}}else{let t=3553;(e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&o&&(t=e.isWebGL3DRenderTarget?32879:35866),i.bindTexture(t,d.__webglTexture),q(t,u,m),K(c.__webglFramebuffer,e,u,36064,t),R(u,m)&&N(t)}i.unbindTexture(),e.depthBuffer&&$(e)},this.updateRenderTargetMipmap=function(t){var e=I(t)||o,n=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let o=0,l=n.length;o<l;o++){var a,s=n[o];R(s,e)&&(a=t.isWebGLCubeRenderTarget?34067:3553,s=r.get(s).__webglTexture,i.bindTexture(a,s),N(a),i.unbindTexture())}},this.updateMultisampleRenderTarget=function(e){if(o&&0<e.samples&&!1===et(e)){var n=e.width,a=e.height;let o=16384;var s=[36064],l=e.stencilBuffer?33306:36096,h=(e.depthBuffer&&s.push(l),r.get(e)),u=void 0!==h.__ignoreDepthValues&&h.__ignoreDepthValues;!1===u&&(e.depthBuffer&&(o|=256),e.stencilBuffer)&&(o|=1024),i.bindFramebuffer(36008,h.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,h.__webglFramebuffer),!0===u&&(t.invalidateFramebuffer(36008,[l]),t.invalidateFramebuffer(36009,[l])),t.blitFramebuffer(0,0,n,a,0,0,n,a,o,9728),g&&t.invalidateFramebuffer(36008,s),i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,h.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=$,this.setupFrameBufferTexture=K,this.useMultisampledRTT=et}function Qn(t,e,i){const r=i.isWebGL2;return{convert:function(i,n=null){let a;if(i===g)return 5121;if(1017===i)return 32819;if(1018===i)return 32820;if(1010===i)return 5120;if(1011===i)return 5122;if(i===v)return 5123;if(1013===i)return 5124;if(1014===i)return 5125;if(i===x)return 5126;if(i===_)return r?5131:null!==(a=e.get("OES_texture_half_float"))?a.HALF_FLOAT_OES:null;if(1021===i)return 6406;if(i===M)return 6408;if(1024===i)return 6409;if(1025===i)return 6410;if(i===S)return 6402;if(i===w)return 34041;if(1028===i)return 6403;if(1022===i)return 6408;if(1035===i)return null!==(a=e.get("EXT_sRGB"))?a.SRGB_ALPHA_EXT:null;if(1029===i)return 36244;if(1030===i)return 33319;if(1031===i)return 33320;if(1033===i)return 36249;if(33776===i||33777===i||33778===i||33779===i)if(n===E){if(null===(a=e.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(33776===i)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===i)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===i)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===i)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(a=e.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===i)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===i)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===i)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===i)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===i||35841===i||35842===i||35843===i){if(null===(a=e.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===i)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===i)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===i)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===i)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===i)return null!==(a=e.get("WEBGL_compressed_texture_etc1"))?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===i||37496===i){if(null===(a=e.get("WEBGL_compressed_texture_etc")))return null;if(37492===i)return n===E?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(37496===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(37808===i||37809===i||37810===i||37811===i||37812===i||37813===i||37814===i||37815===i||37816===i||37817===i||37818===i||37819===i||37820===i||37821===i){if(null===(a=e.get("WEBGL_compressed_texture_astc")))return null;if(37808===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===i)return n===E?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===i){if(null===(a=e.get("EXT_texture_compression_bptc")))return null;if(36492===i)return n===E?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}return i===y?r?34042:null!==(a=e.get("WEBGL_depth_texture"))?a.UNSIGNED_INT_24_8_WEBGL:null:void 0!==t[i]?t[i]:null}}}class $n extends yi{constructor(t=[]){super(),this.cameras=t}}$n.prototype.isArrayCamera=!0;class ta extends ye{constructor(){super(),this.type="Group"}}ta.prototype.isGroup=!0;const ea={type:"move"};class ia{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new ta,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new ta,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new xt,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new xt),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new ta,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new xt,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new xt),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,i){let r=null,n=null,a=null;var s=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&null!==(r=e.getPose(t.targetRaySpace,i))&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(ea)),l&&t.hand){a=!0;for(const r of t.hand.values()){var h=e.getJointPose(r,i),u=(void 0===l.joints[r.jointName]&&((u=new ta).matrixAutoUpdate=!1,u.visible=!1,l.joints[r.jointName]=u,l.add(u)),l.joints[r.jointName]);null!==h&&(u.matrix.fromArray(h.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.jointRadius=h.radius),u.visible=null!==h}var c=l.joints["index-finger-tip"],d=l.joints["thumb-tip"];c=c.position.distanceTo(d.position);l.inputState.pinching&&.025<c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&c<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&null!==(n=e.getPose(t.gripSpace,i))&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1);return null!==s&&(s.visible=null!==r),null!==o&&(o.visible=null!==n),null!==l&&(l.visible=null!==a),this}}class ra extends dt{constructor(t,e,i,r,n,a,s,o,l,h){if((h=void 0!==h?h:S)!==S&&h!==w)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,r,n,a,s,o,h,i=void 0===(i=void 0===i&&h===S?v:i)&&h===w?y:i,l),this.image={width:t,height:e},this.magFilter=void 0!==s?s:p,this.minFilter=void 0!==o?o:p,this.flipY=!1,this.generateMipmaps=!1}}ra.prototype.isDepthTexture=!0;class na extends N{constructor(t,e){super();const i=this;let r=null,n=1,a=null,s="local-floor",o=null,l=null,h=null,u=null,c=null,d=null;const p=e.getContextAttributes();let f=null,m=null;const x=[],_=new Map,b=new yi,T=(b.layers.enable(1),b.viewport=new pt,new yi),A=(T.layers.enable(2),T.viewport=new pt,[b,T]),C=new $n;C.layers.enable(1),C.layers.enable(2);let L=null,P=null;function D(t){var e=_.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function I(){_.forEach((function(t,e){t.disconnect(e)})),_.clear(),L=null,P=null,t.setRenderTarget(f),c=null,u=null,h=null,r=null,m=null,F.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function R(t){var e=r.inputSources;for(let t=0;t<e.length;t++){var i="right"===e[t].handedness?1:0;_.set(e[t],x[i])}for(let e=0;e<t.removed.length;e++){var n=t.removed[e],a=_.get(n);a&&(a.dispatchEvent({type:"disconnected",data:n}),_.delete(n))}for(let e=0;e<t.added.length;e++){var s=t.added[e],o=_.get(s);o&&o.dispatchEvent({type:"connected",data:s})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=x[t];return void 0===e&&(e=new ia,x[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=x[t];return void 0===e&&(e=new ia,x[t]=e),e.getGripSpace()},this.getHand=function(t){let e=x[t];return void 0===e&&(e=new ia,x[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){n=t,i.isPresenting},this.setReferenceSpaceType=function(t){s=t,i.isPresenting},this.getReferenceSpace=function(){return o||a},this.setReferenceSpace=function(t){o=t},this.getBaseLayer=function(){return null!==u?u:c},this.getBinding=function(){return h},this.getFrame=function(){return d},this.getSession=function(){return r},this.setSession=async function(o){if(null!==(r=o)){if(f=t.getRenderTarget(),r.addEventListener("select",D),r.addEventListener("selectstart",D),r.addEventListener("selectend",D),r.addEventListener("squeeze",D),r.addEventListener("squeezestart",D),r.addEventListener("squeezeend",D),r.addEventListener("end",I),r.addEventListener("inputsourceschange",R),!0!==p.xrCompatible&&await e.makeXRCompatible(),void 0===r.renderState.layers||!1===t.capabilities.isWebGL2)o={antialias:void 0!==r.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:n},c=new XRWebGLLayer(r,e,o),r.updateRenderState({baseLayer:c}),m=new ft(c.framebufferWidth,c.framebufferHeight,{format:M,type:g,encoding:t.outputEncoding});else{let i=null,a=null,s=null;p.depth&&(s=p.stencil?35056:33190,i=p.stencil?w:S,a=p.stencil?y:v),o={colorFormat:t.outputEncoding===E?35907:32856,depthFormat:s,scaleFactor:n},h=new XRWebGLBinding(r,e),u=h.createProjectionLayer(o),r.updateRenderState({layers:[u]}),m=new ft(u.textureWidth,u.textureHeight,{format:M,type:g,depthTexture:new ra(u.textureWidth,u.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,i),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0}),t.properties.get(m).__ignoreDepthValues=u.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),a=await r.requestReferenceSpace(s),F.setContext(r),F.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};const N=new xt,z=new xt;function O(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null!==r){C.near=T.near=b.near=t.near,C.far=T.far=b.far=t.far,L===C.near&&P===C.far||(r.updateRenderState({depthNear:C.near,depthFar:C.far}),L=C.near,P=C.far);var e=t.parent,i=C.cameras;O(C,e);for(let t=0;t<i.length;t++)O(i[t],e);C.matrixWorld.decompose(C.position,C.quaternion,C.scale),t.position.copy(C.position),t.quaternion.copy(C.quaternion),t.scale.copy(C.scale),t.matrix.copy(C.matrix),t.matrixWorld.copy(C.matrixWorld);var n,a,s,o,l,h,u,c,d,p,f=t.children;for(let t=0,e=f.length;t<e;t++)f[t].updateMatrixWorld(!0);2===i.length?(t=C,n=b,a=T,N.setFromMatrixPosition(n.matrixWorld),z.setFromMatrixPosition(a.matrixWorld),s=N.distanceTo(z),o=n.projectionMatrix.elements,a=a.projectionMatrix.elements,l=o[14]/(o[10]-1),h=o[14]/(o[10]+1),u=(o[9]+1)/o[5],c=(o[9]-1)/o[5],d=l*(o=(o[8]-1)/o[0]),p=l*(a=(a[8]+1)/a[0]),o=(a=s/(a-o))*-o,n.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(o),t.translateZ(a),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert(),n=l+a,l=h+a,t.projectionMatrix.makePerspective(d-o,s-o+p,u*h/l*n,c*h/l*n,n,l)):C.projectionMatrix.copy(b.projectionMatrix)}},this.getCamera=function(){return C},this.getFoveation=function(){return null!==u?u.fixedFoveation:null!==c?c.fixedFoveation:void 0},this.setFoveation=function(t){null!==u&&(u.fixedFoveation=t),null!==c&&void 0!==c.fixedFoveation&&(c.fixedFoveation=t)};let U=null;const F=new Di;F.setAnimationLoop((function(e,i){if(l=i.getViewerPose(o||a),d=i,null!==l){var n=l.views;null!==c&&(t.setRenderTargetFramebuffer(m,c.framebuffer),t.setRenderTarget(m));let e=!1;n.length!==C.cameras.length&&(C.cameras.length=0,e=!0);for(let i=0;i<n.length;i++){var s=n[i];let r=null;null!==c?r=c.getViewport(s):(r=(p=h.getViewSubImage(u,s)).viewport,0===i&&(t.setRenderTargetTextures(m,p.colorTexture,u.ignoreDepthValues?void 0:p.depthStencilTexture),t.setRenderTarget(m)));var p=A[i];p.matrix.fromArray(s.transform.matrix),p.projectionMatrix.fromArray(s.projectionMatrix),p.viewport.set(r.x,r.y,r.width,r.height),0===i&&C.matrix.copy(p.matrix),!0===e&&C.cameras.push(p)}}var f=r.inputSources;for(let t=0;t<x.length;t++){var g=f[t],v=_.get(g);void 0!==v&&v.update(g,i,o||a)}U&&U(e,i),d=null})),this.setAnimationLoop=function(t){U=t},this.dispose=function(){}}}function aa(t,e){function i(i,r){i.opacity.value=r.opacity,r.color&&i.diffuse.value.copy(r.color),r.emissive&&i.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(i.map.value=r.map),r.alphaMap&&(i.alphaMap.value=r.alphaMap),r.bumpMap&&(i.bumpMap.value=r.bumpMap,i.bumpScale.value=r.bumpScale,1===r.side)&&(i.bumpScale.value*=-1),r.displacementMap&&(i.displacementMap.value=r.displacementMap,i.displacementScale.value=r.displacementScale,i.displacementBias.value=r.displacementBias),r.emissiveMap&&(i.emissiveMap.value=r.emissiveMap),r.normalMap&&(i.normalMap.value=r.normalMap,i.normalScale.value.copy(r.normalScale),1===r.side)&&i.normalScale.value.negate(),r.specularMap&&(i.specularMap.value=r.specularMap),0<r.alphaTest&&(i.alphaTest.value=r.alphaTest);var n=e.get(r).envMap;let a,s;n&&(i.envMap.value=n,i.flipEnvMap.value=n.isCubeTexture&&!1===n.isRenderTargetTexture?-1:1,i.reflectivity.value=r.reflectivity,i.ior.value=r.ior,i.refractionRatio.value=r.refractionRatio),r.lightMap&&(i.lightMap.value=r.lightMap,n=!0!==t.physicallyCorrectLights?Math.PI:1,i.lightMapIntensity.value=r.lightMapIntensity*n),r.aoMap&&(i.aoMap.value=r.aoMap,i.aoMapIntensity.value=r.aoMapIntensity),r.map?a=r.map:r.specularMap?a=r.specularMap:r.displacementMap?a=r.displacementMap:r.normalMap?a=r.normalMap:r.bumpMap?a=r.bumpMap:r.roughnessMap?a=r.roughnessMap:r.metalnessMap?a=r.metalnessMap:r.alphaMap?a=r.alphaMap:r.emissiveMap?a=r.emissiveMap:r.clearcoatMap?a=r.clearcoatMap:r.clearcoatNormalMap?a=r.clearcoatNormalMap:r.clearcoatRoughnessMap?a=r.clearcoatRoughnessMap:r.specularIntensityMap?a=r.specularIntensityMap:r.specularColorMap?a=r.specularColorMap:r.transmissionMap?a=r.transmissionMap:r.thicknessMap?a=r.thicknessMap:r.sheenColorMap?a=r.sheenColorMap:r.sheenRoughnessMap&&(a=r.sheenRoughnessMap),void 0!==a&&(!0===(a=a.isWebGLRenderTarget?a.texture:a).matrixAutoUpdate&&a.updateMatrix(),i.uvTransform.value.copy(a.matrix)),r.aoMap?s=r.aoMap:r.lightMap&&(s=r.lightMap),void 0!==s&&(!0===(s=s.isWebGLRenderTarget?s.texture:s).matrixAutoUpdate&&s.updateMatrix(),i.uv2Transform.value.copy(s.matrix))}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,r,n,a,s){if(r.isMeshBasicMaterial)i(t,r);else if(r.isMeshLambertMaterial)i(t,r);else if(r.isMeshToonMaterial)i(t,r),c=t,(d=r).gradientMap&&(c.gradientMap.value=d.gradientMap);else if(r.isMeshPhongMaterial)i(t,r),c=r,(d=t).specular.value.copy(c.specular),d.shininess.value=Math.max(c.shininess,1e-4);else if(r.isMeshStandardMaterial){i(t,r);var o=t,l=r,h=(o.roughness.value=l.roughness,o.metalness.value=l.metalness,l.roughnessMap&&(o.roughnessMap.value=l.roughnessMap),l.metalnessMap&&(o.metalnessMap.value=l.metalnessMap),e.get(l).envMap);h&&(o.envMapIntensity.value=l.envMapIntensity),r.isMeshPhysicalMaterial&&(h=r,o=s,(l=t).ior.value=h.ior,0<h.sheen&&(l.sheenColor.value.copy(h.sheenColor).multiplyScalar(h.sheen),l.sheenRoughness.value=h.sheenRoughness,h.sheenColorMap&&(l.sheenColorMap.value=h.sheenColorMap),h.sheenRoughnessMap)&&(l.sheenRoughnessMap.value=h.sheenRoughnessMap),0<h.clearcoat&&(l.clearcoat.value=h.clearcoat,l.clearcoatRoughness.value=h.clearcoatRoughness,h.clearcoatMap&&(l.clearcoatMap.value=h.clearcoatMap),h.clearcoatRoughnessMap&&(l.clearcoatRoughnessMap.value=h.clearcoatRoughnessMap),h.clearcoatNormalMap)&&(l.clearcoatNormalScale.value.copy(h.clearcoatNormalScale),l.clearcoatNormalMap.value=h.clearcoatNormalMap,1===h.side)&&l.clearcoatNormalScale.value.negate(),0<h.transmission&&(l.transmission.value=h.transmission,l.transmissionSamplerMap.value=o.texture,l.transmissionSamplerSize.value.set(o.width,o.height),h.transmissionMap&&(l.transmissionMap.value=h.transmissionMap),l.thickness.value=h.thickness,h.thicknessMap&&(l.thicknessMap.value=h.thicknessMap),l.attenuationDistance.value=h.attenuationDistance,l.attenuationColor.value.copy(h.attenuationColor)),l.specularIntensity.value=h.specularIntensity,l.specularColor.value.copy(h.specularColor),h.specularIntensityMap&&(l.specularIntensityMap.value=h.specularIntensityMap),h.specularColorMap)&&(l.specularColorMap.value=h.specularColorMap)}else if(r.isMeshMatcapMaterial)i(t,r),s=t,(o=r).matcap&&(s.matcap.value=o.matcap);else if(r.isMeshDepthMaterial)i(t,r);else if(r.isMeshDistanceMaterial)i(t,r),l=r,(h=t).referencePosition.value.copy(l.referencePosition),h.nearDistance.value=l.nearDistance,h.farDistance.value=l.farDistance;else if(r.isMeshNormalMaterial)i(t,r);else if(r.isLineBasicMaterial)s=r,(u=t).diffuse.value.copy(s.color),u.opacity.value=s.opacity,r.isLineDashedMaterial&&(u=r,(s=t).dashSize.value=u.dashSize,s.totalSize.value=u.dashSize+u.gapSize,s.scale.value=u.scale);else if(r.isPointsMaterial){let e;u=r,(s=t).diffuse.value.copy(u.color),s.opacity.value=u.opacity,s.size.value=u.size*n,s.scale.value=.5*a,u.map&&(s.map.value=u.map),u.alphaMap&&(s.alphaMap.value=u.alphaMap),0<u.alphaTest&&(s.alphaTest.value=u.alphaTest),u.map?e=u.map:u.alphaMap&&(e=u.alphaMap),void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),s.uvTransform.value.copy(e.matrix))}else if(r.isSpriteMaterial){let e;a=r,(n=t).diffuse.value.copy(a.color),n.opacity.value=a.opacity,n.rotation.value=a.rotation,a.map&&(n.map.value=a.map),a.alphaMap&&(n.alphaMap.value=a.alphaMap),0<a.alphaTest&&(n.alphaTest.value=a.alphaTest),a.map?e=a.map:a.alphaMap&&(e=a.alphaMap),void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),n.uvTransform.value.copy(e.matrix))}else r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1);var u,c,d}}}function sa(t={}){const e=void 0!==t.canvas?t.canvas:((c=J("canvas")).style.display="block",c),i=void 0!==t.context?t.context:null,r=void 0===t.depth||t.depth,a=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,h=void 0!==t.powerPreference?t.powerPreference:"default",u=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;var c;let d,p=(d=null!==i?i.getContextAttributes().alpha:void 0!==t.alpha&&t.alpha,null),f=null;const v=[],y=[],S=(this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=C,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this);let w=!1,b=0,T=0,A=null,E=-1,L=null;const P=new pt,D=new pt;let I=null,R=e.width,N=e.height,z=1,O=null,U=null;const F=new pt(0,0,R,N),B=new pt(0,0,R,N);let V=!1;const k=new Pi;let G=!1,W=!1,j=null;const q=new Jt,Y=new X,Z=new xt,K={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Q(){return null===A?z:1}let $,tt,et,it,rt,nt,at,st,ot,lt,ht,ut,ct,dt,mt,gt,vt,_t,yt,Mt,St,wt,bt,Tt=i;function At(t,i){for(let n=0;n<t.length;n++){var r=t[n];if(null!==(r=e.getContext(r,i)))return r}return null}try{var Ct={alpha:!0,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine","three.js r140"),e.addEventListener("webglcontextlost",Dt,!1),e.addEventListener("webglcontextrestored",It,!1),null===Tt){var Et=["webgl2","webgl","experimental-webgl"];if(!0===S.isWebGL1Renderer&&Et.shift(),null===(Tt=At(Et,Ct)))throw At(Et)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===Tt.getShaderPrecisionFormat&&(Tt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw t}function Lt(){$=new ir(Tt),tt=new Vi(Tt,$,t),$.init(tt),wt=new Qn(Tt,$,tt),et=new Zn(Tt,$,tt),it=new ar(Tt),rt=new On,nt=new Kn(Tt,$,et,rt,tt,wt,it),at=new Gi(S),st=new er(S),ot=new Ii(Tt,tt),bt=new Fi(Tt,$,ot,tt),lt=new rr(Tt,ot,it,bt),ht=new ur(Tt,lt,ot,it),yt=new hr(Tt,tt,nt),gt=new ki(rt),ut=new zn(S,at,st,$,tt,bt,gt),ct=new aa(S,rt),dt=new Vn,mt=new Xn($,tt),_t=new Ui(S,at,et,ht,d,o),vt=new Jn(S,ht,tt),Mt=new Bi(Tt,$,it,tt),St=new nr(Tt,$,it,tt),it.programs=ut.programs,S.capabilities=tt,S.extensions=$,S.properties=rt,S.renderLists=dt,S.shadowMap=vt,S.state=et,S.info=it}Lt();const Pt=new na(S,Tt);function Dt(t){t.preventDefault(),w=!0}function It(){w=!1;var t=it.autoReset,e=vt.enabled,i=vt.autoUpdate,r=vt.needsUpdate,n=vt.type;Lt(),it.autoReset=t,vt.enabled=e,vt.autoUpdate=i,vt.needsUpdate=r,vt.type=n}function Rt(t){var e=((t=t.target).removeEventListener("dispose",Rt),t=t),i=rt.get(e).programs;void 0!==i&&(i.forEach((function(t){ut.releaseProgram(t)})),e.isShaderMaterial)&&ut.releaseShaderCache(e),rt.remove(t)}this.xr=Pt,this.getContext=function(){return Tt},this.getContextAttributes=function(){return Tt.getContextAttributes()},this.forceContextLoss=function(){var t=$.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=$.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return z},this.setPixelRatio=function(t){void 0!==t&&(z=t,this.setSize(R,N,!1))},this.getSize=function(t){return t.set(R,N)},this.setSize=function(t,i,r){Pt.isPresenting||(R=t,N=i,e.width=Math.floor(t*z),e.height=Math.floor(i*z),!1!==r&&(e.style.width=t+"px",e.style.height=i+"px"),this.setViewport(0,0,t,i))},this.getDrawingBufferSize=function(t){return t.set(R*z,N*z).floor()},this.setDrawingBufferSize=function(t,i,r){R=t,N=i,z=r,e.width=Math.floor(t*r),e.height=Math.floor(i*r),this.setViewport(0,0,t,i)},this.getCurrentViewport=function(t){return t.copy(P)},this.getViewport=function(t){return t.copy(F)},this.setViewport=function(t,e,i,r){t.isVector4?F.set(t.x,t.y,t.z,t.w):F.set(t,e,i,r),et.viewport(P.copy(F).multiplyScalar(z).floor())},this.getScissor=function(t){return t.copy(B)},this.setScissor=function(t,e,i,r){t.isVector4?B.set(t.x,t.y,t.z,t.w):B.set(t,e,i,r),et.scissor(D.copy(B).multiplyScalar(z).floor())},this.getScissorTest=function(){return V},this.setScissorTest=function(t){et.setScissorTest(V=t)},this.setOpaqueSort=function(t){O=t},this.setTransparentSort=function(t){U=t},this.getClearColor=function(t){return t.copy(_t.getClearColor())},this.setClearColor=function(){_t.setClearColor.apply(_t,arguments)},this.getClearAlpha=function(){return _t.getClearAlpha()},this.setClearAlpha=function(){_t.setClearAlpha.apply(_t,arguments)},this.clear=function(t=!0,e=!0,i=!0){let r=0;t&&(r|=16384),e&&(r|=256),i&&(r|=1024),Tt.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Dt,!1),e.removeEventListener("webglcontextrestored",It,!1),dt.dispose(),mt.dispose(),rt.dispose(),at.dispose(),st.dispose(),ht.dispose(),bt.dispose(),ut.dispose(),Pt.dispose(),Pt.removeEventListener("sessionstart",zt),Pt.removeEventListener("sessionend",Ot),j&&(j.dispose(),j=null),Ut.stop()},this.renderBufferDirect=function(t,e,i,r,n,a){null===e&&(e=K);var s=n.isMesh&&n.matrixWorld.determinant()<0;t=function(t,e,i,r,n){!0!==e.isScene&&(e=K),nt.resetTextureUnits();var a=e.fog,s=r.isMeshStandardMaterial?e.environment:null,o=null===A?S.outputEncoding:!0===A.isXRRenderTarget?A.texture.encoding:C,l=(s=(r.isMeshStandardMaterial?st:at).get(r.envMap||s),!0===r.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize),h=!!r.normalMap&&!!i.attributes.tangent,u=!!i.morphAttributes.position,c=!!i.morphAttributes.normal,d=!!i.morphAttributes.color,p=r.toneMapped?S.toneMapping:0,m=void 0!==(m=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color)?m.length:0,g=rt.get(r),v=f.state.lights;!0!==G||!0!==W&&t===L||(b=t===L&&r.id===E,gt.setState(r,t,b));let x=!1;r.version===g.__version?(g.needsLights&&g.lightsStateVersion!==v.state.version||g.outputEncoding!==o||n.isInstancedMesh&&!1===g.instancing||!n.isInstancedMesh&&!0===g.instancing||n.isSkinnedMesh&&!1===g.skinning||!n.isSkinnedMesh&&!0===g.skinning||g.envMap!==s||!0===r.fog&&g.fog!==a||void 0!==g.numClippingPlanes&&(g.numClippingPlanes!==gt.numPlanes||g.numIntersection!==gt.numIntersection)||g.vertexAlphas!==l||g.vertexTangents!==h||g.morphTargets!==u||g.morphNormals!==c||g.morphColors!==d||g.toneMapping!==p||!0===tt.isWebGL2&&g.morphTargetsCount!==m)&&(x=!0):(x=!0,g.__version=r.version);let _=g.currentProgram;!0===x&&(_=Vt(r,e,n));let y=!1,M=!1,w=!1;var b=_.getUniforms();v=g.uniforms;return et.useProgram(_.program)&&(y=!0,M=!0,w=!0),r.id!==E&&(E=r.id,M=!0),(y||L!==t)&&(b.setValue(Tt,"projectionMatrix",t.projectionMatrix),tt.logarithmicDepthBuffer&&b.setValue(Tt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),L!==t&&(L=t,M=!0,w=!0),(r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap)&&void 0!==(o=b.map.cameraPosition)&&o.setValue(Tt,Z.setFromMatrixPosition(t.matrixWorld)),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&b.setValue(Tt,"isOrthographic",!0===t.isOrthographicCamera),r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||n.isSkinnedMesh)&&b.setValue(Tt,"viewMatrix",t.matrixWorldInverse),n.isSkinnedMesh&&(b.setOptional(Tt,n,"bindMatrix"),b.setOptional(Tt,n,"bindMatrixInverse"),s=n.skeleton)&&tt.floatVertexTextures&&(null===s.boneTexture&&s.computeBoneTexture(),b.setValue(Tt,"boneTexture",s.boneTexture,nt),b.setValue(Tt,"boneTextureSize",s.boneTextureSize)),(void 0!==(l=i.morphAttributes).position||void 0!==l.normal||void 0!==l.color&&!0===tt.isWebGL2)&&yt.update(n,i,r,_),!M&&g.receiveShadow===n.receiveShadow||(g.receiveShadow=n.receiveShadow,b.setValue(Tt,"receiveShadow",n.receiveShadow)),M&&(b.setValue(Tt,"toneMappingExposure",S.toneMappingExposure),g.needsLights&&function(t,e){t.ambientLightColor.needsUpdate=e,t.lightProbe.needsUpdate=e,t.directionalLights.needsUpdate=e,t.directionalLightShadows.needsUpdate=e,t.pointLights.needsUpdate=e,t.pointLightShadows.needsUpdate=e,t.spotLights.needsUpdate=e,t.spotLightShadows.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}(v,w),a&&!0===r.fog&&ct.refreshFogUniforms(v,a),ct.refreshMaterialUniforms(v,r,z,N,j),fn.upload(Tt,g.uniformsList,v,nt)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(fn.upload(Tt,g.uniformsList,v,nt),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&b.setValue(Tt,"center",n.center),b.setValue(Tt,"modelViewMatrix",n.modelViewMatrix),b.setValue(Tt,"normalMatrix",n.normalMatrix),b.setValue(Tt,"modelMatrix",n.matrixWorld),_}(t,e,i,r,n);et.setMaterial(r,s);let o=i.index;if(e=i.attributes.position,null===o){if(void 0===e||0===e.count)return}else if(0===o.count)return;let l=1,h=(!0===r.wireframe&&(o=lt.getWireframeAttribute(i),l=2),bt.setup(n,r,t,i,o),Mt);null!==o&&(s=ot.get(o),(h=St).setIndex(s));t=(null!==o?o:e).count,s=i.drawRange.start*l,e=i.drawRange.count*l;var u=null!==a?a.start*l:0,c=(a=null!==a?a.count*l:1/0,Math.max(s,u));t=Math.min(t,s+e,u+a)-1;if(0!==(s=Math.max(0,t-c+1))){if(n.isMesh)!0===r.wireframe?(et.setLineWidth(r.wireframeLinewidth*Q()),h.setMode(1)):h.setMode(4);else if(n.isLine){let t=r.linewidth;void 0===t&&(t=1),et.setLineWidth(t*Q()),n.isLineSegments?h.setMode(1):n.isLineLoop?h.setMode(2):h.setMode(3)}else n.isPoints?h.setMode(0):n.isSprite&&h.setMode(4);n.isInstancedMesh?h.renderInstances(c,s,n.count):i.isInstancedBufferGeometry?(e=Math.min(i.instanceCount,i._maxInstanceCount),h.renderInstances(c,s,e)):h.render(c,s)}},this.compile=function(t,e){(f=mt.get(t)).init(),y.push(f),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(f.pushLight(t),t.castShadow)&&f.pushShadow(t)})),f.setupLights(S.physicallyCorrectLights),t.traverse((function(e){var i=e.material;if(i)if(Array.isArray(i))for(let r=0;r<i.length;r++)Vt(i[r],t,e);else Vt(i,t,e)})),y.pop(),f=null};let Nt=null;function zt(){Ut.stop()}function Ot(){Ut.start()}const Ut=new Di;function Ft(t,e,i,r){var n=t.opaque,a=t.transmissive;t=t.transparent;if(f.setupLightsView(i),0<a.length){var o=n,l=e,h=i,u=tt.isWebGL2,c=(u=(null===j&&(j=new ft(1,1,{generateMipmaps:!0,type:$.has("EXT_color_buffer_half_float")?_:g,minFilter:m,samples:u&&!0===s?4:0})),S.getDrawingBufferSize(Y),u?j.setSize(Y.x,Y.y):j.setSize(H(Y.x),H(Y.y)),S.getRenderTarget()),S.setRenderTarget(j),S.clear(),S.toneMapping);S.toneMapping=0,Bt(o,l,h),S.toneMapping=c,nt.updateMultisampleRenderTarget(j),nt.updateRenderTargetMipmap(j),S.setRenderTarget(u)}r&&et.viewport(P.copy(r)),0<n.length&&Bt(n,e,i),0<a.length&&Bt(a,e,i),0<t.length&&Bt(t,e,i),et.buffers.depth.setTest(!0),et.buffers.depth.setMask(!0),et.buffers.color.setMask(!0),et.setPolygonOffset(!1)}function Bt(t,e,i){var r=!0===e.isScene?e.overrideMaterial:null;for(let m=0,g=t.length;m<g;m++){var a,s,o,l,h,u,c=(f=t[m]).object,d=f.geometry,p=null===r?f.material:r,f=f.group;c.layers.test(i.layers)&&(h=a=void 0,s=e,o=i,l=d,h=p,u=f,(a=c).onBeforeRender(S,s,o,l,h,u),a.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,a.matrixWorld),a.normalMatrix.getNormalMatrix(a.modelViewMatrix),h.onBeforeRender(S,s,o,l,a,u),!0===h.transparent&&h.side===n?(h.side=1,h.needsUpdate=!0,S.renderBufferDirect(o,s,l,h,a,u),h.side=0,h.needsUpdate=!0,S.renderBufferDirect(o,s,l,h,a,u),h.side=n):S.renderBufferDirect(o,s,l,h,a,u),a.onAfterRender(S,s,o,l,h,u))}}function Vt(t,e,i){!0!==e.isScene&&(e=K);var r=rt.get(t),n=f.state.lights,a=f.state.shadowsArray,s=n.state.version,o=(a=ut.getParameters(t,n.state,a,e,i),ut.getProgramCacheKey(a));let l=r.programs,h=(r.environment=t.isMeshStandardMaterial?e.environment:null,r.fog=e.fog,r.envMap=(t.isMeshStandardMaterial?st:at).get(t.envMap||r.environment),void 0===l&&(t.addEventListener("dispose",Rt),l=new Map,r.programs=l),l.get(o));if(void 0!==h){if(r.currentProgram===h&&r.lightsStateVersion===s)return kt(t,a),h}else a.uniforms=ut.getUniforms(t),t.onBuild(i,a,S),t.onBeforeCompile(a,S),h=ut.acquireProgram(a,o),l.set(o,h),r.uniforms=a.uniforms;return e=r.uniforms,(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(e.clippingPlanes=gt.uniform),kt(t,a),r.needsLights=(i=t).isMeshLambertMaterial||i.isMeshToonMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial||i.isShadowMaterial||i.isShaderMaterial&&!0===i.lights,r.lightsStateVersion=s,r.needsLights&&(e.ambientLightColor.value=n.state.ambient,e.lightProbe.value=n.state.probe,e.directionalLights.value=n.state.directional,e.directionalLightShadows.value=n.state.directionalShadow,e.spotLights.value=n.state.spot,e.spotLightShadows.value=n.state.spotShadow,e.rectAreaLights.value=n.state.rectArea,e.ltc_1.value=n.state.rectAreaLTC1,e.ltc_2.value=n.state.rectAreaLTC2,e.pointLights.value=n.state.point,e.pointLightShadows.value=n.state.pointShadow,e.hemisphereLights.value=n.state.hemi,e.directionalShadowMap.value=n.state.directionalShadowMap,e.directionalShadowMatrix.value=n.state.directionalShadowMatrix,e.spotShadowMap.value=n.state.spotShadowMap,e.spotShadowMatrix.value=n.state.spotShadowMatrix,e.pointShadowMap.value=n.state.pointShadowMap,e.pointShadowMatrix.value=n.state.pointShadowMatrix),o=h.getUniforms(),a=fn.seqWithValue(o.seq,e),r.currentProgram=h,r.uniformsList=a,h}function kt(t,e){(t=rt.get(t)).outputEncoding=e.outputEncoding,t.instancing=e.instancing,t.skinning=e.skinning,t.morphTargets=e.morphTargets,t.morphNormals=e.morphNormals,t.morphColors=e.morphColors,t.morphTargetsCount=e.morphTargetsCount,t.numClippingPlanes=e.numClippingPlanes,t.numIntersection=e.numClipIntersection,t.vertexAlphas=e.vertexAlphas,t.vertexTangents=e.vertexTangents,t.toneMapping=e.toneMapping}Ut.setAnimationLoop((function(t){Nt&&Nt(t)})),"undefined"!=typeof self&&Ut.setContext(self),this.setAnimationLoop=function(t){Nt=t,Pt.setAnimationLoop(t),null===t?Ut.stop():Ut.start()},Pt.addEventListener("sessionstart",zt),Pt.addEventListener("sessionend",Ot),this.render=function(t,e){if((void 0===e||!0===e.isCamera)&&!0!==w){!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===Pt.enabled&&!0===Pt.isPresenting&&(!0===Pt.cameraAutoUpdate&&Pt.updateCamera(e),e=Pt.getCamera()),!0===t.isScene&&t.onBeforeRender(S,t,e,A),(f=mt.get(t,y.length)).init(),y.push(f),q.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),k.setFromProjectionMatrix(q),W=this.localClippingEnabled,G=gt.init(this.clippingPlanes,W,e),(p=dt.get(t,v.length)).init(),v.push(p),function t(e,i,r,n){if(!1===e.visible)return;if(e.layers.test(i.layers))if(e.isGroup)r=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(i);else if(e.isLight)f.pushLight(e),e.castShadow&&f.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||k.intersectsSprite(e)){n&&Z.setFromMatrixPosition(e.matrixWorld).applyMatrix4(q);const t=ht.update(e),i=e.material;i.visible&&p.push(e,t,i,r,Z.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==it.render.frame&&(e.skeleton.update(),e.skeleton.frame=it.render.frame),!e.frustumCulled||k.intersectsObject(e))){n&&Z.setFromMatrixPosition(e.matrixWorld).applyMatrix4(q);const t=ht.update(e),i=e.material;if(Array.isArray(i)){const n=t.groups;for(let a=0,s=n.length;a<s;a++){const s=n[a],o=i[s.materialIndex];o&&o.visible&&p.push(e,t,o,r,Z.z,s)}}else i.visible&&p.push(e,t,i,r,Z.z,null)}const a=e.children;for(let e=0,s=a.length;e<s;e++)t(a[e],i,r,n)}(t,e,0,S.sortObjects),p.finish(),!0===S.sortObjects&&p.sort(O,U),!0===G&&gt.beginShadows();var i=f.state.shadowsArray;if(vt.render(i,t,e),!0===G&&gt.endShadows(),!0===this.info.autoReset&&this.info.reset(),_t.render(p,t),f.setupLights(S.physicallyCorrectLights),e.isArrayCamera){var r=e.cameras;for(let e=0,i=r.length;e<i;e++){var n=r[e];Ft(p,t,n,n.viewport)}}else Ft(p,t,e);null!==A&&(nt.updateMultisampleRenderTarget(A),nt.updateRenderTargetMipmap(A)),!0===t.isScene&&t.onAfterRender(S,t,e),bt.resetDefaultState(),E=-1,L=null,y.pop(),f=0<y.length?y[y.length-1]:null,v.pop(),p=0<v.length?v[v.length-1]:null}},this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return T},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(t,e,i){rt.get(t.texture).__webglTexture=e,rt.get(t.depthTexture).__webglTexture=i,(e=rt.get(t)).__hasExternalTextures=!0,e.__hasExternalTextures&&(e.__autoAllocateDepthBuffer=void 0===i,e.__autoAllocateDepthBuffer||!0===$.has("WEBGL_multisampled_render_to_texture")&&(e.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(t,e){(t=rt.get(t)).__webglFramebuffer=e,t.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,i=0){A=t,b=e,T=i;let r=!0;var n;t&&(void 0!==(n=rt.get(t)).__useDefaultFramebuffer?(et.bindFramebuffer(36160,null),r=!1):void 0===n.__webglFramebuffer?nt.setupRenderTarget(t):n.__hasExternalTextures&&nt.rebindTextures(t,rt.get(t.texture).__webglTexture,rt.get(t.depthTexture).__webglTexture));let a=null,s=!1,o=!1;I=t?(((n=t.texture).isData3DTexture||n.isDataArrayTexture)&&(o=!0),n=rt.get(t).__webglFramebuffer,t.isWebGLCubeRenderTarget?(a=n[e],s=!0):a=tt.isWebGL2&&0<t.samples&&!1===nt.useMultisampledRTT(t)?rt.get(t).__webglMultisampledFramebuffer:n,P.copy(t.viewport),D.copy(t.scissor),t.scissorTest):(P.copy(F).multiplyScalar(z).floor(),D.copy(B).multiplyScalar(z).floor(),V),et.bindFramebuffer(36160,a)&&tt.drawBuffers&&r&&et.drawBuffers(t,a),et.viewport(P),et.scissor(D),et.setScissorTest(I),s?(n=rt.get(t.texture),Tt.framebufferTexture2D(36160,36064,34069+e,n.__webglTexture,i)):o&&(n=rt.get(t.texture),t=e||0,Tt.framebufferTextureLayer(36160,36064,n.__webglTexture,i||0,t)),E=-1},this.readRenderTargetPixels=function(t,e,i,r,n,a,s){if(t&&t.isWebGLRenderTarget){let c=rt.get(t).__webglFramebuffer;if(c=t.isWebGLCubeRenderTarget&&void 0!==s?c[s]:c){et.bindFramebuffer(36160,c);try{var o,l=t.texture,h=l.format,u=l.type;h!==M&&wt.convert(h)!==Tt.getParameter(35739)||(o=u===_&&($.has("EXT_color_buffer_half_float")||tt.isWebGL2&&$.has("EXT_color_buffer_float")),(u===g||wt.convert(u)===Tt.getParameter(35738)||u===x&&(tt.isWebGL2||$.has("OES_texture_float")||$.has("WEBGL_color_buffer_float"))||o)&&0<=e&&e<=t.width-r&&0<=i&&i<=t.height-n&&Tt.readPixels(e,i,r,n,wt.convert(h),wt.convert(u),a))}finally{const t=null!==A?rt.get(A).__webglFramebuffer:null;et.bindFramebuffer(36160,t)}}}},this.copyFramebufferToTexture=function(t,e,i=0){var r,n;!0===e.isFramebufferTexture&&(n=Math.pow(2,-i),r=Math.floor(e.image.width*n),n=Math.floor(e.image.height*n),nt.setTexture2D(e,0),Tt.copyTexSubImage2D(3553,i,0,0,t.x,t.y,r,n),et.unbindTexture())},this.copyTextureToTexture=function(t,e,i,r=0){var n=e.image.width,a=e.image.height,s=wt.convert(i.format),o=wt.convert(i.type);nt.setTexture2D(i,0),Tt.pixelStorei(37440,i.flipY),Tt.pixelStorei(37441,i.premultiplyAlpha),Tt.pixelStorei(3317,i.unpackAlignment),e.isDataTexture?Tt.texSubImage2D(3553,r,t.x,t.y,n,a,s,o,e.image.data):e.isCompressedTexture?Tt.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):Tt.texSubImage2D(3553,r,t.x,t.y,s,o,e.image),0===r&&i.generateMipmaps&&Tt.generateMipmap(3553),et.unbindTexture()},this.copyTextureToTexture3D=function(t,e,i,r,n=0){if(!S.isWebGL1Renderer){var a=t.max.x-t.min.x+1,s=t.max.y-t.min.y+1,o=t.max.z-t.min.z+1,l=wt.convert(r.format),h=wt.convert(r.type);let g;if(r.isData3DTexture)nt.setTexture3D(r,0),g=32879;else{if(!r.isDataArrayTexture)return;nt.setTexture2DArray(r,0),g=35866}Tt.pixelStorei(37440,r.flipY),Tt.pixelStorei(37441,r.premultiplyAlpha),Tt.pixelStorei(3317,r.unpackAlignment);var u=Tt.getParameter(3314),c=Tt.getParameter(32878),d=Tt.getParameter(3316),p=Tt.getParameter(3315),f=Tt.getParameter(32877),m=i.isCompressedTexture?i.mipmaps[0]:i.image;Tt.pixelStorei(3314,m.width),Tt.pixelStorei(32878,m.height),Tt.pixelStorei(3316,t.min.x),Tt.pixelStorei(3315,t.min.y),Tt.pixelStorei(32877,t.min.z),i.isDataTexture||i.isData3DTexture?Tt.texSubImage3D(g,n,e.x,e.y,e.z,a,s,o,l,h,m.data):i.isCompressedTexture?Tt.compressedTexSubImage3D(g,n,e.x,e.y,e.z,a,s,o,l,m.data):Tt.texSubImage3D(g,n,e.x,e.y,e.z,a,s,o,l,h,m),Tt.pixelStorei(3314,u),Tt.pixelStorei(32878,c),Tt.pixelStorei(3316,d),Tt.pixelStorei(3315,p),Tt.pixelStorei(32877,f),0===n&&r.generateMipmaps&&Tt.generateMipmap(g),et.unbindTexture()}},this.initTexture=function(t){nt.setTexture2D(t,0),et.unbindTexture()},this.resetState=function(){b=0,T=0,A=null,et.reset(),bt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}sa.prototype.isWebGLRenderer=!0;class oa{constructor(t,e=25e-5){this.name="",this.color=new st(t),this.density=e}clone(){return new oa(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}oa.prototype.isFogExp2=class extends sa{}.prototype.isWebGL1Renderer=!0;class la{constructor(t,e=1,i=1e3){this.name="",this.color=new st(t),this.near=e,this.far=i}clone(){return new la(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}la.prototype.isFog=!0;class ha extends ye{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){return t=super.toJSON(t),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}ha.prototype.isScene=!0;class ua{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=I,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=B()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,i){t*=this.stride,i*=e.stride;for(let r=0,n=this.stride;r<n;r++)this.array[t+r]=e.array[i+r];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=B()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer),t=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),(t=new this.constructor(t,this.stride)).setUsage(this.usage),t}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=B()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}ua.prototype.isInterleavedBuffer=!0;const ca=new xt;class da{constructor(t,e,i,r=!1){this.name="",this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,i=this.data.count;e<i;e++)ca.fromBufferAttribute(this,e),ca.applyMatrix4(t),this.setXYZ(e,ca.x,ca.y,ca.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)ca.fromBufferAttribute(this,e),ca.applyNormalMatrix(t),this.setXYZ(e,ca.x,ca.y,ca.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)ca.fromBufferAttribute(this,e),ca.transformDirection(t),this.setXYZ(e,ca.x,ca.y,ca.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this}setXYZ(t,e,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=r,this}setXYZW(t,e,i,r,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=r,this.data.array[t+3]=n,this}clone(t){if(void 0!==t)return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new da(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);var e=[];for(let t=0;t<this.count;t++){var i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return new Ue(new this.array.constructor(e),this.itemSize,this.normalized)}toJSON(t){if(void 0!==t)return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};var e=[];for(let t=0;t<this.count;t++){var i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}}da.prototype.isInterleavedBufferAttribute=!0;class pa extends Re{constructor(t){super(),this.type="SpriteMaterial",this.color=new st(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let fa;pa.prototype.isSpriteMaterial=!0;const ma=new xt,ga=new xt,va=new xt,xa=new X,_a=new X,ya=new Jt,Ma=new xt,Sa=new xt,wa=new xt,ba=new X,Ta=new X,Aa=new X;class Ca extends ye{constructor(t){var e;super(),this.type="Sprite",void 0===fa&&(fa=new Ye,e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new ua(e,5),fa.setIndex([0,1,2,0,2,3]),fa.setAttribute("position",new da(e,3,0,!1)),fa.setAttribute("uv",new da(e,2,3,!1))),this.geometry=fa,this.material=void 0!==t?t:new pa,this.center=new X(.5,.5)}raycast(t,e){let i,r;t.camera,ga.setFromMatrixScale(this.matrixWorld),ya.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),va.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&ga.multiplyScalar(-va.z),0!==(n=this.material.rotation)&&(r=Math.cos(n),i=Math.sin(n));var n=this.center,a=(Ea(Ma.set(-.5,-.5,0),va,n,ga,i,r),Ea(Sa.set(.5,-.5,0),va,n,ga,i,r),Ea(wa.set(.5,.5,0),va,n,ga,i,r),ba.set(0,0),Ta.set(1,0),Aa.set(1,1),t.ray.intersectTriangle(Ma,Sa,wa,!1,ma));null===a&&(Ea(Sa.set(-.5,.5,0),va,n,ga,i,r),Ta.set(0,1),null===(a=t.ray.intersectTriangle(Ma,wa,Sa,!1,ma)))||(n=t.ray.origin.distanceTo(ma))<t.near||n>t.far||e.push({distance:n,point:ma.clone(),uv:De.getUV(ma,Ma,Sa,wa,ba,Ta,Aa,new X),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Ea(t,e,i,r,n,a){xa.subVectors(t,i).addScalar(.5).multiply(r),void 0!==n?(_a.x=a*xa.x-n*xa.y,_a.y=n*xa.x+a*xa.y):_a.copy(xa),t.copy(e),t.x+=_a.x,t.y+=_a.y,t.applyMatrix4(ya)}Ca.prototype.isSprite=!0;const La=new xt,Pa=new pt,Da=new pt,Ia=new xt,Ra=new Jt;class Na extends di{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Jt,this.bindMatrixInverse=new Jt}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){var t=new pt,e=this.geometry.attributes.skinWeight;for(let r=0,n=e.count;r<n;r++){t.fromBufferAttribute(e,r);var i=1/t.manhattanLength();i!=1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(r,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode&&this.bindMatrixInverse.copy(this.bindMatrix).invert()}boneTransform(t,e){var i=this.skeleton,r=this.geometry;Pa.fromBufferAttribute(r.attributes.skinIndex,t),Da.fromBufferAttribute(r.attributes.skinWeight,t),La.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){var n,a=Da.getComponent(t);0!==a&&(n=Pa.getComponent(t),Ra.multiplyMatrices(i.bones[n].matrixWorld,i.boneInverses[n]),e.addScaledVector(Ia.copy(La).applyMatrix4(Ra),a))}return e.applyMatrix4(this.bindMatrixInverse)}}Na.prototype.isSkinnedMesh=!0;(class extends ye{constructor(){super(),this.type="Bone"}}).prototype.isBone=!0;(class extends dt{constructor(t=null,e=1,i=1,r,n,a,s,o,l=p,h=p,u,c){super(null,a,s,o,l,h,r,n,u,c),this.image={data:t,width:e,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}).prototype.isDataTexture=!0;class za extends Ue{constructor(t,e,i,r=1){"number"==typeof i&&(r=i,i=!1),super(t,e,i),this.meshPerAttribute=r}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){var t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}za.prototype.isInstancedBufferAttribute=!0;const Oa=new Jt,Ua=new Jt,Fa=[],Ba=new di;(class extends di{constructor(t,e,i){super(t,e),this.instanceMatrix=new za(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){var i=this.matrixWorld,r=this.count;if(Ba.geometry=this.geometry,Ba.material=this.material,void 0!==Ba.material)for(let a=0;a<r;a++){this.getMatrixAt(a,Oa),Ua.multiplyMatrices(i,Oa),Ba.matrixWorld=Ua,Ba.raycast(t,Fa);for(let t=0,i=Fa.length;t<i;t++){var n=Fa[t];n.instanceId=a,n.object=this,e.push(n)}Fa.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new za(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}).prototype.isInstancedMesh=!0;class Va extends Re{constructor(t){super(),this.type="LineBasicMaterial",this.color=new st(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}Va.prototype.isLineBasicMaterial=!0;const ka=new xt,Ga=new xt,Wa=new Jt,Ha=new Yt,ja=new Vt;class Xa extends ye{constructor(t=new Ye,e=new Va){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){var t=this.geometry;if(t.isBufferGeometry){if(null===t.index){var e=t.attributes.position,i=[0];for(let t=1,r=e.count;t<r;t++)ka.fromBufferAttribute(e,t-1),Ga.fromBufferAttribute(e,t),i[t]=i[t-1],i[t]+=ka.distanceTo(Ga);t.setAttribute("lineDistance",new Ve(i,1))}}else t.isGeometry;return this}raycast(t,e){var i=this.geometry,r=this.matrixWorld,n=t.params.Line.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),ja.copy(i.boundingSphere),ja.applyMatrix4(r),ja.radius+=n,!1!==t.ray.intersectsSphere(ja)){Wa.copy(r).invert(),Ha.copy(t.ray).applyMatrix4(Wa);var s=(r=n/((this.scale.x+this.scale.y+this.scale.z)/3))*r,o=new xt,l=new xt,h=new xt,u=new xt,c=this.isLineSegments?2:1;if(i.isBufferGeometry){var d,p=i.index,f=i.attributes.position;if(null!==p)for(let i=Math.max(0,a.start),r=Math.min(p.count,a.start+a.count)-1;i<r;i+=c){var m=p.getX(i),g=p.getX(i+1);s<(m=(o.fromBufferAttribute(f,m),l.fromBufferAttribute(f,g),Ha.distanceSqToSegment(o,l,u,h)))||(u.applyMatrix4(this.matrixWorld),(g=t.ray.origin.distanceTo(u))<t.near)||g>t.far||e.push({distance:g,point:h.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}else for(let i=Math.max(0,a.start),r=Math.min(f.count,a.start+a.count)-1;i<r;i+=c)o.fromBufferAttribute(f,i),l.fromBufferAttribute(f,i+1),s<Ha.distanceSqToSegment(o,l,u,h)||(u.applyMatrix4(this.matrixWorld),(d=t.ray.origin.distanceTo(u))<t.near)||d>t.far||e.push({distance:d,point:h.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}else i.isGeometry}}updateMorphTargets(){var t=this.geometry;if(t.isBufferGeometry){var e=t.morphAttributes,i=Object.keys(e);if(0<i.length){var r=e[i[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=r.length;t<e;t++){var n=r[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else void 0!==(e=t.morphTargets)&&e.length}}Xa.prototype.isLine=!0;const qa=new xt,Ya=new xt;class Ja extends Xa{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){var t=this.geometry;if(t.isBufferGeometry){if(null===t.index){var e=t.attributes.position,i=[];for(let t=0,r=e.count;t<r;t+=2)qa.fromBufferAttribute(e,t),Ya.fromBufferAttribute(e,t+1),i[t]=0===t?0:i[t-1],i[t+1]=i[t]+qa.distanceTo(Ya);t.setAttribute("lineDistance",new Ve(i,1))}}else t.isGeometry;return this}}Ja.prototype.isLineSegments=!0;(class extends Xa{constructor(t,e){super(t,e),this.type="LineLoop"}}).prototype.isLineLoop=!0;class Za extends Re{constructor(t){super(),this.type="PointsMaterial",this.color=new st(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}Za.prototype.isPointsMaterial=!0;const Ka=new Jt,Qa=new Yt,$a=new Vt,ts=new xt;class es extends ye{constructor(t=new Ye,e=new Za){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){var i=this.geometry,r=this.matrixWorld,n=t.params.Points.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),$a.copy(i.boundingSphere),$a.applyMatrix4(r),$a.radius+=n,!1!==t.ray.intersectsSphere($a)){Ka.copy(r).invert(),Qa.copy(t.ray).applyMatrix4(Ka);var s=(n=n/((this.scale.x+this.scale.y+this.scale.z)/3))*n;if(i.isBufferGeometry){var o=i.index,l=i.attributes.position;if(null!==o)for(let i=Math.max(0,a.start),n=Math.min(o.count,a.start+a.count);i<n;i++){var h=o.getX(i);ts.fromBufferAttribute(l,h),is(ts,h,s,r,t,e,this)}else for(let i=Math.max(0,a.start),n=Math.min(l.count,a.start+a.count);i<n;i++)ts.fromBufferAttribute(l,i),is(ts,i,s,r,t,e,this)}}}updateMorphTargets(){var t=this.geometry;if(t.isBufferGeometry){var e=t.morphAttributes,i=Object.keys(e);if(0<i.length){var r=e[i[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=r.length;t<e;t++){var n=r[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}else void 0!==(e=t.morphTargets)&&e.length}}function is(t,e,i,r,n,a,s){var o=Qa.distanceSqToPoint(t);o<i&&(i=new xt,Qa.closestPointToPoint(t,i),i.applyMatrix4(r),(t=n.ray.origin.distanceTo(i))<n.near||t>n.far||a.push({distance:t,distanceToRay:Math.sqrt(o),point:i,index:e,face:null,object:s}))}es.prototype.isPoints=!0;(class extends dt{constructor(t,e,i,r,n,a,s,o,l,h,u,c){super(null,a,s,o,l,h,r,n,u,c),this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}).prototype.isCompressedTexture=class extends dt{constructor(t,e,i){super({width:t,height:e}),this.format=i,this.magFilter=p,this.minFilter=p,this.generateMipmaps=!1,this.needsUpdate=!0}}.prototype.isFramebufferTexture=class extends dt{constructor(t,e,i,r,n,a,s,o,l){super(t,e,i,r,n,a,s,o,l),this.minFilter=void 0!==a?a:f,this.magFilter=void 0!==n?n:f,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){h.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){var t=this.image;0=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}.prototype.isVideoTexture=!0;class rs{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return null}getPointAt(t,e){return t=this.getUtoTmapping(t),this.getPoint(t,e)}getPoints(t=5){var e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return e}getSpacedPoints(t=5){var e=[];for(let i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e}getLength(){var t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e=[];let i,r=this.getPoint(0),n=0;e.push(0);for(let a=1;a<=t;a++)i=this.getPoint(a/t),n+=i.distanceTo(r),e.push(n),r=i;return this.cacheArcLengths=e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){var i=this.getLengths();let r=0;var n=i.length;let a,s,o=(a=e||t*i[n-1],0),l=n-1;for(;o<=l;)if((s=i[r=Math.floor(o+(l-o)/2)]-a)<0)o=r+1;else{if(!(0<s)){l=r;break}l=r-1}return i[r=l]===a?r/(n-1):(r+(t=(a-(e=i[r]))/((t=i[r+1])-e)))/(n-1)}getTangent(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),1<r&&(r=1);t=this.getPoint(i);var n=this.getPoint(r);return(e=e||new(t.isVector2?X:xt)).copy(n).sub(t).normalize(),e}getTangentAt(t,e){return t=this.getUtoTmapping(t),this.getTangent(t,e)}computeFrenetFrames(t,e){var i=new xt,r=[],n=[],a=[],s=new xt,o=new Jt;for(let e=0;e<=t;e++){var l=e/t;r[e]=this.getTangentAt(l,new xt)}n[0]=new xt,a[0]=new xt;let h=Number.MAX_VALUE;var u,c=Math.abs(r[0].x),d=Math.abs(r[0].y),p=Math.abs(r[0].z);c<=h&&(h=c,i.set(1,0,0)),d<=h&&(h=d,i.set(0,1,0)),p<=h&&i.set(0,0,1),s.crossVectors(r[0],i).normalize(),n[0].crossVectors(r[0],s),a[0].crossVectors(r[0],n[0]);for(let e=1;e<=t;e++)n[e]=n[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(r[e-1],r[e]),s.length()>Number.EPSILON&&(s.normalize(),u=Math.acos(V(r[e-1].dot(r[e]),-1,1)),n[e].applyMatrix4(o.makeRotationAxis(s,u))),a[e].crossVectors(r[e],n[e]);if(!0===e){let e=Math.acos(V(n[0].dot(n[t]),-1,1));e/=t,0<r[0].dot(s.crossVectors(n[0],n[t]))&&(e=-e);for(let i=1;i<=t;i++)n[i].applyMatrix4(o.makeRotationAxis(r[i],e*i)),a[i].crossVectors(r[i],n[i])}return{tangents:r,normals:n,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){var t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class ns extends rs{constructor(t=0,e=0,i=1,r=1,n=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(t,e){e=e||new X;var i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;for(var n=Math.abs(r)<Number.EPSILON;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=n?0:i),!0!==this.aClockwise||n||(r===i?r=-i:r-=i);var a,s;n=this.aStartAngle+t*r;let o=this.aX+this.xRadius*Math.cos(n),l=this.aY+this.yRadius*Math.sin(n);return 0!==this.aRotation&&(t=Math.cos(this.aRotation),n=Math.sin(this.aRotation),o=(a=o-this.aX)*t-(s=l-this.aY)*n+this.aX,l=a*n+s*t+this.aY),e.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){var t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}ns.prototype.isEllipseCurve=class extends dt{constructor(t,e,i,r,n,a,s,o,l){super(t,e,i,r,n,a,s,o,l),this.needsUpdate=!0}}.prototype.isCanvasTexture=!0;class as extends ns{constructor(t,e,i,r,n,a){super(t,e,i,i,r,n,a),this.type="ArcCurve"}}function ss(){let t=0,e=0,i=0,r=0;function n(n,a,s,o){t=n,e=s,i=-3*n+3*a-2*s-o,r=2*n-2*a+s+o}return{initCatmullRom:function(t,e,i,r,a){n(e,i,a*(i-t),a*(r-e))},initNonuniformCatmullRom:function(t,e,i,r,a,s,o){t=(e-t)/a-(i-t)/(a+s)+(i-e)/s,a=(i-e)/s-(r-e)/(s+o)+(r-i)/o,n(e,i,t*=s,a*=s)},calc:function(n){var a=n*n;return t+e*n+i*a+r*(a*n)}}}as.prototype.isArcCurve=!0;const os=new xt,ls=new ss,hs=new ss,us=new ss;class cs extends rs{constructor(t=[],e=!1,i="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=r}getPoint(t,e=new xt){var i=this.points,r=i.length;t=(r-(this.closed?0:1))*t;let n,a,s=Math.floor(t),o=t-s;this.closed?s+=0<s?0:(Math.floor(Math.abs(s)/r)+1)*r:0===o&&s===r-1&&(s=r-2,o=1),n=this.closed||0<s?i[(s-1)%r]:(os.subVectors(i[0],i[1]).add(i[0]),os);t=i[s%r];var l=i[(s+1)%r];if(a=this.closed||s+2<r?i[(s+2)%r]:(os.subVectors(i[r-1],i[r-2]).add(i[r-1]),os),"centripetal"===this.curveType||"chordal"===this.curveType){i="chordal"===this.curveType?.5:.25;let e=Math.pow(n.distanceToSquared(t),i),r=Math.pow(t.distanceToSquared(l),i),s=Math.pow(l.distanceToSquared(a),i);r<1e-4&&(r=1),e<1e-4&&(e=r),s<1e-4&&(s=r),ls.initNonuniformCatmullRom(n.x,t.x,l.x,a.x,e,r,s),hs.initNonuniformCatmullRom(n.y,t.y,l.y,a.y,e,r,s),us.initNonuniformCatmullRom(n.z,t.z,l.z,a.z,e,r,s)}else"catmullrom"===this.curveType&&(ls.initCatmullRom(n.x,t.x,l.x,a.x,this.tension),hs.initCatmullRom(n.y,t.y,l.y,a.y,this.tension),us.initCatmullRom(n.z,t.z,l.z,a.z,this.tension));return e.set(ls.calc(o),hs.calc(o),us.calc(o)),e}copy(t){super.copy(t),this.points=[];for(let i=0,r=t.points.length;i<r;i++){var e=t.points[i];this.points.push(e.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){var t=super.toJSON();t.points=[];for(let i=0,r=this.points.length;i<r;i++){var e=this.points[i];t.points.push(e.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let i=0,r=t.points.length;i<r;i++){var e=t.points[i];this.points.push((new xt).fromArray(e))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function ds(t,e,i,r,n){var a=t*t;return(2*i-2*r+(e=.5*(r-e))+(n=.5*(n-i)))*(t*a)+(-3*i+3*r-2*e-n)*a+e*t+i}function ps(t,e,i,r){return(n=1-(n=t))*n*e+2*(1-t)*t*i+t*t*r;var n}function fs(t,e,i,r,n){return(a=1-(a=t))*a*a*e+3*(a=1-t)*a*t*i+3*(1-t)*t*t*r+t*t*t*n;var a}class ms extends rs{constructor(t=new X,e=new X,i=new X,r=new X){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=r}getPoint(t,e=new X){var i=this.v0,r=this.v1,n=this.v2,a=this.v3;return e.set(fs(t,i.x,r.x,n.x,a.x),fs(t,i.y,r.y,n.y,a.y)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){var t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}ms.prototype.isCubicBezierCurve=cs.prototype.isCatmullRomCurve3=!0;class gs extends rs{constructor(t=new xt,e=new xt,i=new xt,r=new xt){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=r}getPoint(t,e=new xt){var i=this.v0,r=this.v1,n=this.v2,a=this.v3;return e.set(fs(t,i.x,r.x,n.x,a.x),fs(t,i.y,r.y,n.y,a.y),fs(t,i.z,r.z,n.z,a.z)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){var t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class vs extends rs{constructor(t=new X,e=new X){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new X){return 1===t?e.copy(this.v2):(e.copy(this.v2).sub(this.v1),e.multiplyScalar(t).add(this.v1)),e}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){return(e=e||new X).copy(this.v2).sub(this.v1).normalize(),e}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){var t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}vs.prototype.isLineCurve=gs.prototype.isCubicBezierCurve3=!0;class xs extends rs{constructor(t=new X,e=new X,i=new X){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new X){var i=this.v0,r=this.v1,n=this.v2;return e.set(ps(t,i.x,r.x,n.x),ps(t,i.y,r.y,n.y)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){var t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}xs.prototype.isQuadraticBezierCurve=!0;class _s extends rs{constructor(t=new xt,e=new xt,i=new xt){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new xt){var i=this.v0,r=this.v1,n=this.v2;return e.set(ps(t,i.x,r.x,n.x),ps(t,i.y,r.y,n.y),ps(t,i.z,r.z,n.z)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){var t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}_s.prototype.isQuadraticBezierCurve3=!0;class ys extends rs{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new X){t=((s=this.points).length-1)*t;var i=Math.floor(t),r=(t=t-i,s[0===i?i:i-1]),n=s[i],a=s[i>s.length-2?s.length-1:i+1],s=s[i>s.length-3?s.length-1:i+2];return e.set(ds(t,r.x,n.x,a.x,s.x),ds(t,r.y,n.y,a.y,s.y)),e}copy(t){super.copy(t),this.points=[];for(let i=0,r=t.points.length;i<r;i++){var e=t.points[i];this.points.push(e.clone())}return this}toJSON(){var t=super.toJSON();t.points=[];for(let i=0,r=this.points.length;i<r;i++){var e=this.points[i];t.points.push(e.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let i=0,r=t.points.length;i<r;i++){var e=t.points[i];this.points.push((new X).fromArray(e))}return this}}ys.prototype.isSplineCurve=!0;var Ms=Object.freeze({__proto__:null,ArcCurve:as,CatmullRomCurve3:cs,CubicBezierCurve:ms,CubicBezierCurve3:gs,EllipseCurve:ns,LineCurve:vs,LineCurve3:class extends rs{constructor(t=new xt,e=new xt){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new xt){return 1===t?e.copy(this.v2):(e.copy(this.v2).sub(this.v1),e.multiplyScalar(t).add(this.v1)),e}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){var t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:xs,QuadraticBezierCurve3:_s,SplineCurve:ys});class Ss extends rs{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new vs(e,t))}getPoint(t,e){var i,r,n,a=t*this.getLength(),s=this.getCurveLengths();let o=0;for(;o<s.length;){if(s[o]>=a)return i=s[o]-a,n=(r=this.curves[o]).getLength(),r.getPointAt(0===n?0:1-i/n,e);o++}return null}getLength(){var t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;var t=[];let e=0;for(let i=0,r=this.curves.length;i<r;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t}getSpacedPoints(t=40){var e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){var e=[];let i;for(let o=0,l=this.curves;o<l.length;o++){var r=l[o],n=r.isEllipseCurve?2*t:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?t*r.points.length:t,a=r.getPoints(n);for(let t=0;t<a.length;t++){var s=a[t];i&&i.equals(s)||(e.push(s),i=s)}}return this.autoClose&&1<e.length&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let i=0,r=t.curves.length;i<r;i++){var e=t.curves[i];this.curves.push(e.clone())}return this.autoClose=t.autoClose,this}toJSON(){var t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let i=0,r=this.curves.length;i<r;i++){var e=this.curves[i];t.curves.push(e.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let i=0,r=t.curves.length;i<r;i++){var e=t.curves[i];this.curves.push((new Ms[e.type]).fromJSON(e))}return this}}class ws extends Ss{constructor(t){super(),this.type="Path",this.currentPoint=new X,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){var i=new vs(this.currentPoint.clone(),new X(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,i,r){return t=new xs(this.currentPoint.clone(),new X(t,e),new X(i,r)),this.curves.push(t),this.currentPoint.set(i,r),this}bezierCurveTo(t,e,i,r,n,a){return t=new ms(this.currentPoint.clone(),new X(t,e),new X(i,r),new X(n,a)),this.curves.push(t),this.currentPoint.set(n,a),this}splineThru(t){var e=[this.currentPoint.clone()].concat(t);e=new ys(e);return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,i,r,n,a){var s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+s,e+o,i,r,n,a),this}absarc(t,e,i,r,n,a){return this.absellipse(t,e,i,i,r,n,a),this}ellipse(t,e,i,r,n,a,s,o){var l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(t+l,e+h,i,r,n,a,s,o),this}absellipse(t,e,i,r,n,a,s,o){return t=new ns(t,e,i,r,n,a,s,o),0<this.curves.length&&((e=t.getPoint(0)).equals(this.currentPoint)||this.lineTo(e.x,e.y)),this.curves.push(t),i=t.getPoint(1),this.currentPoint.copy(i),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){var t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class bs extends Ye{constructor(t=1,e=1,i=1,r=8,n=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:r,heightSegments:n,openEnded:a,thetaStart:s,thetaLength:o};const l=this,h=(r=Math.floor(r),n=Math.floor(n),[]),u=[],c=[],d=[];let p=0;const f=[],m=i/2;let g=0;{var v=new xt,x=new xt;let a=0;var _=(e-t)/i;for(let a=0;a<=n;a++){var y=[],M=a/n,S=M*(e-t)+t;for(let t=0;t<=r;t++){var w=t/r,b=w*o+s,T=Math.sin(b);b=Math.cos(b);x.x=S*T,x.y=-M*i+m,x.z=S*b,u.push(x.x,x.y,x.z),v.set(T,_,b).normalize(),c.push(v.x,v.y,v.z),d.push(w,1-M),y.push(p++)}f.push(y)}for(let t=0;t<r;t++)for(let e=0;e<n;e++){var A=f[e][t],C=f[e+1][t],E=f[e+1][t+1],L=f[e][t+1];h.push(A,C,L),h.push(C,E,L),a+=6}l.addGroup(g,a,0),g+=a}function P(i){var n=p,a=new X,f=new xt;let v=0;var x=!0===i?t:e,_=!0===i?1:-1;for(let t=1;t<=r;t++)u.push(0,m*_,0),c.push(0,_,0),d.push(.5,.5),p++;var y=p;for(let t=0;t<=r;t++){var M=t/r*o+s,S=Math.cos(M);M=Math.sin(M);f.x=x*M,f.y=m*_,f.z=x*S,u.push(f.x,f.y,f.z),c.push(0,_,0),a.x=.5*S+.5,a.y=.5*M*_+.5,d.push(a.x,a.y),p++}for(let t=0;t<r;t++){var w=n+t,b=y+t;!0===i?h.push(b,b+1,w):h.push(b+1,b,w),v+=3}l.addGroup(g,v,!0===i?1:2),g+=v}!1===a&&(0<t&&P(!0),0<e)&&P(!1),this.setIndex(h),this.setAttribute("position",new Ve(u,3)),this.setAttribute("normal",new Ve(c,3)),this.setAttribute("uv",new Ve(d,2))}static fromJSON(t){return new bs(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}new xt,new xt,new xt,new De;class Ts extends ws{constructor(t){super(t),this.uuid=B(),this.type="Shape",this.holes=[]}getPointsHoles(t){var e=[];for(let i=0,r=this.holes.length;i<r;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let i=0,r=t.holes.length;i<r;i++){var e=t.holes[i];this.holes.push(e.clone())}return this}toJSON(){var t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let i=0,r=this.holes.length;i<r;i++){var e=this.holes[i];t.holes.push(e.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let i=0,r=t.holes.length;i<r;i++){var e=t.holes[i];this.holes.push((new ws).fromJSON(e))}return this}}const As=function(t,e,i=2){var r=e&&e.length,n=r?e[0]*i:t.length;let a=Cs(t,0,n,i,!0);var s=[];if(a&&a.next!==a.prev){let o,l,h,u,c,d,p;if(r&&(a=function(t,e,i,r){var n=[];let a,s,o,l,h;for(a=0,s=e.length;a<s;a++)o=e[a]*r,l=a<s-1?e[a+1]*r:t.length,(h=Cs(t,o,l,r,!1))===h.next&&(h.steiner=!0),n.push(function(t){let e=t,i=t;for(;(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next,e!==t;);return i}(h));for(n.sort(Ls),a=0;a<n.length;a++)!function(t,e){(e=function(t,e){let i=e;var r=t.x,n=t.y;let a,s=-1/0;do{if(n<=i.y&&n>=i.next.y&&i.next.y!==i.y){var o=i.x+(n-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(o<=r&&o>s){if((s=o)===r){if(n===i.y)return i;if(n===i.next.y)return i.next}a=i.x<i.next.x?i:i.next}}}while(i=i.next,i!==e);if(!a)return null;if(r!==s){var l=a,h=a.x,u=a.y;let e,o=1/0;for(i=a;r>=i.x&&i.x>=h&&r!==i.x&&Ds(n<u?r:s,n,h,u,n<u?s:r,n,i.x,i.y)&&(e=Math.abs(n-i.y)/(r-i.x),Us(i,t))&&(e<o||e===o&&(i.x>a.x||i.x===a.x&&function(t,e){return Is(t.prev,t,e.prev)<0&&Is(e.next,t,t.next)<0}(a,i)))&&(a=i,o=e),(i=i.next)!==l;);}return a}(t,e))&&(t=Fs(e,t),Es(e,e.next),Es(t,t.next))}(n[a],i),i=Es(i,i.next);return i}(t,e,a,i)),t.length>80*i){o=h=t[0],l=u=t[1];for(let e=i;e<n;e+=i)c=t[e],d=t[e+1],c<o&&(o=c),d<l&&(l=d),c>h&&(h=c),d>u&&(u=d);p=0!==(p=Math.max(h-o,u-l))?1/p:0}!function t(e,i,r,n,a,s,o){if(e){if(!o&&s){var l=e,h=n,u=a,c=s;let t=l;for(;null===t.z&&(t.z=Ps(t.x,t.y,h,u,c)),t.prevZ=t.prev,t.nextZ=t.next,(t=t.next)!==l;);t.prevZ.nextZ=null,t.prevZ=null;{var d=t;let e,i,r,n,a,s,o,l,h=1;do{for(i=d,d=null,a=null,s=0;i;){for(s++,r=i,o=0,e=0;e<h&&(o++,r=r.nextZ);e++);for(l=h;0<o||0<l&&r;)0!==o&&(0===l||!r||i.z<=r.z)?(i=(n=i).nextZ,o--):(r=(n=r).nextZ,l--),a?a.nextZ=n:d=n,n.prevZ=a,a=n;i=r}}while(a.nextZ=null,h*=2,1<s)}}let p,f,m=e;for(;e.prev!==e.next;)if(p=e.prev,f=e.next,s?function(t,e,i,r){var n=t.prev,a=t,s=t.next;if(0<=Is(n,a,s))return;var o=(n.x<a.x?n.x<s.x?n:s:a.x<s.x?a:s).x,l=(n.y<a.y?n.y<s.y?n:s:a.y<s.y?a:s).y,h=(n.x>a.x?n.x>s.x?n:s:a.x>s.x?a:s).x,u=(n.y>a.y?n.y>s.y?n:s:a.y>s.y?a:s).y,c=Ps(o,l,e,i,r),d=Ps(h,u,e,i,r);let p=t.prevZ,f=t.nextZ;for(;p&&p.z>=c&&f&&f.z<=d;){if(p!==t.prev&&p!==t.next&&Ds(n.x,n.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=Is(p.prev,p,p.next))return;if(p=p.prevZ,f!==t.prev&&f!==t.next&&Ds(n.x,n.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=Is(f.prev,f,f.next))return;f=f.nextZ}for(;p&&p.z>=c;){if(p!==t.prev&&p!==t.next&&Ds(n.x,n.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=Is(p.prev,p,p.next))return;p=p.prevZ}for(;f&&f.z<=d;){if(f!==t.prev&&f!==t.next&&Ds(n.x,n.y,a.x,a.y,s.x,s.y,f.x,f.y)&&0<=Is(f.prev,f,f.next))return;f=f.nextZ}return 1}(e,n,a,s):function(t){var e=t.prev,i=t,r=t.next;if(0<=Is(e,i,r))return;let n=t.next.next;for(;n!==t.prev;){if(Ds(e.x,e.y,i.x,i.y,r.x,r.y,n.x,n.y)&&0<=Is(n.prev,n,n.next))return;n=n.next}return 1}(e))i.push(p.i/r),i.push(e.i/r),i.push(f.i/r),Vs(e),e=f.next,m=f.next;else if((e=f)===m){o?1===o?t(e=function(t,e,i){let r=t;do{var n=r.prev,a=r.next.next;!Rs(n,a)&&Ns(n,r,r.next,a)&&Us(n,a)&&Us(a,n)&&(e.push(n.i/i),e.push(r.i/i),e.push(a.i/i),Vs(r),Vs(r.next),r=t=a),r=r.next}while(r!==t);return Es(r)}(Es(e),i,r),i,r,n,a,s,2):2===o&&function(e,i,r,n,a,s){let o=e;do{let e=o.next.next;for(;e!==o.prev;){var l;if(o.i!==e.i&&function(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&Ns(i,i.next,t,e))return 1}while(i=i.next,i!==t)}(t,e)&&(Us(t,e)&&Us(e,t)&&function(t,e){let i=t,r=!1;for(var n=(t.x+e.x)/2,a=(t.y+e.y)/2;i.y>a!=i.next.y>a&&i.next.y!==i.y&&n<(i.next.x-i.x)*(a-i.y)/(i.next.y-i.y)+i.x&&(r=!r),i=i.next,i!==t;);return r}(t,e)&&(Is(t.prev,t,e.prev)||Is(t,e.prev,e))||Rs(t,e)&&0<Is(t.prev,t,t.next)&&0<Is(e.prev,e,e.next))}(o,e))return l=Fs(o,e),o=Es(o,o.next),l=Es(l,l.next),t(o,i,r,n,a,s),t(l,i,r,n,a,s);e=e.next}}while(o=o.next,o!==e)}(e,i,r,n,a,s):t(Es(e),i,r,n,a,s,1);break}}}(a,s,i,o,l,p)}return s};function Cs(t,e,i,r,n){let a,s;if(n===0<function(t,e,i,r){let n=0;for(let a=e,s=i-r;a<i;a+=r)n+=(t[s]-t[a])*(t[a+1]+t[s+1]),s=a;return n}(t,e,i,r))for(a=e;a<i;a+=r)s=Bs(a,t[a],t[a+1],s);else for(a=i-r;a>=e;a-=r)s=Bs(a,t[a],t[a+1],s);return s&&Rs(s,s.next)&&(Vs(s),s=s.next),s}function Es(t,e){if(!t)return t;e=e||t;let i,r=t;do{if(i=!1,r.steiner||!Rs(r,r.next)&&0!==Is(r.prev,r,r.next))r=r.next;else{if(Vs(r),(r=e=r.prev)===r.next)break;i=!0}}while(i||r!==e);return e}function Ls(t,e){return t.x-e.x}function Ps(t,e,i,r,n){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*n)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*n)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Ds(t,e,i,r,n,a,s,o){return 0<=(n-s)*(e-o)-(t-s)*(a-o)&&0<=(t-s)*(r-o)-(i-s)*(e-o)&&0<=(i-s)*(a-o)-(n-s)*(r-o)}function Is(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function Rs(t,e){return t.x===e.x&&t.y===e.y}function Ns(t,e,i,r){var n=Os(Is(t,e,i)),a=Os(Is(t,e,r)),s=Os(Is(i,r,t)),o=Os(Is(i,r,e));return n!==a&&s!==o||0===n&&zs(t,i,e)||0===a&&zs(t,r,e)||0===s&&zs(i,t,r)||!(0!==o||!zs(i,e,r))}function zs(t,e,i){return e.x<=Math.max(t.x,i.x)&&e.x>=Math.min(t.x,i.x)&&e.y<=Math.max(t.y,i.y)&&e.y>=Math.min(t.y,i.y)}function Os(t){return 0<t?1:t<0?-1:0}function Us(t,e){return Is(t.prev,t,t.next)<0?0<=Is(t,e,t.next)&&0<=Is(t,t.prev,e):Is(t,e,t.prev)<0||Is(t,t.next,e)<0}function Fs(t,e){var i=new ks(t.i,t.x,t.y),r=new ks(e.i,e.x,e.y),n=t.next,a=e.prev;return(t.next=e).prev=t,(i.next=n).prev=i,(r.next=i).prev=r,(a.next=r).prev=a,r}function Bs(t,e,i,r){return t=new ks(t,e,i),r?(t.next=r.next,(t.prev=r).next.prev=t,r.next=t):(t.prev=t).next=t,t}function Vs(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function ks(t,e,i){this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Gs{static area(t){var e=t.length;let i=0;for(let r=e-1,n=0;n<e;r=n++)i+=t[r].x*t[n].y-t[n].x*t[r].y;return.5*i}static isClockWise(t){return Gs.area(t)<0}static triangulateShape(t,e){var i=[],r=[],n=[];Ws(t),Hs(i,t);let a=t.length;e.forEach(Ws);for(let t=0;t<e.length;t++)r.push(a),a+=e[t].length,Hs(i,e[t]);var s=As(i,r);for(let t=0;t<s.length;t+=3)n.push(s.slice(t,t+3));return n}}function Ws(t){var e=t.length;2<e&&t[e-1].equals(t[0])&&t.pop()}function Hs(t,e){for(let i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}class js extends Ye{constructor(t=new Ts([new X(.5,.5),new X(-.5,.5),new X(-.5,-.5),new X(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const i=this,r=[],n=[];for(let a=0,s=t.length;a<s;a++)!function(t){const a=[],s=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1;let l=void 0!==e.depth?e.depth:1,h=void 0===e.bevelEnabled||e.bevelEnabled,u=void 0!==e.bevelThickness?e.bevelThickness:.2,c=void 0!==e.bevelSize?e.bevelSize:u-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:Xs;void 0!==e.amount&&(l=e.amount);let g,v,x,_,y,M=!1;f&&(g=f.getSpacedPoints(o),M=!0,h=!1,v=f.computeFrenetFrames(o,!1),x=new xt,_=new xt,y=new xt),h||(p=0,u=0,c=0,d=0);let S=(t=t.extractPoints(s)).shape;const w=t.holes;if(!Gs.isClockWise(S)){S=S.reverse();for(let t=0,e=w.length;t<e;t++){var b=w[t];Gs.isClockWise(b)&&(w[t]=b.reverse())}}const T=Gs.triangulateShape(S,w),A=S;for(let t=0,e=w.length;t<e;t++){var C=w[t];S=S.concat(C)}function E(t,e,i){return e.clone().multiplyScalar(i).add(t)}const L=S.length,P=T.length;function D(t,e,i){let r,n,a;var s=t.x-e.x,o=t.y-e.y,l=i.x-t.x,h=i.y-t.y,u=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){var c=Math.sqrt(u),d=Math.sqrt(l*l+h*h),p=e.x-o/c;e=e.y+s/c;if((i=(r=p+s*(c=((i.x-h/d-p)*h-(i.y+l/d-e)*l)/(s*h-o*l))-t.x,n=e+o*c-t.y,r*r+n*n))<=2)return new X(r,n);a=Math.sqrt(i/2)}else{let t=!1;s>Number.EPSILON?l>Number.EPSILON&&(t=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(h)&&(t=!0),a=t?(r=-o,n=s,Math.sqrt(u)):(r=s,n=o,Math.sqrt(u/2))}return new X(r/a,n/a)}var I=[];for(let t=0,e=A.length,i=e-1,r=t+1;t<e;t++,i++,r++)i===e&&(i=0),r===e&&(r=0),I[t]=D(A[t],A[i],A[r]);var R=[];let N,z=I.concat();for(let t=0,e=w.length;t<e;t++){var O=w[t];N=[];for(let t=0,e=O.length,i=e-1,r=t+1;t<e;t++,i++,r++)i===e&&(i=0),r===e&&(r=0),N[t]=D(O[t],O[i],O[r]);R.push(N),z=z.concat(N)}for(let t=0;t<p;t++){var U=t/p,F=u*Math.cos(U*Math.PI/2);const e=c*Math.sin(U*Math.PI/2)+d;for(let t=0,i=A.length;t<i;t++){var B=E(A[t],I[t],e);Q(B.x,B.y,-F)}for(let t=0,i=w.length;t<i;t++){var V=w[t];N=R[t];for(let t=0,i=V.length;t<i;t++){var k=E(V[t],N[t],e);Q(k.x,k.y,-F)}}}const G=c+d;for(let t=0;t<L;t++){var W=h?E(S[t],z[t],G):S[t];M?(_.copy(v.normals[0]).multiplyScalar(W.x),x.copy(v.binormals[0]).multiplyScalar(W.y),y.copy(g[0]).add(_).add(x),Q(y.x,y.y,y.z)):Q(W.x,W.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<L;e++){var H=h?E(S[e],z[e],G):S[e];M?(_.copy(v.normals[t]).multiplyScalar(H.x),x.copy(v.binormals[t]).multiplyScalar(H.y),y.copy(g[t]).add(_).add(x),Q(y.x,y.y,y.z)):Q(H.x,H.y,l/o*t)}for(let t=p-1;0<=t;t--){var j=t/p,q=u*Math.cos(j*Math.PI/2);const e=c*Math.sin(j*Math.PI/2)+d;for(let t=0,i=A.length;t<i;t++){var Y=E(A[t],I[t],e);Q(Y.x,Y.y,l+q)}for(let t=0,i=w.length;t<i;t++){var J=w[t];N=R[t];for(let t=0,i=J.length;t<i;t++){var Z=E(J[t],N[t],e);M?Q(Z.x,Z.y+g[o-1].y,g[o-1].x+q):Q(Z.x,Z.y,l+q)}}}function K(t,e){let n=t.length;for(;0<=--n;){var a=n;let f=n-1;f<0&&(f=t.length-1);for(let t=0,n=o+2*p;t<n;t++){var s=L*t,l=L*(t+1),h=(u=h=void 0,e+a+s),u=e+f+s,c=e+f+l,d=e+a+l;tt(h),tt(u),tt(d),tt(u),tt(c),tt(d),h=r.length/3,et((u=m.generateSideWallUV(i,r,h-6,h-3,h-2,h-1))[0]),et(u[1]),et(u[3]),et(u[1]),et(u[2]),et(u[3])}}}function Q(t,e,i){a.push(t),a.push(e),a.push(i)}function $(t,e,n){tt(t),tt(e),tt(n),t=r.length/3,et((e=m.generateTopUV(i,r,t-3,t-2,t-1))[0]),et(e[1]),et(e[2])}function tt(t){r.push(a[3*t+0]),r.push(a[3*t+1]),r.push(a[3*t+2])}function et(t){n.push(t.x),n.push(t.y)}(function(){var t=r.length/3;if(h){let t=0*L;for(let i=0;i<P;i++){var e=T[i];$(e[2]+t,e[1]+t,e[0]+t)}t=L*(o+2*p);for(let e=0;e<P;e++){var n=T[e];$(n[0]+t,n[1]+t,n[2]+t)}}else{for(let t=0;t<P;t++){var a=T[t];$(a[2],a[1],a[0])}for(let t=0;t<P;t++){var s=T[t];$(s[0]+L*o,s[1]+L*o,s[2]+L*o)}}i.addGroup(t,r.length/3-t,0)})(),function(){var t=r.length/3;let e=0;K(A,e),e+=A.length;for(let t=0,i=w.length;t<i;t++){var n=w[t];K(n,e),e+=n.length}i.addGroup(t,r.length/3-t,1)}()}(t[a]);this.setAttribute("position",new Ve(r,3)),this.setAttribute("uv",new Ve(n,2)),this.computeVertexNormals()}toJSON(){var t=super.toJSON(),e=i=this.parameters.shapes,i=this.parameters.options,r=t;if(r.shapes=[],Array.isArray(e))for(let t=0,i=e.length;t<i;t++){var n=e[t];r.shapes.push(n.uuid)}else r.shapes.push(e.uuid);return void 0!==i.extrudePath&&(r.options.extrudePath=i.extrudePath.toJSON()),r}static fromJSON(t,e){var i=[];for(let n=0,a=t.shapes.length;n<a;n++){var r=e[t.shapes[n]];i.push(r)}var n=t.options.extrudePath;return void 0!==n&&(t.options.extrudePath=(new Ms[n.type]).fromJSON(n)),new js(i,t.options)}}const Xs={generateTopUV:function(t,e,i,r,n){var a=e[3*i],s=(i=e[3*i+1],e[3*r]),o=(r=e[3*r+1],e[3*n]);e=e[3*n+1];return[new X(a,i),new X(s,r),new X(o,e)]},generateSideWallUV:function(t,e,i,r,n,a){var s=e[3*i],o=e[3*i+1],l=(i=e[3*i+2],e[3*r]),h=e[3*r+1],u=(r=e[3*r+2],e[3*n]),c=e[3*n+1],d=(n=e[3*n+2],e[3*a]),p=e[3*a+1];e=e[3*a+2];return Math.abs(o-h)<Math.abs(s-l)?[new X(s,1-i),new X(l,1-r),new X(u,1-n),new X(d,1-e)]:[new X(o,1-i),new X(h,1-r),new X(c,1-n),new X(p,1-e)]}};class qs extends Ye{constructor(t=new Ts([new X(0,.5),new X(-.5,-.5),new X(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const i=[],r=[],n=[],a=[];let s=0,o=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(s,o,e),s+=o,o=0;function l(t){var s=r.length/3;let l=(t=t.extractPoints(e)).shape;var h=t.holes;!1===Gs.isClockWise(l)&&(l=l.reverse());for(let t=0,e=h.length;t<e;t++){var u=h[t];!0===Gs.isClockWise(u)&&(h[t]=u.reverse())}var c=Gs.triangulateShape(l,h);for(let t=0,e=h.length;t<e;t++){var d=h[t];l=l.concat(d)}for(let t=0,e=l.length;t<e;t++){var p=l[t];r.push(p.x,p.y,0),n.push(0,0,1),a.push(p.x,p.y)}for(let t=0,e=c.length;t<e;t++){var f=(g=c[t])[0]+s,m=g[1]+s,g=g[2]+s;i.push(f,m,g),o+=3}}this.setIndex(i),this.setAttribute("position",new Ve(r,3)),this.setAttribute("normal",new Ve(n,3)),this.setAttribute("uv",new Ve(a,2))}toJSON(){var t=super.toJSON(),e=this.parameters.shapes,i=t;if(i.shapes=[],Array.isArray(e))for(let t=0,n=e.length;t<n;t++){var r=e[t];i.shapes.push(r.uuid)}else i.shapes.push(e.uuid);return i}static fromJSON(t,e){var i=[];for(let n=0,a=t.shapes.length;n<a;n++){var r=e[t.shapes[n]];i.push(r)}return new qs(i,t.curveSegments)}}class Ys extends Ye{constructor(t=1,e=32,i=16,r=0,n=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:r,phiLength:n,thetaStart:a,thetaLength:s},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));var o=Math.min(a+s,Math.PI);let l=0;var h=[],u=new xt,c=new xt,d=[],p=[],f=[],m=[];for(let d=0;d<=i;d++){var g=[],v=d/i;let _=0;0==d&&0==a?_=.5/e:d==i&&o==Math.PI&&(_=-.5/e);for(let i=0;i<=e;i++){var x=i/e;u.x=-t*Math.cos(r+x*n)*Math.sin(a+v*s),u.y=t*Math.cos(a+v*s),u.z=t*Math.sin(r+x*n)*Math.sin(a+v*s),p.push(u.x,u.y,u.z),c.copy(u).normalize(),f.push(c.x,c.y,c.z),m.push(x+_,1-v),g.push(l++)}h.push(g)}for(let t=0;t<i;t++)for(let r=0;r<e;r++){var _=h[t][r+1],y=h[t][r],M=h[t+1][r],S=h[t+1][r+1];(0!==t||0<a)&&d.push(_,y,S),(t!==i-1||o<Math.PI)&&d.push(y,M,S)}this.setIndex(d),this.setAttribute("position",new Ve(p,3)),this.setAttribute("normal",new Ve(f,3)),this.setAttribute("uv",new Ve(m,2))}static fromJSON(t){return new Ys(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Js extends Re{constructor(t){super(),this.type="ShadowMaterial",this.color=new st(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}Js.prototype.isShadowMaterial=!0;class Zs extends xi{constructor(t){super(t),this.type="RawShaderMaterial"}}class Ks extends Re{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new st(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new st(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new X(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}Ks.prototype.isMeshStandardMaterial=Zs.prototype.isRawShaderMaterial=!0;class Qs extends Ks{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new X(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return V(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new st(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new st(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new st(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){0<this._sheen!=0<t&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){0<this._clearcoat!=0<t&&this.version++,this._clearcoat=t}get transmission(){return this._transmission}set transmission(t){0<this._transmission!=0<t&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}Qs.prototype.isMeshPhysicalMaterial=!0;class $s extends Re{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new st(16777215),this.specular=new st(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new st(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new X(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}$s.prototype.isMeshPhongMaterial=!0;class to extends Re{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new st(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new st(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new X(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class eo extends Re{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new X(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class io extends Re{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new st(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new st(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class ro extends Re{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new st(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new X(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}ro.prototype.isMeshMatcapMaterial=io.prototype.isMeshLambertMaterial=eo.prototype.isMeshNormalMaterial=to.prototype.isMeshToonMaterial=!0;class no extends Va{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}no.prototype.isLineDashedMaterial=!0;const ao={ShadowMaterial:Js,SpriteMaterial:pa,RawShaderMaterial:Zs,ShaderMaterial:xi,PointsMaterial:Za,MeshPhysicalMaterial:Qs,MeshStandardMaterial:Ks,MeshPhongMaterial:$s,MeshToonMaterial:to,MeshNormalMaterial:eo,MeshLambertMaterial:io,MeshDepthMaterial:qn,MeshDistanceMaterial:Yn,MeshBasicMaterial:Ne,MeshMatcapMaterial:ro,LineDashedMaterial:no,LineBasicMaterial:Va,Material:Re},so=(Re.fromType=function(t){return new ao[t]},{arraySlice:function(t,e,i){return so.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)},convertArray:function(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){var e=t.length,i=new Array(e);for(let t=0;t!==e;++t)i[t]=t;return i.sort((function(e,i){return t[e]-t[i]})),i},sortedArray:function(t,e,i){var r=t.length,n=new t.constructor(r);for(let s=0,o=0;o!==r;++s){var a=i[s]*e;for(let i=0;i!==e;++i)n[o++]=t[a+i]}return n},flattenJSON:function(t,e,i,r){let n=1,a=t[0];for(;void 0!==a&&void 0===a[r];)a=t[n++];if(void 0!==a){let s=a[r];if(void 0!==s)if(Array.isArray(s))for(;void 0!==(s=a[r])&&(e.push(a.time),i.push.apply(i,s)),void 0!==(a=t[n++]););else if(void 0!==s.toArray)for(;void 0!==(s=a[r])&&(e.push(a.time),s.toArray(i,i.length)),void 0!==(a=t[n++]););else for(;void 0!==(s=a[r])&&(e.push(a.time),i.push(s)),void 0!==(a=t[n++]););}},subclip:function(t,e,i,r,n=30){var a=t.clone(),s=(a.name=e,[]);for(let t=0;t<a.tracks.length;++t){var o=a.tracks[t],l=o.getValueSize(),h=[],u=[];for(let t=0;t<o.times.length;++t){var c=o.times[t]*n;if(!(c<i||r<=c)){h.push(o.times[t]);for(let e=0;e<l;++e)u.push(o.values[t*l+e])}}0!==h.length&&(o.times=so.convertArray(h,o.times.constructor),o.values=so.convertArray(u,o.values.constructor),s.push(o))}a.tracks=s;let d=1/0;for(let t=0;t<a.tracks.length;++t)d>a.tracks[t].times[0]&&(d=a.tracks[t].times[0]);for(let t=0;t<a.tracks.length;++t)a.tracks[t].shift(-1*d);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,i=t,r=30){var n=i.tracks.length,a=e/(r=r<=0?30:r);for(let e=0;e<n;++e){const r=i.tracks[e],n=r.ValueTypeName;if("bool"!==n&&"string"!==n){var s=t.tracks.find((function(t){return t.name===r.name&&t.ValueTypeName===n}));if(void 0!==s){let t=0;var o=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=o/3);let e=0;var l,h,u,c=s.getValueSize(),d=(s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=c/3),r.times.length-1);let i;i=a<=r.times[0]?(h=o-(l=t),so.arraySlice(r.values,l,h)):a>=r.times[d]?(h=(l=d*o+t)+o-t,so.arraySlice(r.values,l,h)):(u=o-(o=t),(d=r.createInterpolant()).evaluate(a),so.arraySlice(d.resultBuffer,o,u)),"quaternion"===n&&(new vt).fromArray(i).normalize().conjugate().toArray(i);var p=s.times.length;for(let t=0;t<p;++t){var f=t*c+e;if("quaternion"===n)vt.multiplyQuaternionsFlat(s.values,f,i,0,s.values,f);else{var m=c-2*e;for(let t=0;t<m;++t)s.values[f+t]-=i[t]}}}}}return t.blendMode=2501,t}});class oo{constructor(t,e,i,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(i),this.sampleValues=e,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){var e=this.parameterPositions;let i=this._cachedIndex,r=e[i],n=e[i-1];t:{e:{let h;i:{r:if(!(t<r)){for(var a=i+2;;){if(void 0===r){if(t<n)break r;return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,t,n)}if(i===a)break;if(n=r,t<(r=e[++i]))break e}h=e.length;break i}if(t>=n)break t;var s=e[1];t<s&&(i=2,n=s);for(var o=i-2;;){if(void 0===n)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(i===o)break;if(r=n,t>=(n=e[--i-1]))break e}h=i,i=0}for(;i<h;){var l=i+h>>>1;t<e[l]?h=l:i=1+l}if(r=e[i],void 0===(n=e[i-1]))return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,n,t)}this._cachedIndex=i,this.intervalChanged_(i,n,r)}return this.interpolate_(i,n,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){var e=this.resultBuffer,i=this.sampleValues,r=this.valueSize,n=t*r;for(let t=0;t!==r;++t)e[t]=i[n+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}oo.prototype.beforeStart_=oo.prototype.copySampleValue_,oo.prototype.afterEnd_=oo.prototype.copySampleValue_;class lo extends oo{constructor(t,e,i,r){super(t,e,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(t,e,i){var r=this.parameterPositions;let n=t-2,a=t+1,s=r[n],o=r[a];if(void 0===s)switch(this.getSettings_().endingStart){case 2401:n=t,s=2*e-i;break;case 2402:n=r.length-2,s=e+r[n]-r[n+1];break;default:n=t,s=i}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:a=t,o=2*i-e;break;case 2402:a=1,o=i+r[1]-r[0];break;default:a=t-1,o=e}var l=.5*(i-e),h=this.valueSize;this._weightPrev=l/(e-s),this._weightNext=l/(o-i),this._offsetPrev=n*h,this._offsetNext=a*h}interpolate_(t,e,i,r){var n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,h=this._offsetPrev,u=this._offsetNext,c=(t=this._weightPrev,this._weightNext),d=-t*(e=(r=(i=(i-e)/(r-e))*i)*i)+2*t*r-t*i,p=(1+t)*e+(-1.5-2*t)*r+(-.5+t)*i+1,f=(-1-c)*e+(1.5+c)*r+.5*i,m=c*e-c*r;for(let t=0;t!==s;++t)n[t]=d*a[h+t]+p*a[l+t]+f*a[o+t]+m*a[u+t];return n}}class ho extends oo{constructor(t,e,i,r){super(t,e,i,r)}interpolate_(t,e,i,r){var n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,h=(i-e)/(r-e),u=1-h;for(let t=0;t!==s;++t)n[t]=a[l+t]*u+a[o+t]*h;return n}}class uo extends oo{constructor(t,e,i,r){super(t,e,i,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class co{constructor(t,e,i,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=so.convertArray(e,this.TimeBufferType),this.values=so.convertArray(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(t){var e=t.constructor;let i;return e.toJSON!==this.toJSON?i=e.toJSON(t):(i={name:t.name,times:so.convertArray(t.times,Array),values:so.convertArray(t.values,Array)},(e=t.getInterpolation())!==t.DefaultInterpolation&&(i.interpolation=e)),i.type=t.ValueTypeName,i}InterpolantFactoryMethodDiscrete(t){return new uo(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new ho(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new lo(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){var i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}}else this.createInterpolant=e;return this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){var e=this.times;for(let i=0,r=e.length;i!==r;++i)e[i]+=t}return this}scale(t){if(1!==t){var e=this.times;for(let i=0,r=e.length;i!==r;++i)e[i]*=t}return this}trim(t,e){var i,r=this.times,n=r.length;let a=0,s=n-1;for(;a!==n&&r[a]<t;)++a;for(;-1!==s&&r[s]>e;)--s;return++s,0===a&&s===n||(a>=s&&(s=Math.max(s,1),a=s-1),i=this.getValueSize(),this.times=so.arraySlice(r,a,s),this.values=so.arraySlice(this.values,a*i,s*i)),this}validate(){let t=!0;var e=this.getValueSize(),i=(e-Math.floor(e)!=0&&(t=!1),this.times),r=this.values,n=i.length;0===n&&(t=!1);let a=null;for(let e=0;e!==n;e++){var s=i[e];if("number"==typeof s&&isNaN(s)){t=!1;break}if(null!==a&&a>s){t=!1;break}a=s}if(void 0!==r&&so.isTypedArray(r))for(let e=0,i=r.length;e!==i;++e){var o=r[e];if(isNaN(o)){t=!1;break}}return t}optimize(){var t=so.arraySlice(this.times),e=so.arraySlice(this.values),i=this.getValueSize(),r=2302===this.getInterpolation(),n=t.length-1;let a=1;for(let p=1;p<n;++p){let n=!1;var s=t[p];if(s!==t[p+1]&&(1!==p||s!==t[0]))if(r)n=!0;else{var o=p*i,l=o-i,h=o+i;for(let t=0;t!==i;++t){var u=e[o+t];if(u!==e[l+t]||u!==e[h+t]){n=!0;break}}}if(n){if(p!==a){t[a]=t[p];var c=p*i,d=a*i;for(let t=0;t!==i;++t)e[d+t]=e[c+t]}++a}}if(0<n){t[a]=t[n];for(let t=n*i,r=a*i,s=0;s!==i;++s)e[r+s]=e[t+s];++a}return a!==t.length?(this.times=so.arraySlice(t,0,a),this.values=so.arraySlice(e,0,a*i)):(this.times=t,this.values=e),this}clone(){var t=so.arraySlice(this.times,0),e=so.arraySlice(this.values,0);return(t=new this.constructor(this.name,t,e)).createInterpolant=this.createInterpolant,t}}co.prototype.TimeBufferType=Float32Array,co.prototype.ValueBufferType=Float32Array,co.prototype.DefaultInterpolation=2301;class po extends co{}po.prototype.ValueTypeName="bool",po.prototype.ValueBufferType=Array,po.prototype.DefaultInterpolation=2300,po.prototype.InterpolantFactoryMethodLinear=void 0,po.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends co{}).prototype.ValueTypeName="color";(class extends co{}).prototype.ValueTypeName="number";class fo extends oo{constructor(t,e,i,r){super(t,e,i,r)}interpolate_(t,e,i,r){var n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(i-e)/(r-e);let l=t*s;for(var h=l+s;l!==h;l+=4)vt.slerpFlat(n,0,a,l-s,a,l,o);return n}}class mo extends co{InterpolantFactoryMethodLinear(t){return new fo(this.times,this.values,this.getValueSize(),t)}}mo.prototype.ValueTypeName="quaternion",mo.prototype.DefaultInterpolation=2301,mo.prototype.InterpolantFactoryMethodSmooth=void 0;class go extends co{}go.prototype.ValueTypeName="string",go.prototype.ValueBufferType=Array,go.prototype.DefaultInterpolation=2300,go.prototype.InterpolantFactoryMethodLinear=void 0,go.prototype.InterpolantFactoryMethodSmooth=void 0;const vo={enabled:!(class extends co{}.prototype.ValueTypeName="vector"),files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};const xo=new class{constructor(t,e,i){const r=this;let n=!1,a=0,s=0,o=void 0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){s++,!1===n&&void 0!==r.onStart&&r.onStart(t,a,s),n=!0},this.itemEnd=function(t){a++,void 0!==r.onProgress&&r.onProgress(t,a,s),a===s&&(n=!1,void 0!==r.onLoad)&&r.onLoad()},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return o?o(t):t},this.setURLModifier=function(t){return o=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){return-1!==(t=l.indexOf(t))&&l.splice(t,2),this},this.getHandler=function(t){for(let r=0,n=l.length;r<n;r+=2){var e=l[r],i=l[r+1];if(e.global&&(e.lastIndex=0),e.test(t))return i}return null}}};class _o{constructor(t){this.manager=void 0!==t?t:xo,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const i=this;return new Promise((function(r,n){i.load(t,r,e,n)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}class yo extends _o{constructor(t){super(t)}load(t,e,i,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const n=this,a=vo.get(t);if(void 0!==a)return n.manager.itemStart(t),setTimeout((function(){e&&e(a),n.manager.itemEnd(t)}),0),a;const s=J("img");function o(){h(),vo.add(t,this),e&&e(this),n.manager.itemEnd(t)}function l(e){h(),r&&r(e),n.manager.itemError(t),n.manager.itemEnd(t)}function h(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),n.manager.itemStart(t),s.src=t,s}}class Mo extends _o{constructor(t){super(t)}load(t,e,i,r){const n=new Si,a=new yo(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;for(let i=0;i<t.length;++i)!function(i){a.load(t[i],(function(t){n.images[i]=t,6==++s&&(n.needsUpdate=!0,e)&&e(n)}),void 0,r)}(i);return n}}class So extends _o{constructor(t){super(t)}load(t,e,i,r){const n=new dt;var a=new yo(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,(function(t){n.image=t,n.needsUpdate=!0,void 0!==e&&e(n)}),i,r),n}}class wo extends ye{constructor(t,e=1){super(),this.type="Light",this.color=new st(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){return(t=super.toJSON(t)).object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}wo.prototype.isLight=!0;(class extends wo{constructor(t,e,i){super(t,i),this.type="HemisphereLight",this.position.copy(ye.DefaultUp),this.updateMatrix(),this.groundColor=new st(e)}copy(t){return wo.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}).prototype.isHemisphereLight=!0;const bo=new Jt,To=new xt,Ao=new xt;class Co{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new X(512,512),this.map=null,this.mapPass=null,this.matrix=new Jt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Pi,this._frameExtents=new X(1,1),this._viewportCount=1,this._viewports=[new pt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){var e=this.camera,i=this.matrix;To.setFromMatrixPosition(t.matrixWorld),e.position.copy(To),Ao.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Ao),e.updateMatrixWorld(),bo.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(bo),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(e.projectionMatrix),i.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){var t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Eo extends Co{constructor(){super(new yi(50,1,.5,500)),this.focus=1}updateMatrices(t){var e=this.camera,i=2*F*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,n=t.distance||e.far;i===e.fov&&r===e.aspect&&n===e.far||(e.fov=i,e.aspect=r,e.far=n,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}Eo.prototype.isSpotLightShadow=!0;(class extends wo{constructor(t,e,i=0,r=Math.PI/3,n=0,a=1){super(t,e),this.type="SpotLight",this.position.copy(ye.DefaultUp),this.updateMatrix(),this.target=new ye,this.distance=i,this.angle=r,this.penumbra=n,this.decay=a,this.shadow=new Eo}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}).prototype.isSpotLight=!0;const Lo=new Jt,Po=new xt,Do=new xt;class Io extends Co{constructor(){super(new yi(90,1,.5,500)),this._frameExtents=new X(4,2),this._viewportCount=6,this._viewports=[new pt(2,1,1,1),new pt(0,1,1,1),new pt(3,1,1,1),new pt(1,1,1,1),new pt(3,0,1,1),new pt(1,0,1,1)],this._cubeDirections=[new xt(1,0,0),new xt(-1,0,0),new xt(0,0,1),new xt(0,0,-1),new xt(0,1,0),new xt(0,-1,0)],this._cubeUps=[new xt(0,1,0),new xt(0,1,0),new xt(0,1,0),new xt(0,1,0),new xt(0,0,1),new xt(0,0,-1)]}updateMatrices(t,e=0){var i=this.camera,r=this.matrix,n=t.distance||i.far;n!==i.far&&(i.far=n,i.updateProjectionMatrix()),Po.setFromMatrixPosition(t.matrixWorld),i.position.copy(Po),Do.copy(i.position),Do.add(this._cubeDirections[e]),i.up.copy(this._cubeUps[e]),i.lookAt(Do),i.updateMatrixWorld(),r.makeTranslation(-Po.x,-Po.y,-Po.z),Lo.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Lo)}}Io.prototype.isPointLightShadow=!0;(class extends wo{constructor(t,e,i=0,r=1){super(t,e),this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new Io}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}).prototype.isPointLight=!0;class Ro extends Co{constructor(){super(new Wi(-5,5,5,-5,.5,500))}}Ro.prototype.isDirectionalLightShadow=!0;class No extends wo{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(ye.DefaultUp),this.updateMatrix(),this.target=new ye,this.shadow=new Ro}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}No.prototype.isDirectionalLight=!0;class zo extends wo{constructor(t,e){super(t,e),this.type="AmbientLight"}}zo.prototype.isAmbientLight=!0;(class extends wo{constructor(t,e,i=10,r=10){super(t,e),this.type="RectAreaLight",this.width=i,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){return(t=super.toJSON(t)).object.width=this.width,t.object.height=this.height,t}}).prototype.isRectAreaLight=!0;class Oo{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new xt)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){var i=t.x,r=t.y,n=(t=t.z,this.coefficients);return e.copy(n[0]).multiplyScalar(.282095),e.addScaledVector(n[1],.488603*r),e.addScaledVector(n[2],.488603*t),e.addScaledVector(n[3],.488603*i),e.addScaledVector(n[4],i*r*1.092548),e.addScaledVector(n[5],r*t*1.092548),e.addScaledVector(n[6],.315392*(3*t*t-1)),e.addScaledVector(n[7],i*t*1.092548),e.addScaledVector(n[8],.546274*(i*i-r*r)),e}getIrradianceAt(t,e){var i=t.x,r=t.y,n=(t=t.z,this.coefficients);return e.copy(n[0]).multiplyScalar(.886227),e.addScaledVector(n[1],1.023328*r),e.addScaledVector(n[2],1.023328*t),e.addScaledVector(n[3],1.023328*i),e.addScaledVector(n[4],.858086*i*r),e.addScaledVector(n[5],.858086*r*t),e.addScaledVector(n[6],.743125*t*t-.247708),e.addScaledVector(n[7],.858086*i*t),e.addScaledVector(n[8],.429043*(i*i-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){var i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(t,e+3*r);return this}toArray(t=[],e=0){var i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(t,e+3*r);return t}static getBasisAt(t,e){var i=t.x,r=t.y;t=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*t,e[3]=.488603*i,e[4]=1.092548*i*r,e[5]=1.092548*r*t,e[6]=.315392*(3*t*t-1),e[7]=1.092548*i*t,e[8]=.546274*(i*i-r*r)}}Oo.prototype.isSphericalHarmonics3=!0;class Uo extends wo{constructor(t=new Oo,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){return(t=super.toJSON(t)).object.sh=this.sh.toArray(),t}}Uo.prototype.isLightProbe=!0;(class extends Ye{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){var t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}).prototype.isInstancedBufferGeometry=!0,class extends Uo{constructor(t,e=1){super(void 0,e),e=(new st).set(t),this.sh.coefficients[0].set(e.r,e.g,e.b).multiplyScalar(2*Math.sqrt(Math.PI))}}.prototype.isAmbientLightProbe=class extends Uo{constructor(t,e,i=1){super(void 0,i);i=(new st).set(t),t=(new st).set(e),e=new xt(i.r,i.g,i.b),i=new xt(t.r,t.g,t.b);var r=(t=Math.sqrt(Math.PI))*Math.sqrt(.75);this.sh.coefficients[0].copy(e).add(i).multiplyScalar(t),this.sh.coefficients[1].copy(e).sub(i).multiplyScalar(r)}}.prototype.isHemisphereLightProbe=class extends _o{constructor(t){super(t),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,i,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const n=this,a=vo.get(t);if(void 0!==a)return n.manager.itemStart(t),setTimeout((function(){e&&e(a),n.manager.itemEnd(t)}),0),a;var s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(n.options,{colorSpaceConversion:"none"}))})).then((function(i){vo.add(t,i),e&&e(i),n.manager.itemEnd(t)})).catch((function(e){r&&r(e),n.manager.itemError(t),n.manager.itemEnd(t)})),n.manager.itemStart(t)}}.prototype.isImageBitmapLoader=!0;class Fo{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Bo(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;var e;return this.autoStart&&!this.running?(this.start(),0):(this.running&&(t=((e=Bo())-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t),t)}}function Bo(){return("undefined"==typeof performance?Date:performance).now()}i="\\[\\]\\.:\\/";const Vo=new RegExp("["+i+"]","g");e="[^"+i+"]",i="[^"+i.replace("\\.","")+"]";var ko=/((?:WC+[\/:])*)/.source.replace("WC",e),Go=(i=/(WCOD+)?/.source.replace("WCOD",i),/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",e));e=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",e);const Wo=new RegExp("^"+ko+i+Go+e+"$"),Ho=["material","materials","bones"];class jo{constructor(t,e,i){this.path=e,this.parsedPath=i||jo.parseTrackName(e),this.node=jo.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,i){return new(t&&t.isAnimationObjectGroup?jo.Composite:jo)(t,e,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Vo,"")}static parseTrackName(t){if(null===(i=Wo.exec(t)))throw new Error("PropertyBinding: Cannot parse trackName: "+t);var e,i,r=(i={nodeName:i[2],objectName:i[3],objectIndex:i[4],propertyName:i[5],propertyIndex:i[6]}).nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r&&(e=i.nodeName.substring(r+1),-1!==Ho.indexOf(e))&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=e),null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){var i=t.skeleton.getBoneByName(e);if(void 0!==i)return i}if(t.children){const r=function(t){for(let n=0;n<t.length;n++){var i=t[n];if(i.name===e||i.uuid===e)return i;if(i=r(i.children))return i}return null};if(i=r(t.children))return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){var i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)t[e++]=i[r]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){var i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=t[e++]}_setValue_array_setNeedsUpdate(t,e){var i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){var i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;var e=this.parsedPath,i=e.objectName,r=e.propertyName;let n=e.propertyIndex;if(t||(t=jo.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(i){let r=e.objectIndex;switch(i){case"materials":if(!t.material)return;if(!t.material.materials)return;t=t.material.materials;break;case"bones":if(!t.skeleton)return;t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===r){r=e;break}break;default:if(void 0===t[i])return;t=t[i]}if(void 0!==r){if(void 0===t[r])return;t=t[r]}}var a=t[r];if(void 0===a)e.nodeName;else{let e=this.Versioning.None,i=(void 0!==(this.targetObject=t).needsUpdate?e=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(e=this.Versioning.MatrixWorldNeedsUpdate),this.BindingType.Direct);if(void 0!==n){if("morphTargetInfluences"===r){if(!t.geometry)return;if(!t.geometry.isBufferGeometry)return;if(!t.geometry.morphAttributes)return;void 0!==t.morphTargetDictionary[n]&&(n=t.morphTargetDictionary[n])}i=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=n}else void 0!==a.fromArray&&void 0!==a.toArray?(i=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(i=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[i],this.setValue=this.SetterByBindingTypeAndVersioning[i][e]}}}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}jo.Composite=class{constructor(t,e,i){i=i||jo.parseTrackName(e),this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();var i=this._targetGroup.nCachedObjects_;void 0!==(i=this._bindings[i])&&i.getValue(t,e)}setValue(t,e){var i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,n=i.length;r!==n;++r)i[r].setValue(t,e)}bind(){var t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()}unbind(){var t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}},jo.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},jo.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},jo.prototype.GetterByBindingType=[jo.prototype._getValue_direct,jo.prototype._getValue_array,jo.prototype._getValue_arrayElement,jo.prototype._getValue_toArray],jo.prototype.SetterByBindingTypeAndVersioning=[[jo.prototype._setValue_direct,jo.prototype._setValue_direct_setNeedsUpdate,jo.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[jo.prototype._setValue_array,jo.prototype._setValue_array_setNeedsUpdate,jo.prototype._setValue_array_setMatrixWorldNeedsUpdate],[jo.prototype._setValue_arrayElement,jo.prototype._setValue_arrayElement_setNeedsUpdate,jo.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[jo.prototype._setValue_fromArray,jo.prototype._setValue_fromArray_setNeedsUpdate,jo.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1);class Xo{constructor(t,e,i=0,r=1/0){this.ray=new Yt(t,e),this.near=i,this.far=r,this.camera=null,this.layers=new se,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera&&(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e)}intersectObject(t,e=!0,i=[]){return Yo(t,this,i,e),i.sort(qo),i}intersectObjects(t,e=!0,i=[]){for(let r=0,n=t.length;r<n;r++)Yo(t[r],this,i,e);return i.sort(qo),i}}function qo(t,e){return t.distance-e.distance}function Yo(t,e,i,r){if(t.layers.test(e.layers)&&t.raycast(e,i),!0===r){var n=t.children;for(let t=0,r=n.length;t<r;t++)Yo(n[t],e,i,!0)}}const Jo=new xt,Zo=new Jt,Ko=new Jt;ko=new ArrayBuffer(4),new Float32Array(ko),new Uint32Array(ko);const Qo=new Uint32Array(512),$o=new Uint32Array(512);for(let t=0;t<256;++t){var tl=t-127;tl<-27?(Qo[t]=0,Qo[256|t]=32768,$o[t]=24,$o[256|t]=24):tl<-14?(Qo[t]=1024>>-tl-14,Qo[256|t]=1024>>-tl-14|32768,$o[t]=-tl-1,$o[256|t]=-tl-1):tl<=15?(Qo[t]=15+tl<<10,Qo[256|t]=15+tl<<10|32768,$o[t]=13,$o[256|t]=13):tl<128?(Qo[t]=31744,Qo[256|t]=64512,$o[t]=24,$o[256|t]=24):(Qo[t]=31744,Qo[256|t]=64512,$o[t]=13,$o[256|t]=13)}const el=new Uint32Array(2048),il=new Uint32Array(64),rl=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,i=0;for(;0==(8388608&e);)e<<=1,i-=8388608;e&=-8388609,i+=947912704,el[t]=e|i}for(let t=1024;t<2048;++t)el[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)il[t]=t<<23;il[31]=1199570944,il[32]=2147483648;for(let t=33;t<63;++t)il[t]=2147483648+(t-32<<23);il[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(rl[t]=1024);rs.create=function(t,e){return t.prototype=Object.create(rs.prototype),(t.prototype.constructor=t).prototype.getPoint=e,t},ws.prototype.fromPoints=function(t){return this.setFromPoints(t)},class extends Ja{constructor(t=10,e=10,i=4473924,r=8947848){i=new st(i),r=new st(r);var n=e/2,a=t/e,s=t/2,o=[],l=[];for(let t=0,u=0,c=-s;t<=e;t++,c+=a){o.push(-s,0,c,s,0,c),o.push(c,0,-s,c,0,s);var h=t===n?i:r;h.toArray(l,u),u+=3,h.toArray(l,u),u+=3,h.toArray(l,u),u+=3,h.toArray(l,u),u+=3}var u=((t=new Ye).setAttribute("position",new Ve(o,3)),t.setAttribute("color",new Ve(l,3)),new Va({vertexColors:!0,toneMapped:!1}));super(t,u),this.type="GridHelper"}}.prototype.setColors=function(){},class extends Ja{constructor(t){var e=function t(e){const i=[];!0===e.isBone&&i.push(e);for(let r=0;r<e.children.length;r++)i.push.apply(i,t(e.children[r]));return i}(t),i=new Ye,r=[],n=[],a=new st(0,0,1),s=new st(0,1,0);for(let t=0;t<e.length;t++){var o=e[t];o.parent&&o.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),n.push(a.r,a.g,a.b),n.push(s.r,s.g,s.b))}i.setAttribute("position",new Ve(r,3)),i.setAttribute("color",new Ve(n,3)),super(i,new Va({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){var e=this.bones,i=this.geometry,r=i.getAttribute("position");Ko.copy(this.root.matrixWorld).invert();for(let t=0,i=0;t<e.length;t++){var n=e[t];n.parent&&n.parent.isBone&&(Zo.multiplyMatrices(Ko,n.matrixWorld),Jo.setFromMatrixPosition(Zo),r.setXYZ(i,Jo.x,Jo.y,Jo.z),Zo.multiplyMatrices(Ko,n.parent.matrixWorld),Jo.setFromMatrixPosition(Zo),r.setXYZ(i+1,Jo.x,Jo.y,Jo.z),i+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){},_o.prototype.extractUrlBase=function(t){return class{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let i=0,r=t.length;i<r;i++)e+=String.fromCharCode(t[i]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){var e=t.lastIndexOf("/");return-1===e?"./":t.slice(0,e+1)}static resolveURL(t,e){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}.extractUrlBase(t)},_o.Handlers={add:function(){},get:function(){}},Mt.prototype.center=function(t){return this.getCenter(t)},Mt.prototype.empty=function(){return this.isEmpty()},Mt.prototype.isIntersectionBox=function(t){return this.intersectsBox(t)},Mt.prototype.isIntersectionSphere=function(t){return this.intersectsSphere(t)},Mt.prototype.size=function(t){return this.getSize(t)},ae.prototype.toVector3=function(){},Vt.prototype.empty=function(){return this.isEmpty()},Pi.prototype.setFromMatrix=function(t){return this.setFromProjectionMatrix(t)},q.prototype.flattenToArrayOffset=function(t,e){return this.toArray(t,e)},q.prototype.multiplyVector3=function(t){return t.applyMatrix3(this)},q.prototype.multiplyVector3Array=function(){},q.prototype.applyToBufferAttribute=function(t){return t.applyMatrix3(this)},q.prototype.applyToVector3Array=function(){},q.prototype.getInverse=function(t){return this.copy(t).invert()},Jt.prototype.extractPosition=function(t){return this.copyPosition(t)},Jt.prototype.flattenToArrayOffset=function(t,e){return this.toArray(t,e)},Jt.prototype.getPosition=function(){return(new xt).setFromMatrixColumn(this,3)},Jt.prototype.setRotationFromQuaternion=function(t){return this.makeRotationFromQuaternion(t)},Jt.prototype.multiplyToArray=function(){},Jt.prototype.multiplyVector3=function(t){return t.applyMatrix4(this)},Jt.prototype.multiplyVector4=function(t){return t.applyMatrix4(this)},Jt.prototype.multiplyVector3Array=function(){},Jt.prototype.rotateAxis=function(t){t.transformDirection(this)},Jt.prototype.crossVector=function(t){return t.applyMatrix4(this)},Jt.prototype.translate=function(){},Jt.prototype.rotateX=function(){},Jt.prototype.rotateY=function(){},Jt.prototype.rotateZ=function(){},Jt.prototype.rotateByAxis=function(){},Jt.prototype.applyToBufferAttribute=function(t){return t.applyMatrix4(this)},Jt.prototype.applyToVector3Array=function(){},Jt.prototype.makeFrustum=function(t,e,i,r,n,a){return this.makePerspective(t,e,r,i,n,a)},Jt.prototype.getInverse=function(t){return this.copy(t).invert()},Ci.prototype.isIntersectionLine=function(t){return this.intersectsLine(t)},vt.prototype.multiplyVector3=function(t){return t.applyQuaternion(this)},vt.prototype.inverse=function(){return this.invert()},Yt.prototype.isIntersectionBox=function(t){return this.intersectsBox(t)},Yt.prototype.isIntersectionPlane=function(t){return this.intersectsPlane(t)},Yt.prototype.isIntersectionSphere=function(t){return this.intersectsSphere(t)},De.prototype.area=function(){return this.getArea()},De.prototype.barycoordFromPoint=function(t,e){return this.getBarycoord(t,e)},De.prototype.midpoint=function(t){return this.getMidpoint(t)},De.prototypenormal=function(t){return this.getNormal(t)},De.prototype.plane=function(t){return this.getPlane(t)},De.barycoordFromPoint=function(t,e,i,r,n){return De.getBarycoord(t,e,i,r,n)},De.normal=function(t,e,i,r){return De.getNormal(t,e,i,r)},Ts.prototype.extractAllPoints=function(t){return this.extractPoints(t)},Ts.prototype.extrude=function(t){return new js(this,t)},Ts.prototype.makeGeometry=function(t){return new qs(this,t)},X.prototype.fromAttribute=function(t,e,i){return this.fromBufferAttribute(t,e,i)},X.prototype.distanceToManhattan=function(t){return this.manhattanDistanceTo(t)},X.prototype.lengthManhattan=function(){return this.manhattanLength()},xt.prototype.setEulerFromRotationMatrix=function(){},xt.prototype.setEulerFromQuaternion=function(){},xt.prototype.getPositionFromMatrix=function(t){return this.setFromMatrixPosition(t)},xt.prototype.getScaleFromMatrix=function(t){return this.setFromMatrixScale(t)},xt.prototype.getColumnFromMatrix=function(t,e){return this.setFromMatrixColumn(e,t)},xt.prototype.applyProjection=function(t){return this.applyMatrix4(t)},xt.prototype.fromAttribute=function(t,e,i){return this.fromBufferAttribute(t,e,i)},xt.prototype.distanceToManhattan=function(t){return this.manhattanDistanceTo(t)},xt.prototype.lengthManhattan=function(){return this.manhattanLength()},pt.prototype.fromAttribute=function(t,e,i){return this.fromBufferAttribute(t,e,i)},pt.prototype.lengthManhattan=function(){return this.manhattanLength()},ye.prototype.getChildByName=function(t){return this.getObjectByName(t)},ye.prototype.renderDepth=function(){},ye.prototype.translate=function(t,e){return this.translateOnAxis(e,t)},ye.prototype.getWorldRotation=function(){},ye.prototype.applyMatrix=function(t){return this.applyMatrix4(t)},Object.defineProperties(ye.prototype,{eulerOrder:{get:function(){return this.rotation.order},set:function(t){this.rotation.order=t}},useQuaternion:{get:function(){},set:function(){}}}),di.prototype.setDrawMode=function(){},Object.defineProperties(di.prototype,{drawMode:{get:function(){return b},set:function(){}}}),Na.prototype.initBones=function(){},yi.prototype.setLens=function(t,e){void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(wo.prototype,{onlyShadow:{set:function(){}},shadowCameraFov:{set:function(t){this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){}},shadowBias:{set:function(t){this.shadow.bias=t}},shadowDarkness:{set:function(){}},shadowMapWidth:{set:function(t){this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){this.shadow.mapSize.height=t}}}),Object.defineProperties(Ue.prototype,{length:{get:function(){return this.array.length}},dynamic:{get:function(){return this.usage===R},set:function(){this.setUsage(R)}}}),Ue.prototype.setDynamic=function(t){return this.setUsage(!0===t?R:I),this},Ue.prototype.copyIndicesArray=function(){},Ue.prototype.setArray=function(){},Ye.prototype.addIndex=function(t){this.setIndex(t)},Ye.prototype.addAttribute=function(t,e){return e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(this.setIndex(e),this):this.setAttribute(t,e):this.setAttribute(t,new Ue(e,arguments[2]))},Ye.prototype.addDrawCall=function(t,e,i){this.addGroup(t,e)},Ye.prototype.clearDrawCalls=function(){this.clearGroups()},Ye.prototype.computeOffsets=function(){},Ye.prototype.removeAttribute=function(t){return this.deleteAttribute(t)},Ye.prototype.applyMatrix=function(t){return this.applyMatrix4(t)},Object.defineProperties(Ye.prototype,{drawcalls:{get:function(){return this.groups}},offsets:{get:function(){return this.groups}}}),ua.prototype.setDynamic=function(t){return this.setUsage(!0===t?R:I),this},ua.prototype.setArray=function(){},js.prototype.getArrays=function(){},js.prototype.addShapeList=function(){},js.prototype.addShape=function(){},ha.prototype.dispose=function(){},class t{constructor(t){this.value=t="string"==typeof t?arguments[1]:t}clone(){return new t(void 0===this.value.clone?this.value:this.value.clone())}}.prototype.onUpdate=function(){return this},Object.defineProperties(Re.prototype,{wrapAround:{get:function(){},set:function(){}},overdraw:{get:function(){},set:function(){}},wrapRGB:{get:function(){return new st}},shading:{get:function(){},set:function(t){this.flatShading=1===t}},stencilMask:{get:function(){return this.stencilFuncMask},set:function(t){this.stencilFuncMask=t}},vertexTangents:{get:function(){},set:function(){}}}),Object.defineProperties(xi.prototype,{derivatives:{get:function(){return this.extensions.derivatives},set:function(t){this.extensions.derivatives=t}}}),sa.prototype.clearTarget=function(t,e,i,r){this.setRenderTarget(t),this.clear(e,i,r)},sa.prototype.animate=function(t){this.setAnimationLoop(t)},sa.prototype.getCurrentRenderTarget=function(){return this.getRenderTarget()},sa.prototype.getMaxAnisotropy=function(){return this.capabilities.getMaxAnisotropy()},sa.prototype.getPrecision=function(){return this.capabilities.precision},sa.prototype.resetGLState=function(){return this.state.reset()},sa.prototype.supportsFloatTextures=function(){return this.extensions.get("OES_texture_float")},sa.prototype.supportsHalfFloatTextures=function(){return this.extensions.get("OES_texture_half_float")},sa.prototype.supportsStandardDerivatives=function(){return this.extensions.get("OES_standard_derivatives")},sa.prototype.supportsCompressedTextureS3TC=function(){return this.extensions.get("WEBGL_compressed_texture_s3tc")},sa.prototype.supportsCompressedTexturePVRTC=function(){return this.extensions.get("WEBGL_compressed_texture_pvrtc")},sa.prototype.supportsBlendMinMax=function(){return this.extensions.get("EXT_blend_minmax")},sa.prototype.supportsVertexTextures=function(){return this.capabilities.vertexTextures},sa.prototype.supportsInstancedArrays=function(){return this.extensions.get("ANGLE_instanced_arrays")},sa.prototype.enableScissorTest=function(t){this.setScissorTest(t)},sa.prototype.initMaterial=function(){},sa.prototype.addPrePlugin=function(){},sa.prototype.addPostPlugin=function(){},sa.prototype.updateShadowMap=function(){},sa.prototype.setFaceCulling=function(){},sa.prototype.allocTextureUnit=function(){},sa.prototype.setTexture=function(){},sa.prototype.setTexture2D=function(){},sa.prototype.setTextureCube=function(){},sa.prototype.getActiveMipMapLevel=function(){return this.getActiveMipmapLevel()},Object.defineProperties(sa.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){this.shadowMap.type=t}},shadowMapCullFace:{get:function(){},set:function(){}},context:{get:function(){return this.getContext()}},vr:{get:function(){return this.xr}},gammaInput:{get:function(){return!1},set:function(){}},gammaOutput:{get:function(){return!1},set:function(t){this.outputEncoding=!0===t?E:C}},toneMappingWhitePoint:{get:function(){return 1},set:function(){}},gammaFactor:{get:function(){return 2},set:function(){}}}),Object.defineProperties(Jn.prototype,{cullFace:{get:function(){},set:function(){}},renderReverseSided:{get:function(){},set:function(){}},renderSingleSided:{get:function(){},set:function(){}}}),Object.defineProperties(ft.prototype,{wrapS:{get:function(){return this.texture.wrapS},set:function(t){this.texture.wrapS=t}},wrapT:{get:function(){return this.texture.wrapT},set:function(t){this.texture.wrapT=t}},magFilter:{get:function(){return this.texture.magFilter},set:function(t){this.texture.magFilter=t}},minFilter:{get:function(){return this.texture.minFilter},set:function(t){this.texture.minFilter=t}},anisotropy:{get:function(){return this.texture.anisotropy},set:function(t){this.texture.anisotropy=t}},offset:{get:function(){return this.texture.offset},set:function(t){this.texture.offset=t}},repeat:{get:function(){return this.texture.repeat},set:function(t){this.texture.repeat=t}},format:{get:function(){return this.texture.format},set:function(t){this.texture.format=t}},type:{get:function(){return this.texture.type},set:function(t){this.texture.type=t}},generateMipmaps:{get:function(){return this.texture.generateMipmaps},set:function(t){this.texture.generateMipmaps=t}}}),Mi.prototype.updateCubeMap=function(t,e){return this.update(t,e)},Mi.prototype.clear=function(t,e,i,r){return this.renderTarget.clear(t,e,i,r)},lt.crossOrigin=void 0,lt.loadTexture=function(t,e,i,r){var n=((n=new So).setCrossOrigin(this.crossOrigin),n.load(t,i,void 0,r));return e&&(n.mapping=e),n},lt.loadTextureCube=function(t,e,i,r){var n=((n=new Mo).setCrossOrigin(this.crossOrigin),n.load(t,i,void 0,r));return e&&(n.mapping=e),n},lt.loadCompressedTexture=function(){},lt.loadCompressedTextureCube=function(){},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"140"}})),"undefined"==typeof window||window.__THREE__||(window.__THREE__="140")}}]);